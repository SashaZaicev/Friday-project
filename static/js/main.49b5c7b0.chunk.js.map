{"version":3,"sources":["components/header/header.module.css","pages/p2-registration/ui/Registration.module.css","pages/p3-packs/ui/table.module.css","pages/p1-login/ui/login.module.css","pages/p3-packs/ui/Pack/pack.module.css","pages/p2-registration/ui/SInp/SInp.module.css","components/SuperComponents/SuperInput/SuperInputText.module.css","pages/p5-recoverPassword/recoverPassword.module.css","pages/p2-registration/ui/SBtn/SBtn.module.css","components/SuperComponents/SuperButton/SuperButton.module.css","pages/p6-newPassword/ui/newPassword.module.css","pages/p2-registration/ui/SCBox/SCBox.module.css","components/SuperComponents/SuperCheckbox/SuperCheckbox.module.css","pages/p3-profile/profile.module.css","pages/p8-tableFilter/ui/search.module.css","components/preloader/preloader.module.css","api/api.ts","pages/p2-registration/bll/registrationReducer.ts","pages/p2-registration/ui/SBtn/SBtn.tsx","pages/p2-registration/ui/SCBox/SCBox.tsx","pages/p2-registration/ui/SInp/SInp.tsx","components/preloader/PYh.gif","components/preloader/Preloader.tsx","pages/p2-registration/ui/Registration.tsx","components/SuperComponents/SuperInput/SuperInputText.tsx","components/SuperComponents/SuperCheckbox/SuperCheckbox.tsx","components/SuperComponents/SuperButton/SuperButton.tsx","pages/p5-recoverPassword/bll/recoverPasswordReducer.ts","pages/p1-login/bll/loginReducer.ts","pages/p1-login/ui/Login.tsx","pages/p6-newPassword/bll/newPasswordReducer.ts","pages/p6-newPassword/ui/NewPassword.tsx","pages/p3-profile/ui/Profile.tsx","pages/p5-recoverPassword/ui/RecoverPassword.tsx","pages/p4-404/ui/cat_standing_animated.gif","pages/p4-404/ui/Error404.tsx","pages/p8-tableFilter/bll/searchReducer.ts","pages/p3-packs/bll/packsReducer.ts","pages/p3-packs/ui/Pack/Pack.tsx","pages/p8-tableFilter/ui/MultiRangeSlider/MultiRangeSlider.tsx","pages/p8-tableFilter/ui/SearchTable.tsx","pages/p8-tableFilter/ui/Pagination/Pagination.tsx","pages/p8-tableFilter/ui/SortModule/SortModule.tsx","pages/p3-packs/ui/Packs.tsx","pages/p3-cards/ui/Cards.tsx","components/routes/Routes.tsx","components/header/Header.tsx","app/App.tsx","reportWebVitals.ts","pages/p3-profile/bll/profileReducer.ts","app/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","instance1","commonAPI","data","post","delete","login","password","email","from","message","newPassword","token","resetPasswordToken","min","max","searchName","page","pageCount","sortProducts","get","length","cardsPack","name","packId","put","_id","initialState","id","confirmPassword","isSuccess","rememberMe","error","loading","errorServer","SET_LOGIN","SET_ERROR","SET_ERR_SERV","SET_PASSWORD","SET_REPEAT_PASSWORD","SET_SUCCESS","SET_LOADING","SET_REMEMBER_ME","actionsRegistrations","type","err","SBtn","callFunction","red","className","restProps","finalClassName","s","default","nameButton","onClick","SCBox","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","e","currentTarget","checked","SInp","onChangeText","onKeyPress","onEnter","info","onChangeValue","value","finalSpanClassName","errorInput","superInput","content","key","Preloader","preloader","src","nya","alt","Registration","dispatch","useDispatch","useState","setLogin","setPassword","password2","setPassword2","setRememberMe","stateRegistrationIsSuccess","useSelector","state","registration","stateRegistrationError","stateLoading","to","PATH","LOGIN","errInputLogin","errInputPas","errInputPas2","checkInBlock","checkInTitle","style","color","help","placeholder","repeatPassword","checkInBtn","then","res","setTimeout","catch","er","console","log","response","finally","createUserTC","disabled","SuperInputText","SuperCheckbox","SuperButton","errorMessage","infoMessage","status","setStatusAC","infoMessageAC","errorMessageAC","isAuth","errorText","setIsLoggedInAC","setErrorTextAC","text","getAuthUserDataTC","payload","Login","setEmail","isLoggedIn","recoverPassword","PROFILE","flexMainContainer","answerServer","forgot","PASSWORD_RECOVERY","REGISTRATION","errorPassMessage","passwordStatus","errorPassMessageAC","setServerStatusAC","NewPassword","history","useHistory","setNewPassword","newPassword2","setNewPassword2","useParams","push","newPasswordTC","Profile","useEffect","avatar","RecoverPassword","changeEmailAC","recoverPasswordTC","Error404","logo","title","InitialState","tableProducts","items","settingsSearch","minPrice","maxPrice","productTotalCount","SET_SEARCH_NAME","SET_MIN_MAX_ITEM","SET_PAGE_COUNT","SET_TOTAL_COUNT","SET_SORT","actionsSearch","newPage","newPageCount","cardPacks","getPacksTC","getStore","search","packs","cardPacksTotalCount","Pack","pack","packDate","tableBody","tableBody_name","tableBody_cardsCount","cardsCount","tableBody_updated","tableBody_buttons","CARDS","MultiRangeSlider","store","values","setValues","setGlobalValues","newValues","step","renderTrack","props","onMouseDown","onTouchStart","height","display","width","margin","ref","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","index","isDragged","backgroundColor","justifyContent","alignItems","boxShadow","position","top","fontWeight","fontSize","fontFamily","padding","toFixed","SearchTable","searchTable","inputSearch","Pagination","getPage","paginationStyle","buttonStyle","selectStyle","pages","lastPage","Math","ceil","i","undefined","filter","p","minHeight","flexDirection","Number","marginRight","marginLeft","SortModule","arrayData","btnArrow","setBtnArrow","btnStyle","border","cursor","sortItem","x","sortIcon","Packs","newPacks","map","date","Date","updated","toLocaleDateString","table","tableHeader","tableHeader_packsName","tableHeader_cardsCount","tableHeader_updated","tableHeader_buttonAdd","Cards","HOME_PAGE","NEW_PASSWORD","TEST_COMPONENT","PACKS","ERROR_404","SEARCH_TABLE","Routes","exact","path","render","Header","header","item","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","profile","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49b5c7b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1MIiN\",\"item\":\"header_item__3Qsd2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkInBlock\":\"Registration_checkInBlock__37CH2\",\"checkInTitle\":\"Registration_checkInTitle__3TEZd\",\"checkInBtn\":\"Registration_checkInBtn__15ozI\",\"help\":\"Registration_help__3jHA9\",\"preloader\":\"Registration_preloader__18kJs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorText\":\"table_errorText__1s5Er\",\"table\":\"table_table__2pTFG\",\"tableHeader\":\"table_tableHeader__2109o\",\"tableHeader_packsName\":\"table_tableHeader_packsName__3gMzA\",\"tableHeader_cardsCount\":\"table_tableHeader_cardsCount__13obO\",\"tableHeader_updated\":\"table_tableHeader_updated__3dRYR\",\"tableHeader_buttonAdd\":\"table_tableHeader_buttonAdd__3bRYA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexMainContainer\":\"login_flexMainContainer__2c2Iv\",\"forgot\":\"login_forgot__A4vQ_\",\"error\":\"login_error__PzkPb\",\"preloader\":\"login_preloader__1I6Md\",\"answerServer\":\"login_answerServer__3Uj6t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableBody\":\"pack_tableBody__3T-d7\",\"tableBody_name\":\"pack_tableBody_name__3x6dN\",\"tableBody_cardsCount\":\"pack_tableBody_cardsCount__1BeWa\",\"tableBody_updated\":\"pack_tableBody_updated__1HBNm\",\"tableBody_buttons\":\"pack_tableBody_buttons__1BdDe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SInp_superInput__2pscb\",\"errorInput\":\"SInp_errorInput__zmMGM\",\"error\":\"SInp_error__2HSTs\",\"content\":\"SInp_content__1A0h8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__NEA4P\",\"errorInput\":\"SuperInputText_errorInput__28YHC\",\"error\":\"SuperInputText_error__3iE1R\",\"content\":\"SuperInputText_content__fTYMP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"recoverPassword_content__2b9qB\",\"error\":\"recoverPassword_error__1MkyL\",\"preloader\":\"recoverPassword_preloader__D2nPu\",\"answerServer\":\"recoverPassword_answerServer__3x3be\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SBtn_default__19WGv\",\"red\":\"SBtn_red__2vsnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2xbGp\",\"red\":\"SuperButton_red__1Jo-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"newPassword_content__RWvov\",\"preloader\":\"newPassword_preloader__6l8u1\",\"answerServer\":\"newPassword_answerServer__1mZ0s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SCBox_checkbox__5EX89\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__SwpSd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexMainContainer\":\"profile_flexMainContainer__WpkX-\",\"avatar\":\"profile_avatar__2BhIb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchTable\":\"search_searchTable__BUakW\",\"inputSearch\":\"search_inputSearch__25am4\",\"tableBlock\":\"search_tableBlock__3vAa3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__NKPnm\"};","import axios from 'axios'\r\nimport {LoginParamsType, loginResponseType} from \"../pages/p1-login/bll/loginReducer\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n})\r\n// baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n//http://localhost:7542/2.0/\r\n\r\nconst instance1 = axios.create({  // @@@ необходимо для проверки восстановления пароля @@@\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n})\r\nexport const commonAPI = {\r\n    login(data: LoginParamsType) {\r\n        return instance.post<loginResponseType>(('auth/login'), data)\r\n    },\r\n    logOut() {\r\n        return instance.delete(`auth/me`)\r\n    },\r\n    authMe() {\r\n        return instance.post<loginResponseType>(`auth/me`) // проверка на залогиненность\r\n    },\r\n    signup(login: string, password: string) {\r\n        return instance.post(`/auth/register/`, {\r\n            'email': login, 'password': password\r\n        })\r\n    },\r\n    recoverPassword(email: string, from: string, message: string) {\r\n        return instance1.post<ResponseType>('auth/forgot', {email, from, message});\r\n    },\r\n    changePassword(newPassword: string, token: string | undefined) {\r\n        return instance.post('auth/set-new-password', {password: newPassword, resetPasswordToken: token})\r\n    },\r\n    //packs-cards\r\n    getPacks(min: number, max: number, searchName: string, page?: number, pageCount?: number, sortProducts?: string) {\r\n        return instance.get<getPacksResponseType>(`cards/pack?`\r\n            + (max ? `min=${min}&max=${max}&` : '')\r\n            + (searchName.length > 0 ? `packName=${searchName}&` : '')\r\n            + (page ? `page=${page}&pageCount=${pageCount}&` : '')\r\n            + (sortProducts ? `sortProducts=${sortProducts}&` : ''))\r\n\r\n    },\r\n    addPack() {\r\n        return instance.post(`cards/pack`, {cardsPack: {name: 'new test pack'}})\r\n    },\r\n    deletePack(packId: string) {\r\n        return instance.delete(`cards/pack?id=${packId}`)\r\n    },\r\n    updatePack(packId: string, name?: string) {\r\n        return instance.put(`cards/pack`, {cardsPack: {_id: packId, name: 'test pack update'}})\r\n    }\r\n}\r\n\r\n\r\n//types\r\ntype ResponseType = {\r\n    info: string\r\n    error: ErrorType\r\n}\r\ntype ErrorType = {\r\n    error: string\r\n    email: string\r\n    emailRegExp: {}\r\n    in: string\r\n}\r\ntype getPacksResponseType = {\r\n    cardPacks: Array<PackType>\r\n    cardPacksTotalCount: number// количество колод\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number// выбранная страница\r\n    pageCount: number // количество элементов на странице\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\nexport type PackType = {\r\n    cardsCount: number\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    name: string\r\n    path: string\r\n    private: boolean\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    user_name: string\r\n    __v: number\r\n    _id: string\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {commonAPI} from \"../../../api/api\";\r\nimport {ActionsTypes, RegistrationUserType} from \"./storeRegistration\";\r\n\r\nexport const initialState = {\r\n    id: '1',\r\n    login: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    isSuccess: false,\r\n    rememberMe: false,\r\n    error: false,\r\n    loading: false,\r\n    errorServer: ''\r\n};\r\nconst SET_LOGIN = \"SET_LOGIN\"\r\nconst SET_ERROR = \"SET_ERROR\"\r\nconst SET_ERR_SERV = \"SET_ERR_SERV\"\r\nconst SET_PASSWORD = \"SET_PASSWORD\"\r\nconst SET_REPEAT_PASSWORD = \"SET_REPEAT_PASSWORD\"\r\nconst SET_SUCCESS = \"SET_SUCCESS\"\r\nconst SET_LOADING = \"SET_LOADING\"\r\nconst SET_REMEMBER_ME = \"SET_REMEMBER_ME\"\r\n\r\nexport const registrationReducer = (state: RegistrationUserType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case  SET_LOGIN: {\r\n            return {\r\n                ...state,\r\n                login: action.login\r\n            };\r\n        }\r\n        case  SET_PASSWORD: {\r\n            return {\r\n                ...state,\r\n                password: action.password\r\n            };\r\n        }\r\n        case  SET_REPEAT_PASSWORD: {\r\n            return {\r\n                ...state,\r\n                confirmPassword: action.repeatPassword\r\n            };\r\n        }\r\n        case  SET_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isSuccess: action.isSuccess\r\n            };\r\n        }\r\n        case  SET_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            };\r\n        }\r\n        case  SET_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        }\r\n        case  SET_ERR_SERV: {\r\n            return {\r\n                ...state,\r\n                errorServer: action.err\r\n            };\r\n        }\r\n        case SET_REMEMBER_ME: {\r\n            return {\r\n                ...state,\r\n                rememberMe: action.rememberMe\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actionsRegistrations = {\r\n    setLogin: (login: string) => ({type: SET_LOGIN, login}) as const,\r\n    postPassword: (password: string) => ({type: 'SET_PASSWORD', password}) as const,\r\n    postRepeatPassword: (repeatPassword: string) => ({type: 'SET_REPEAT_PASSWORD', repeatPassword}) as const,\r\n    setSuccess: (isSuccess: boolean) => ({type: 'SET_SUCCESS', isSuccess}) as const,\r\n    setLoading: (loading: boolean) => ({type: 'SET_LOADING', loading}) as const,\r\n    setError: (error: boolean) => ({type: SET_ERROR, error}) as const,\r\n    setErrServ: (err: string) => ({type: SET_ERR_SERV, err}) as const,\r\n    postRememberMe: (rememberMe: boolean) => ({type: 'SET_REMEMBER_ME', rememberMe}) as const,\r\n}\r\n\r\nexport const createUserTC = (login: string, password: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        commonAPI.signup(login, password)\r\n            .then(res => {\r\n                dispatch(actionsRegistrations.setLoading(false))\r\n                dispatch(actionsRegistrations.setSuccess(true))\r\n                setTimeout(() => dispatch(actionsRegistrations.setSuccess(false)), 3000)\r\n            })\r\n            .catch(er => {\r\n                console.log(er)\r\n\r\n                dispatch(actionsRegistrations.setErrServ(er.response.data.error))\r\n                setTimeout(() => dispatch(actionsRegistrations.setErrServ('')), 3000)\r\n            })\r\n            .finally(() => {\r\n                dispatch(actionsRegistrations.setLoading(false))\r\n            })\r\n        /*.catch(er => {\r\n            console.log(er)\r\n            dispatch(actionsRegistrations.setLoading(false))\r\n            dispatch(actionsRegistrations.setErrServ(er.response.data.error))\r\n            setTimeout(() => dispatch(actionsRegistrations.setErrServ('')), 3000)\r\n        })*/\r\n    }\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SBtn.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    name?: string\r\n    error?: string\r\n    red?: boolean\r\n    callFunction?: () => void //добавил для типизации функции\r\n}\r\n\r\nconst SBtn: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        callFunction,//добавил для вызова функции\r\n        red, className, name,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${s.default}`;\r\n    const nameButton = name ? name : \"click\"\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            onClick={() => callFunction ? callFunction() : \"\"} //изменил для приходящей функции\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >{nameButton}</button>\r\n    );\r\n}\r\n\r\nexport default SBtn;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SCBox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SCBox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SCBox;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SInp.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onChangeValue?: (value: string) => void // меняем в стейте на email пользователя\r\n    onEnter?: () => void\r\n    info?: string\r\n    error?: string\r\n    spanClassName?: string\r\n    value?: string\r\n};\r\n\r\nconst SInp: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        info,\r\n        error,\r\n        className, spanClassName,\r\n        onChangeValue,\r\n        value,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n        onChangeValue && onChangeValue(e.currentTarget.value) // меняем в стейте на email пользователя\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `{ ${error ? s.errorInput : s.superInput} ${className}`;\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div>\r\n                <input\r\n                    type={type}\r\n                    onChange={onChangeCallback}\r\n                    onKeyPress={onKeyPressCallback}\r\n                    className={finalInputClassName}\r\n                    value={value}\r\n\r\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                />\r\n            </div>\r\n            <div>\r\n                {error && <span className={finalSpanClassName}>{error}</span>}\r\n                {info && <span>{info}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SInp;\r\n","export default __webpack_public_path__ + \"static/media/PYh.b3402305.gif\";","import React from 'react'\r\nimport s from './preloader.module.css'\r\nimport nya from './PYh.gif'\r\n\r\n\r\nconst Preloader = () => {\r\n\r\n    return (\r\n        <div className={s.preloader}> {<img src={nya} alt={''}/>} </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import React, {useState} from 'react'\r\nimport s from './Registration.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    actionsRegistrations, createUserTC,\r\n} from \"../bll/registrationReducer\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport SBtn from \"./SBtn/SBtn\";\r\nimport SCBox from \"./SCBox/SCBox\";\r\nimport SInp from \"./SInp/SInp\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\nimport Preloader from \"../../../components/preloader/Preloader\";\r\n\r\nexport const Registration: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [login, setLogin] = useState('Alex@company.com')\r\n    const [password, setPassword] = useState('123456789')\r\n    const [password2, setPassword2] = useState('123456789')\r\n    const [rememberMe, setRememberMe] = useState(false)\r\n    const stateRegistrationIsSuccess = useSelector<AppRootStateType>(state => state.registration.isSuccess)\r\n    const stateRegistrationError = useSelector<AppRootStateType>(state => state.registration.error)\r\n    const errorServer = useSelector<AppRootStateType>(state => state.registration.errorServer)\r\n    const stateLoading = useSelector<AppRootStateType>(state => state.registration.loading)\r\n\r\n    const addUser = () => {\r\n\r\n        if (password !== '' && password2 !== '' && login !== '') {\r\n            if (password === password2) {\r\n                dispatch(createUserTC(login, password))\r\n                dispatch(actionsRegistrations.setLoading(true))\r\n            }\r\n        } else {\r\n            dispatch(actionsRegistrations.setError(true))\r\n            dispatch(actionsRegistrations.setSuccess(false))\r\n        }\r\n    }\r\n    //test server\r\n    // const time = Date.now()\r\n    // useEffect(() => {\r\n    //     timePing.ping(time)\r\n    // })\r\n    const onLoginChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let login = e.currentTarget.value\r\n        setLogin(login)\r\n    }\r\n\r\n    const onPasswordChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let password = e.currentTarget.value\r\n        setPassword(password)\r\n    }\r\n\r\n    const repeatOnPasswordChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let repeatPassword = e.currentTarget.value\r\n        setPassword2(repeatPassword)\r\n    }\r\n\r\n    const setRememberMeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let rememberMe = e.currentTarget.checked\r\n        setRememberMe(rememberMe)\r\n    }\r\n\r\n    if (stateRegistrationIsSuccess) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    const errInputLogin = (login === '' && stateRegistrationError) ? 'Обязательное поле' : '';\r\n    const errInputPas = (password === '' && stateRegistrationError) ? 'Обязательное поле' : '';\r\n    const errInputPas2 = (password2 === '' && stateRegistrationError) ? 'Обязательное поле' : '';\r\n    return (\r\n        <div className={s.checkInBlock}>\r\n            <div className={s.preloader}> {stateLoading\r\n                ? <Preloader/>\r\n                : \"\"\r\n            } </div>\r\n            <h2 className={s.checkInTitle}>Registration</h2>\r\n            {(stateRegistrationError || errorServer)\r\n                ? <div style={{color: 'red'}}> {errorServer ? errorServer : \"УПС ошибочка...\"}</div>\r\n                : stateRegistrationIsSuccess\r\n                    ? <div style={{color: 'lime'}}>Success!</div>\r\n                    : <div><br/></div>}\r\n            <label>Email:\r\n                <div className={s.help}>Example: Alex@company.com</div>\r\n                <SInp\r\n                    error={errInputLogin}\r\n                    value={login}\r\n                    onChange={onLoginChange}\r\n                    type={'email'}\r\n                    placeholder={'Alex@company.com'}/>\r\n            </label>\r\n            <label>Password:\r\n                <div className={s.help}>Example: Must be between\r\n                    8-20 character </div>\r\n                <SInp\r\n                    error={errInputPas}\r\n                    value={password}\r\n                    onChange={onPasswordChange}\r\n                    type={'password'}\r\n                    placeholder={'password'}\r\n                />\r\n            </label>\r\n            <label>Confirm password:\r\n                <div className={s.help}>Example: Must be between\r\n                    8-20 character </div>\r\n                <SInp\r\n                    error={errInputPas2}\r\n                    value={password2}\r\n                    onChange={repeatOnPasswordChange}\r\n                    type={'password'}\r\n                    placeholder={'confirm password'}\r\n                />\r\n            </label>\r\n            <div className={s.checkInBtn}>\r\n                <SBtn callFunction={addUser}\r\n                      name={'Register'}\r\n                      disabled={!!stateLoading}\r\n\r\n                />\r\n                <SCBox onChange={setRememberMeChange}/>\r\n            </div>\r\n            <NavLink to={PATH.LOGIN}>Sign In</NavLink>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    info?: string\r\n    error?: string\r\n    spanClassName?: string\r\n    value?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        info,\r\n        error,\r\n        className, spanClassName,\r\n        value,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `{ ${error ? s.errorInput : s.superInput} ${className}`;\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div>\r\n                <input\r\n                    type={type}\r\n                    onChange={onChangeCallback}\r\n                    onKeyPress={onKeyPressCallback}\r\n                    className={finalInputClassName}\r\n                    value={value}\r\n\r\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                />\r\n            </div>\r\n            <div>\r\n                {error && <span className={finalSpanClassName}>{error}</span>}\r\n                {info && <span>{info}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SuperInputText;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    name?: string\r\n    error?: string\r\n    red?: boolean\r\n    callFunction?: () => void //добавил для типизации функции\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        callFunction,//добавил для вызова функции\r\n        red, className, name,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${s.default}`;\r\n    const nameButton = name ? name : \"click\"\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            onClick={() => callFunction ? callFunction() : \"\"} //изменил для приходящей функции\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >{nameButton}</button>\r\n    );\r\n}\r\n\r\nexport default SuperButton;","import {Dispatch} from \"redux\";\r\nimport {commonAPI} from \"../../../api/api\";\r\n\r\nconst initialState = {\r\n    email: null as null || \"\",\r\n    from: \"ai73a@yandex.by\",\r\n  //  message: `<div style=\"background-color: #00ff00; padding: 15px\">password recovery link: <a href='https://nataliakirik.github.io/Friday-project/#/new-password/$token$'>link</a></div>`,\r\n    message: `<div style=\"background-color: #00ff00; padding: 15px\">password recovery link: <a href='http://localhost:3000/Friday-project#/new-password/$token$'>link</a></div>`, // @@@ необходимо для проверки восстановления пароля @@@\r\n    errorMessage: \"\",\r\n    infoMessage: \"\",\r\n    status: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const recoverPasswordReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"recoverPassword/CHANGE_EMAIL\": { // меняет значение email на пользовательский\r\n            return {...state, email: action.email}\r\n        }\r\n        case \"recoverPassword/SET_STATUS\": { // отображает крутилку :)\r\n            return {...state, status: action.status}\r\n        }\r\n        case \"recoverPassword/INFO_MESSAGE\": { // сообщение при успехе :р\r\n            return {...state, infoMessage: action.infoMessage}\r\n        }\r\n        case \"recoverPassword/ERROR_MESSAGE\": { // сообщение при наличии ошибки -_-\r\n            return {...state, errorMessage: action.errorMessage}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// action\r\nexport const changeEmailAC = (email: string) => ({type: \"recoverPassword/CHANGE_EMAIL\", email} as const);\r\nexport const setStatusAC = (status: boolean) => ({type: \"recoverPassword/SET_STATUS\", status} as const);\r\nexport const infoMessageAC = (infoMessage: string) => ({type: \"recoverPassword/INFO_MESSAGE\", infoMessage} as const);\r\nexport const errorMessageAC = (errorMessage: string) => ({type: \"recoverPassword/ERROR_MESSAGE\", errorMessage} as const);\r\n\r\n// thunks\r\nexport const recoverPasswordTC = (email: string, from: string, message: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(changeEmailAC(email))\r\n        console.log(email)\r\n        dispatch(setStatusAC(true))\r\n        commonAPI.recoverPassword(email, from, message)\r\n            .then((res) => {\r\n                dispatch(infoMessageAC(res.data.info))\r\n                console.log(\"then \" + res.data.info)\r\n                setTimeout(() => dispatch(infoMessageAC('')), 3000)\r\n            })\r\n            .catch((error) => {\r\n                dispatch(errorMessageAC(error.response.data.error))\r\n                console.log(\"error \" + error.response.data.error)\r\n                setTimeout(() => dispatch(errorMessageAC('')), 3000)\r\n            })\r\n            .finally(() => {\r\n                dispatch(setStatusAC(false))\r\n            })\r\n    }\r\n}\r\n\r\n// type\r\nexport type sentEmailActionType = ReturnType<typeof changeEmailAC>\r\nexport type setStatusActionType = ReturnType<typeof setStatusAC>\r\nexport type infoMessageActionType = ReturnType<typeof infoMessageAC>\r\nexport type errorMessageActionType = ReturnType<typeof errorMessageAC>\r\n\r\ntype ActionsType = sentEmailActionType | setStatusActionType | infoMessageActionType | errorMessageActionType\r\ntype ThunkDispatch = Dispatch<ActionsType>","import {Dispatch} from \"redux\";\r\nimport {commonAPI} from \"../../../api/api\";\r\nimport {setStatusAC, setStatusActionType} from \"../../p5-recoverPassword/bll/recoverPasswordReducer\";\r\n\r\nconst initialState = {\r\n    name: '',\r\n    isAuth: false,\r\n    errorText: '',\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET_ERROR-TEXT':\r\n            return {...state, errorText: action.text}\r\n        case 'login/SET-NAME':\r\n            return {...state, name: action.name}\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isAuth: action.value}\r\n        case 'login/SET_ME':\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n//actions\r\nexport const setIsLoggedInAC = (value: boolean) => ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\nexport const setNameAC = (name: string) => ({type: 'login/SET-NAME', name} as const)\r\nexport const setErrorTextAC = (text: string) => ({type: 'login/SET_ERROR-TEXT', text} as const)\r\nconst setAuthUserDataAC = (name: string, isAuth: boolean) => ({\r\n    type: 'login/SET_ME',\r\n    payload: {name, isAuth}\r\n} as const)\r\n\r\n// thunk\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setStatusAC(true))\r\n    commonAPI.login(data)\r\n        .then((res) => {\r\n                dispatch(setNameAC(res.data.name))\r\n                dispatch(setIsLoggedInAC(true))\r\n            }\r\n        )\r\n        .catch(err => {\r\n            dispatch(setIsLoggedInAC(false))\r\n            dispatch(setErrorTextAC(err.response.data.error))\r\n            setTimeout(() => dispatch(setErrorTextAC('')), 3000)\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC(false))\r\n        })\r\n}\r\n\r\nexport const logOutTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setStatusAC(true))\r\n    commonAPI.logOut()\r\n        .then(() => {\r\n                dispatch(setIsLoggedInAC(false))\r\n            }\r\n        )\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error)\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC(false))\r\n        })\r\n}\r\n\r\nexport const getAuthUserDataTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setStatusAC(true))\r\n    commonAPI.authMe()\r\n        .then(res => {\r\n            dispatch(setAuthUserDataAC(res.data.name, true))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            dispatch(setErrorTextAC(error))\r\n            setTimeout(() => dispatch(setErrorTextAC('')), 3000)\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC(false))\r\n        })\r\n}\r\n\r\n//types\r\ntype InitialStateType = typeof initialState\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nexport type loginResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport type setIsLoggedInACType = ReturnType<typeof setIsLoggedInAC>\r\nexport type setErrorTextACType = ReturnType<typeof setErrorTextAC>\r\nexport type setNameACType = ReturnType<typeof setNameAC>\r\nexport type setMeACType = ReturnType<typeof setAuthUserDataAC>\r\ntype ActionsType =\r\n    setIsLoggedInACType\r\n    | setErrorTextACType\r\n    | setNameACType\r\n    | setMeACType\r\n    | setStatusActionType\r\n","import React, {useState} from 'react'\r\nimport SuperInputText from \"../../../components/SuperComponents/SuperInput/SuperInputText\";\r\nimport s from './login.module.css'\r\nimport SuperCheckbox from \"../../../components/SuperComponents/SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../../../components/SuperComponents/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from '../../../app/store';\r\nimport {loginTC} from \"../bll/loginReducer\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\nimport Preloader from \"../../../components/preloader/Preloader\";\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    let [email, setEmail] = useState<string>('nya-admin@nya.nya')\r\n    let [password, setPassword] = useState<string>('1qazxcvBG')\r\n    let [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const error = useSelector<AppRootStateType, string>(state => state.login.errorText)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n    const status = useSelector<AppRootStateType, boolean>(state => state.recoverPassword.status)\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.flexMainContainer}>\r\n            <div className={s.preloader}>{ status ? <Preloader/> : \"\" }</div> {/*// крутилка*/}\r\n            <h2>Login Page</h2>\r\n                <div className={s.answerServer}>{error && <span className={s.error}>{error}</span>}</div>\r\n            <div>Email</div>\r\n            <div>\r\n                <SuperInputText onChangeText={(value) => {\r\n                    setEmail(value)\r\n                }}\r\n                                value={email}/>\r\n            </div>\r\n\r\n            <div>Password</div>\r\n            <div>\r\n                <SuperInputText type={\"password\"}\r\n                                value={password}\r\n                                onChangeText={(value) => {\r\n                                    setPassword(value)\r\n                                }}/>\r\n            </div>\r\n\r\n            <div>\r\n                <span>Remember me</span>\r\n                <SuperCheckbox checked={rememberMe}\r\n                               onChangeChecked={(value) => {\r\n                                   setRememberMe(value)\r\n                               }}/>\r\n            </div>\r\n\r\n            <div>\r\n                <SuperButton onClick={() => {\r\n                    dispatch(loginTC({email, password, rememberMe}))\r\n                }}\r\n                             name={\"Sign in\"}\r\n                             error={error}\r\n                />\r\n            </div>\r\n\r\n            <div className={s.forgot}>\r\n                <div>\r\n                    <NavLink to={PATH.PASSWORD_RECOVERY}>forgot password?</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to={PATH.REGISTRATION}>registration</NavLink>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {commonAPI} from \"../../../api/api\";\r\n\r\nconst initialState = {\r\n    errorPassMessage: \"\",\r\n    passwordStatus: false,\r\n    status: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"newPassword/ERROR_MESSAGE\": {\r\n            return {...state, errorPassMessage: action.errorPassMessage}\r\n        }\r\n        case \"newPassword/SET_PASS_STATUS\": {\r\n            return {...state, passwordStatus: action.passwordStatus}\r\n        }\r\n        case \"newPassword/SET_STATUS\": {\r\n            return {...state, status: action.status}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// action\r\nexport const errorPassMessageAC = (errorPassMessage: string) => ({type: \"newPassword/ERROR_MESSAGE\", errorPassMessage} as const);\r\nexport const setPasswordStatusAC = (passwordStatus: boolean) => ({type: \"newPassword/SET_PASS_STATUS\", passwordStatus} as const);\r\nexport const setServerStatusAC = (status: boolean) => ({type: \"newPassword/SET_STATUS\", status} as const);\r\n\r\n\r\n// thunks\r\nexport const newPasswordTC = (newPassword: string, token: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setServerStatusAC(true))\r\n        console.log(newPassword)\r\n        console.log(token)\r\n        commonAPI.changePassword(newPassword, token)\r\n            .then((res) => {\r\n                dispatch(setPasswordStatusAC(true))\r\n                console.log(\"в then все ок\")\r\n            })\r\n            .catch((error) => {\r\n                dispatch(errorPassMessageAC(error.message))\r\n                console.log(\"error \" + error.message)\r\n            })\r\n            .finally(() => {\r\n                dispatch(setServerStatusAC(false))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n// type\r\nexport type errorPassMessageActionType = ReturnType<typeof errorPassMessageAC>\r\nexport type setPasswordStatusActionType = ReturnType<typeof setPasswordStatusAC>\r\nexport type setServerStatusActionType = ReturnType<typeof setServerStatusAC>\r\n\r\ntype ActionsType = errorPassMessageActionType | setPasswordStatusActionType | setServerStatusActionType\r\ntype ThunkDispatch = Dispatch<ActionsType>","import React, {useState} from 'react'\r\nimport {useParams, useHistory} from 'react-router-dom';\r\nimport SuperInputText from \"../../../components/SuperComponents/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../../../components/SuperComponents/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {errorPassMessageAC, newPasswordTC} from \"../bll/newPasswordReducer\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\nimport Preloader from \"../../../components/preloader/Preloader\";\r\nimport s from \"./newPassword.module.css\"\r\n\r\n\r\nexport const NewPassword = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n\r\n    const [newPassword, setNewPassword] = useState<string>('')\r\n    const [newPassword2, setNewPassword2] = useState<string>('')\r\n    const {token} = useParams<{ token: string }>()\r\n    const passwordStatus = useSelector<AppRootStateType, boolean>(state => state.newPassword.passwordStatus)\r\n    const errorPassMessage = useSelector<AppRootStateType, string>(state => state.newPassword.errorPassMessage)\r\n    const status = useSelector<AppRootStateType, boolean>(state => state.newPassword.status)\r\n\r\n    const redirectLogin = () => history.push(PATH.LOGIN)\r\n\r\n    const onChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let newPassword = e.currentTarget.value\r\n        setNewPassword(newPassword)\r\n    }\r\n\r\n    const repeatOnChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let newPassword2 = e.currentTarget.value\r\n        setNewPassword2(newPassword2)\r\n    }\r\n\r\n    const onChangePassword = () => {\r\n        if (newPassword.length > 7) {\r\n            if (newPassword === newPassword2) {\r\n                dispatch(newPasswordTC(newPassword, token))\r\n            } else {\r\n                (dispatch(errorPassMessageAC(\"Passwords don't match\")))\r\n                setTimeout(() => dispatch(errorPassMessageAC('')), 3000)\r\n            }\r\n        } else {\r\n            dispatch(errorPassMessageAC(\"Password must be 8 or more characters\"))\r\n            setTimeout(() => dispatch(errorPassMessageAC('')), 3000)\r\n        }\r\n    }\r\n\r\n    if (passwordStatus) setTimeout(redirectLogin, 2000)\r\n\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.preloader}>{status ? <Preloader/> : \"\"}</div>\r\n            <h2> NewPassword </h2>\r\n            <div className={s.answerServer}> {errorPassMessage} </div>\r\n            <div> Enter your new password </div>\r\n            <SuperInputText type={'password'} placeholder={'password'} value={newPassword} onChange={onChange}/>\r\n            <div> Repeat your new password </div>\r\n            <SuperInputText type={'password'} placeholder={'password'} value={newPassword2} onChange={repeatOnChange}/>\r\n            <SuperButton name={'New Password'} callFunction={onChangePassword}/>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport SuperButton from \"../../../components/SuperComponents/SuperButton/SuperButton\";\r\nimport {getAuthUserDataTC, logOutTC} from \"../../p1-login/bll/loginReducer\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\nimport s from \"./../profile.module.css\"\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useDispatch()\r\n    const name = useSelector<AppRootStateType, string>(state => state.login.name)\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n\r\n\r\n    useEffect(() => {\r\n        if (isAuth) return\r\n        dispatch(getAuthUserDataTC())\r\n    }, [])\r\n\r\n\r\n    if (!isAuth) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    return (\r\n        <div className={s.flexMainContainer}>\r\n            Profile user {name}\r\n            <div>\r\n                <SuperButton name={'log out'} onClick={() => {\r\n                    dispatch(logOutTC())\r\n                }}/>\r\n            </div>\r\n            <div className={s.avatar}>\r\n                <img src=\"https://shutniki.club/wp-content/uploads/2020/01/smeshnye_avatarki_34_17105705.jpg\" alt={\"avatar\"}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport s from './../recoverPassword.module.css'\r\nimport SuperInputText from \"../../../components/SuperComponents/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../../../components/SuperComponents/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {recoverPasswordTC} from \"../bll/recoverPasswordReducer\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport Preloader from \"../../../components/preloader/Preloader\";\r\n\r\nexport const RecoverPassword = () => {\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState<string>('')\r\n\r\n    const from = useSelector<AppRootStateType, string>(state => state.recoverPassword.from)\r\n    const message = useSelector<AppRootStateType, string>(state => state.recoverPassword.message)\r\n    const info = useSelector<AppRootStateType, string>(state => state.recoverPassword.infoMessage)\r\n    const error = useSelector<AppRootStateType, string>(state => state.recoverPassword.errorMessage)\r\n    const status = useSelector<AppRootStateType, boolean>(state => state.recoverPassword.status)\r\n    const recoverPassword = (setEmail: string, from: string, message: string) => {\r\n        dispatch(recoverPasswordTC(setEmail, from, message))\r\n    }\r\n\r\n    const onChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let email = e.currentTarget.value\r\n        setEmail(email)\r\n    }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.preloader}>{ status ? <Preloader/> : \"\" }</div> {/*// крутилка*/}\r\n            <h2> Enter your email </h2>\r\n            <div>\r\n                <div className={s.answerServer}> {error && <span className={s.error}>{error}</span>}\r\n                    {info && <span>{info}</span>} </div>\r\n                <SuperInputText type={'text'}\r\n                                value={email}\r\n                                onChange={onChange}/>\r\n            </div>\r\n            <div>\r\n                <SuperButton name={\"Recover password\"}\r\n                             onClick={() => recoverPassword(email, from, message)}\r\n                             disabled={status}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/cat_standing_animated.7a5695a9.gif\";","import React from \"react\";\r\nimport logo from './cat_standing_animated.gif'\r\nimport {Redirect, Link} from \"react-router-dom\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\n\r\nexport const Error404 = () => {\r\n\r\n    return (\r\n        <div style={{\r\n            \"display\": \"grid\",\r\n            \"gridTemplateColumns\": \"40% 40% 20%\",\r\n            \"gridTemplateRows\": \"33% 33% 33%\",\r\n        }}>\r\n            <img style={{\r\n                \"width\": \"32%\",\r\n                \"gridColumn\": \"1/5\",\r\n                \"gridRow\": \"3/2\",\r\n            }} src={logo} alt={\"404 error cat\"}/>\r\n            <h1 style={{\r\n                \"marginBottom\": \"0.5rem\",\r\n                \"color\": \"#e32\",\r\n                \"fontSize\": \"4rem\",\r\n                \"lineHeight\": \"4.15rem\",\r\n                \"gridColumn\": \"2/5\",\r\n                \"gridRow\": \"1/2\",\r\n            }}>Oops.</h1>\r\n            <h2 style={{\r\n                \"gridArea\": \"2 / 2 / 2 / 5\",\r\n                \"color\": \"#e32\",\r\n                \"marginTop\": 0,\r\n            }}>We can't find the page you're looking for.</h2>\r\n            <p style={{\r\n                \"gridArea\": \"3 / 2 / 2 / 3\",\r\n                \"margin\": \"38px 0 0 0\",\r\n            }}>It may have expired, or there could be a typo. Maybe you can find what you need from our homepage.\r\n            </p>\r\n            <button title={'Go to LOGIN PAGE'} onClick={() => <Redirect to={PATH.LOGIN}/>} style={{\r\n                \"gridArea\": \"3 / 2 / 4 / 3\",\r\n                \"fontSize\": \"300%\",\r\n                \"width\": \"85%\",\r\n                \"height\": \"62%\",\r\n            }}><Link style={{\r\n                \"textDecoration\": \"none\",\r\n                \"color\": \"black\",\r\n            }} to=\"/\">—ฅ/ᐠ.̫ .ᐟ\\ฅ—</Link>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\n\r\nexport interface IItemsTable {\r\n    id: string;\r\n    itemName: string;\r\n    price: number;\r\n}\r\n\r\nexport interface IItemsSettings {\r\n    minPrice: number;\r\n    maxPrice: number;\r\n    min: number;\r\n    max: number;\r\n\r\n    searchName: string;\r\n    sortProducts: string;\r\n\r\n    productTotalCount: number;\r\n    page: number;\r\n    pageCount: number;\r\n}\r\n\r\nexport interface ITableState {\r\n    tableProducts: {\r\n        items: IItemsTable[];\r\n        settingsSearch: IItemsSettings;\r\n        loading: boolean\r\n    };\r\n}\r\n\r\nexport const InitialState: ITableState = {\r\n    tableProducts: {\r\n        items: [\r\n            // {itemName: 'qwertt', price: 1220, id: 'qwer1121'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer1522'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer12523'},\r\n            // {itemName: 'dfdstt', price: 8800, id: 'qwer1224'},\r\n            // {itemName: 'qwertt', price: 1220, id: 'qwer1125'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer1526'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer12527'},\r\n            // {itemName: 'dfdstt', price: 8800, id: 'qwer1228'},\r\n            // {itemName: 'qwertt', price: 1220, id: 'qwer1129'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer1520'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer125210'},\r\n            // {itemName: 'dfdstt', price: 8800, id: 'qwer12211'},\r\n            // {itemName: 'qwertt', price: 1220, id: 'qwer11212'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer15213'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer125214'},\r\n            // {itemName: 'dfdstt', price: 8800, id: 'qwer12215'},\r\n        ],\r\n        settingsSearch: {\r\n            minPrice: 0,\r\n            maxPrice: 1000,\r\n            min: 0,\r\n            max: 1000,\r\n\r\n            searchName: '',\r\n\r\n            sortProducts: '',\r\n\r\n            productTotalCount: 10,\r\n            page: 1,\r\n            pageCount: 10,\r\n        },\r\n        loading: false\r\n    },\r\n\r\n};\r\nconst SET_SEARCH_NAME = \"SET_SEARCH_NAME\"\r\nconst SET_LOADING = \"SET_LOADING\"\r\nconst SET_MIN_MAX_ITEM = \"SET_MIN_MAX_ITEM\"\r\nconst SET_PAGE_COUNT = \"SET_PAGE_COUNT\"\r\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\"\r\nconst SET_SORT = \"SET_SORT\"\r\n\r\n\r\nexport const searchReducer = (state = InitialState, action: any) => {\r\n    switch (action.type) {\r\n        case  SET_SEARCH_NAME: {\r\n            return {\r\n                ...state,\r\n                tableProducts: {\r\n                    ...state.tableProducts,\r\n                    settingsSearch: {\r\n                        ...state.tableProducts.settingsSearch, searchName: action.searchName\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case SET_LOADING: {\r\n            return {\r\n                ...state,\r\n                tableProducts: {\r\n                    ...state.tableProducts,\r\n                    loading: action.loading\r\n                }\r\n            }\r\n        }\r\n        case SET_MIN_MAX_ITEM: {\r\n            return {\r\n                ...state,\r\n                tableProducts: {\r\n                    ...state.tableProducts,\r\n                    settingsSearch: {\r\n                        ...state.tableProducts.settingsSearch, min: action.min, max: action.max\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case SET_PAGE_COUNT: {\r\n            return {\r\n                ...state,\r\n                tableProducts: {\r\n                    ...state.tableProducts,\r\n                    settingsSearch: {\r\n                        ...state.tableProducts.settingsSearch,page: action.newPage, pageCount: action.newPageCount\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n            return {\r\n                ...state,\r\n                tableProducts: {\r\n                    ...state.tableProducts,\r\n                    settingsSearch: {\r\n                        ...state.tableProducts.settingsSearch,productTotalCount: action.productTotalCount\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case SET_SORT: {\r\n            return {\r\n                ...state,\r\n                tableProducts: {\r\n                    ...state.tableProducts,\r\n                    settingsSearch: {\r\n                        ...state.tableProducts.settingsSearch,sortProducts: action.sortProducts\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actionsSearch = {\r\n    setSearchName: (searchName: string) => ({type: SET_SEARCH_NAME, searchName}) as const,\r\n    setLoading: (loading: boolean) => ({type: SET_LOADING, loading}) as const,\r\n    setMinMax:(min: number, max: number) =>({type:SET_MIN_MAX_ITEM, min, max}) as const,\r\n    setPageCount:(newPage:number , newPageCount: number) =>({type:SET_PAGE_COUNT,newPage, newPageCount}) as const,\r\n    setProductTotalCount:(productTotalCount: number) =>({type:SET_TOTAL_COUNT, productTotalCount}) as const,\r\n    setSort:(sortProducts:string) => ({type: SET_SORT, sortProducts}) as const,\r\n\r\n}\r\n\r\nexport const getSearch = (newPage?: number, newPageCount?: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(actionsSearch.setLoading(true))\r\n        // console.log('helo')\r\n        // tableApi.getTableItems().then(response=>{\r\n        // })\r\n    }\r\n}\r\n","import {commonAPI, PackType} from \"../../../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {actionsSearch} from \"../../p8-tableFilter/bll/searchReducer\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {setStatusAC, setStatusActionType} from \"../../p5-recoverPassword/bll/recoverPasswordReducer\";\r\n\r\nexport const initialState = {\r\n    cardPacks: [] as Array<PackType>,\r\n//    isSuccess: true\r\n}\r\n\r\nexport const packsReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case'packs/SET-PACKS':\r\n            return {...state, cardPacks: action.packs}\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n//AC\r\nexport const setPacksAC = (packs: Array<PackType>) => ({type: 'packs/SET-PACKS', packs} as const)\r\ntype GetStore = () => AppRootStateType\r\n\r\n//thunk\r\nexport const getPacksTC = (newPage?: number, newPageCount?: number) => (dispatch: Dispatch, getStore: GetStore) => {\r\n    const {min, max, searchName, page, pageCount, sortProducts} = getStore().search.tableProducts.settingsSearch\r\n    dispatch(setStatusAC(true))\r\n    commonAPI.getPacks(min, max, searchName, newPage || page, newPageCount || pageCount, sortProducts)\r\n        .then(res => {\r\n            dispatch(setPacksAC(res.data.cardPacks))\r\n            dispatch(actionsSearch.setProductTotalCount(res.data.cardPacksTotalCount))\r\n        })\r\n        .catch(err => {\r\n            console.log('some err in getPacks');\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC(false))\r\n        })\r\n}\r\n\r\nexport const addPackTC = () => (dispatch: ThunkDispatch<AppRootStateType, void, setPacksACType>) => {\r\n    commonAPI.addPack()\r\n        .then(() => {\r\n            dispatch(getPacksTC())\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error);\r\n        })\r\n}\r\nexport const deletePackTC = (packId: string) => (dispatch: ThunkDispatch<AppRootStateType, void, setPacksACType>) => {\r\n    commonAPI.deletePack(packId)\r\n        .then(() => {\r\n            dispatch(getPacksTC())\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error);\r\n\r\n        })\r\n}\r\n\r\nexport const updatePackTC = (packId: string, name?: string) => (dispatch: ThunkDispatch<AppRootStateType, void, setPacksACType>) => {\r\n    commonAPI.updatePack(packId, name)\r\n        .then(() => {\r\n            dispatch(getPacksTC())\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error);\r\n\r\n        })\r\n}\r\n\r\n\r\n//types\r\ntype InitialStateType = typeof initialState\r\ntype ActionsTypes = setPacksACType | setStatusActionType\r\ntype setPacksACType = ReturnType<typeof setPacksAC>\r\n\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../../../components/routes/Routes\";\r\nimport {PackType} from \"../../../../api/api\";\r\nimport s from './pack.module.css'\r\nimport {deletePackTC, updatePackTC} from \"../../bll/packsReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype PackPropsType = {\r\n    pack: PackType\r\n    packDate: string // для нового типа даты\r\n}\r\n\r\nexport const Pack = ({pack, packDate}: PackPropsType) => {\r\n    const dispatch = useDispatch()\r\n    const onBtnDeletePack = () => {\r\n        dispatch(deletePackTC(pack._id))\r\n    }\r\n    const onBtnUpdatePack = () => {\r\n        dispatch(updatePackTC(pack._id))\r\n    }\r\n    return <>\r\n        <div className={s.tableBody}>\r\n            <div className={s.tableBody_name}>{pack.name}</div>\r\n            <div className={s.tableBody_cardsCount}>{pack.cardsCount}</div>\r\n            <div className={s.tableBody_updated}>{packDate}</div>\r\n            <div className={s.tableBody_buttons}>\r\n                <button onClick={onBtnDeletePack}>del</button>\r\n                <button onClick={onBtnUpdatePack}>update</button>\r\n                <NavLink to={PATH.CARDS}>cards</NavLink>\r\n            </div>\r\n        </div>\r\n    </>\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {Range, getTrackBackground} from 'react-range';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../app/store\";\r\nimport {actionsSearch} from \"../../bll/searchReducer\";\r\n\r\n\r\nconst MultiRangeSlider: React.FC = () => {\r\n    const {tableProducts} = useSelector((store: AppRootStateType) => store.search);\r\n    const {minPrice, maxPrice} = tableProducts.settingsSearch;\r\n    const [values, setValues] = useState([minPrice, maxPrice]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const setGlobalValues = (newValues: number[]) => {\r\n        dispatch(actionsSearch.setMinMax(newValues[0], newValues[1]));\r\n        setValues(newValues);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setGlobalValues([minPrice, maxPrice]);\r\n    }, [minPrice, maxPrice]);\r\n\r\n    return (\r\n        <Range\r\n            values={values}\r\n            step={1}\r\n            min={minPrice}\r\n            max={maxPrice}\r\n            onChange={values => setGlobalValues(values)}\r\n            renderTrack={({props, children}) => (\r\n                <div\r\n                    onMouseDown={props.onMouseDown}\r\n                    onTouchStart={props.onTouchStart}\r\n                    style={{\r\n                        ...props.style,\r\n                        height: '36px',\r\n                        display: 'flex',\r\n                        width: '90%',\r\n                        margin: '5%',\r\n                    }}\r\n                >\r\n                    <div\r\n                        ref={props.ref}\r\n                        style={{\r\n                            height: '5px',\r\n                            width: '100%',\r\n                            borderRadius: '4px',\r\n                            background: getTrackBackground({\r\n                                values: values,\r\n                                colors: ['#ccc', '#548BF4', '#ccc'],\r\n                                min: minPrice,\r\n                                max: maxPrice\r\n                            }),\r\n                            alignSelf: 'center'\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            renderThumb={({index, props, isDragged}) => (\r\n                <div\r\n                    {...props}\r\n                    style={{\r\n                        ...props.style,\r\n                        height: '12px',\r\n                        width: '12px',\r\n                        borderRadius: '1px',\r\n                        backgroundColor: '#FFF',\r\n\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        display: 'flex',\r\n\r\n                        boxShadow: '0px 2px 6px #AAA',\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            position: 'absolute',\r\n                            top: '-28px',\r\n                            color: '#fff',\r\n                            fontWeight: 'bold',\r\n                            fontSize: '14px',\r\n                            fontFamily: 'Arial,Helvetica Neue,Helvetica,sans-serif',\r\n                            padding: '4px',\r\n                            borderRadius: '4px',\r\n                            backgroundColor: '#548BF4'\r\n                        }}\r\n                    >\r\n                        {values[index].toFixed(0)}\r\n                    </div>\r\n                    <div style={{height: '16px', width: '5px', backgroundColor: isDragged ? '#548BF4' : '#CCC'}}/>\r\n                </div>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default MultiRangeSlider;","import React, {useState} from 'react';\r\nimport s from './search.module.css'\r\nimport {actionsSearch, getSearch} from \"../bll/searchReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport MultiRangeSlider from \"./MultiRangeSlider/MultiRangeSlider\";\r\nimport Pagination from \"./Pagination/Pagination\";\r\nimport {getPacksTC} from \"../../p3-packs/bll/packsReducer\";\r\n\r\n\r\nconst SearchTable = () => {\r\n    const dispatch = useDispatch()\r\n    const {tableProducts} = useSelector((state: AppRootStateType) => state.search)\r\n    const {page, pageCount, productTotalCount} = tableProducts.settingsSearch\r\n    const tableSearch = (searchName: string) => {\r\n        dispatch(actionsSearch.setSearchName(searchName))\r\n    }\r\n\r\n    const getResult = () => {\r\n        dispatch(getPacksTC())\r\n    }\r\n\r\n    return (\r\n        <div className={s.searchTable}>\r\n            <div>\r\n                <input className={s.inputSearch}\r\n                       value={tableProducts.settingsSearch.searchName}\r\n                       onChange={(e) => tableSearch(e.currentTarget.value)} type=\"text\"\r\n                       placeholder={'Введите значение для поиска'}\r\n                />\r\n            </div>\r\n            <div style={{\r\n                width: \"50%\"\r\n            }}><MultiRangeSlider/></div>\r\n            <div>\r\n                <button onClick={getResult}>Поиск (Search)</button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default SearchTable","import React, {CSSProperties, ReactNode} from 'react';\r\nimport {isNumber} from \"util\";\r\n\r\ninterface IPaginationProps {\r\n    page: number;\r\n    pageCount: number;\r\n    productTotalCount: number;\r\n    getPage: (newPage: number, newPageCount: number) => void;\r\n\r\n    title?: ReactNode;\r\n    paginationStyle?: CSSProperties;\r\n    buttonStyle?: CSSProperties;\r\n    selectStyle?: CSSProperties;\r\n}\r\n\r\nconst Pagination: React.FC<IPaginationProps> = (\r\n    {\r\n        page, pageCount, productTotalCount, getPage,\r\n\r\n        title = 'Pagination ', paginationStyle,\r\n        buttonStyle, selectStyle\r\n    }\r\n) => {\r\n    let pages = [];\r\n    const lastPage = Math.ceil(productTotalCount / pageCount)\r\n\r\n    for (let i = 1; i <= lastPage; i++) pages.push((\r\n        <button\r\n            key={i}\r\n            style={{background: page === i ? 'lime' : undefined, ...buttonStyle}}\r\n            onClick={() => getPage(i, pageCount)}\r\n        >\r\n            {i}\r\n        </button>\r\n    ));\r\n\r\n    if ((page + 4) < lastPage) {\r\n        pages[page + 2] = (\r\n            <span key={page + 3} style={buttonStyle}>\r\n                - ... -\r\n            </span>\r\n        );\r\n        pages = pages.filter((p, i) => i < (page + 3) || i === (lastPage - 1));\r\n    }\r\n    if (page > 5) {\r\n        pages[1] = (\r\n            <span key={2} style={buttonStyle}>\r\n                - ... -\r\n            </span>\r\n        );\r\n        pages = pages.filter((p, i) => i < 2 || i > page - 4);\r\n    }\r\n    const prevPage = () => {\r\n        getPage(page - 1, pageCount);\r\n        // if ((currentPage - 1) % pageNumberLimit == 0) {\r\n        //     setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n        //     setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n        // }\r\n    }\r\n    const nextPage = () => {\r\n        getPage(page + 1, pageCount);\r\n        // if (currentPage + 1 > maxPageNumberLimit) {\r\n        //     setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n        //     setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n        // }\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{\r\n            margin: '0 10px', minHeight: '50px', justifyContent: 'center',\r\n            alignItems: 'center', display: 'flex', ...paginationStyle, flexDirection: 'column'\r\n        }}>\r\n            <div>{title} </div>\r\n\r\n            <div style={{\r\n                display: 'flex'\r\n            }}><select value={pageCount} onChange={e => getPage(page, Number(e.currentTarget.value))}\r\n                       style={{\r\n                           ...selectStyle,\r\n                           marginRight: '5px'\r\n                       }}>\r\n                <option value={4}>4</option>\r\n                <option value={7}>7</option>\r\n                <option value={10}>10</option>\r\n                <option value={20}>20</option>\r\n                <option value={50}>50</option>\r\n            </select>\r\n                <div style={{\r\n                    marginLeft: '5px',\r\n                    marginRight: '5px',\r\n                    display: 'flex'\r\n                }}>\r\n                    <button onClick={prevPage}>PREV</button>\r\n                </div>\r\n                {pages}\r\n                <div style={{\r\n                    marginLeft: '5px',\r\n                    marginRight: '5px',\r\n                    display: 'flex'\r\n                }}>\r\n                    <button onClick={nextPage}>NEXT</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React, {useState} from 'react';\r\nimport {PackType} from \"../../../../api/api\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actionsSearch} from \"../../bll/searchReducer\";\r\nimport {getPacksTC} from \"../../../p3-packs/bll/packsReducer\";\r\n\r\ntype SortTypeProps = {\r\n    title: string\r\n    arrayData: Array<PackType>\r\n}\r\n\r\nconst SortModule: React.FC<SortTypeProps> = ({title, arrayData}) => {\r\n    const [btnArrow, setBtnArrow] = useState(0)\r\n    const dispatch = useDispatch();\r\n    const btnStyle = {\r\n        background: 'none',\r\n        border: '1px solid black',\r\n        cursor: 'pointer',\r\n        margin: '0',\r\n        padding: '0'\r\n    }\r\n    const titleStyle = {\r\n        marginRight: '5px',\r\n        marginLeft: '5px'\r\n    }\r\n    const sortItem = (x: number) => {\r\n        setBtnArrow(x)\r\n        dispatch(actionsSearch.setSort(x + 'item'));\r\n        dispatch(getPacksTC())\r\n    }\r\n    const sortIcon = (btnArrow === 0)\r\n        ?  <button style={btnStyle} onClick={() => sortItem(1)}>&#9650;</button>\r\n        :  <button style={btnStyle} onClick={() => sortItem(0)}>&#9660;</button>\r\n    return (\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }}>\r\n            <div style={titleStyle}>{title}</div>\r\n            <div style={{\r\n                display: \"flex\",\r\n                flexDirection: 'column'\r\n            }\r\n            }>\r\n                {sortIcon}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SortModule;","import React, {useEffect} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport s from './table.module.css'\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addPackTC, getPacksTC} from \"../bll/packsReducer\";\r\nimport {getAuthUserDataTC} from \"../../p1-login/bll/loginReducer\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {Pack} from \"./Pack/Pack\";\r\nimport {PackType} from \"../../../api/api\";\r\nimport SearchTable from \"../../p8-tableFilter/ui/SearchTable\";\r\nimport Pagination from \"../../p8-tableFilter/ui/Pagination/Pagination\";\r\nimport {actionsSearch} from \"../../p8-tableFilter/bll/searchReducer\";\r\nimport SortModule from \"../../p8-tableFilter/ui/SortModule/SortModule\";\r\nimport Preloader from \"../../../components/preloader/Preloader\";\r\n\r\nexport const Packs = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n    const status = useSelector<AppRootStateType, boolean>(state => state.recoverPassword.status)\r\n    const packs = useSelector<AppRootStateType, Array<PackType>>(state => state.packs.cardPacks)\r\n    const errorText = useSelector<AppRootStateType, string>(state => state.login.errorText)\r\n    const redirect = () => {\r\n        history.push(PATH.LOGIN)\r\n    }\r\n    const {\r\n        searchName,\r\n        page,\r\n        pageCount,\r\n        productTotalCount\r\n    } = useSelector((state: AppRootStateType) => state.search.tableProducts.settingsSearch)\r\n\r\n    useEffect(() => {\r\n        if (isAuth) {\r\n            dispatch(getPacksTC())\r\n            return\r\n        }\r\n        dispatch(getAuthUserDataTC())\r\n    }, [dispatch])\r\n\r\n    const newPacks = packs.map((p) => {\r\n        const date = (new Date(p.updated)).toLocaleDateString() //возможность менять тип даты\r\n        return <Pack key={p._id} pack={p} packDate={date}/>\r\n    })\r\n\r\n    // if (!isAuth) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    if (!isAuth) {\r\n        setTimeout(redirect, 2000)\r\n        return <div className={s.errorText}> {errorText} </div>\r\n    }\r\n\r\n    const getPage = (newPage: number, newPageCount: number) => {\r\n        dispatch(actionsSearch.setPageCount(newPage, newPageCount))\r\n        dispatch(getPacksTC(newPage, newPageCount))\r\n    };\r\n\r\n    const onBtnAddPack = () => {\r\n        dispatch(addPackTC())\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {status ? <Preloader/> : \"\"} {/*// крутилка*/}\r\n            <h5>Packs page</h5>\r\n            <SearchTable/>\r\n            table\r\n            <div className={s.table}>\r\n                <div className={s.tableHeader}>\r\n                    <div className={s.tableHeader_packsName}>Name</div>\r\n                    <div className={s.tableHeader_cardsCount}><SortModule arrayData={packs} title={'CardsCount'}/></div>\r\n                    <div className={s.tableHeader_updated}>updated</div>\r\n                    <div className={s.tableHeader_buttonAdd}>\r\n                        <button onClick={onBtnAddPack}>add</button>\r\n                    </div>\r\n                </div>\r\n                {newPacks}\r\n                <div style={{\r\n                    width: '100%'\r\n                }}><Pagination page={page} pageCount={pageCount} productTotalCount={productTotalCount}\r\n                               getPage={getPage}/></div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Cards = () => {\r\n    return (\r\n        <>\r\n            Cards\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {Registration} from \"../../pages/p2-registration/ui/Registration\";\r\nimport {Login} from \"../../pages/p1-login/ui/Login\";\r\nimport {NewPassword} from \"../../pages/p6-newPassword/ui/NewPassword\";\r\nimport {Profile} from \"../../pages/p3-profile/ui/Profile\";\r\nimport {RecoverPassword} from \"../../pages/p5-recoverPassword/ui/RecoverPassword\";\r\nimport {Error404} from \"../../pages/p4-404/ui/Error404\";\r\nimport {Packs} from \"../../pages/p3-packs/ui/Packs\";\r\nimport {Cards} from \"../../pages/p3-cards/ui/Cards\";\r\nimport SearchTable from \"../../pages/p8-tableFilter/ui/SearchTable\";\r\n\r\n\r\nexport const PATH = {\r\n    HOME_PAGE: '/',\r\n    LOGIN: '/login',\r\n    NEW_PASSWORD: '/new-password/:token',\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    PASSWORD_RECOVERY: '/recover_password',\r\n    TEST_COMPONENT: '/testComponent',\r\n    PACKS: '/packs',\r\n    CARDS: '/cards',\r\n    ERROR_404: '/404',\r\n    SEARCH_TABLE: '/search_table'\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n                <Route exact path={['/', PATH.LOGIN]} render={() => <Login/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword/>}/>\r\n                <Route exact path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route exact path={PATH.PASSWORD_RECOVERY} render={() => <RecoverPassword/>}/>\r\n                <Route exact path={PATH.PACKS} render={() => <Packs/>}/>\r\n                <Route exact path={PATH.CARDS} render={() => <Cards/>}/>\r\n                <Route exact path={PATH.SEARCH_TABLE} render={() => <SearchTable/>}/>\r\n                {/*<Route exact path={PATH.TEST_COMPONENT} render={() => <Test/>}/>*/}\r\n                <Route path={PATH.ERROR_404} render={() => <Error404/>}/>\r\n                <Redirect from={'*'} to={PATH.ERROR_404}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {PATH} from '../routes/Routes'\r\nimport s from './header.module.css'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={s.header}>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.REGISTRATION}>registration</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.LOGIN}>login</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.NEW_PASSWORD}>new password</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.PROFILE}>profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.PASSWORD_RECOVERY}>recover password</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.PACKS}>packs</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.CARDS}>cards</NavLink>\r\n            </div>\r\n            {/*<div className={s.item}>*/}\r\n            {/*    <NavLink to={PATH.SEARCH_TABLE}>search table</NavLink>*/}\r\n            {/*</div>*/}\r\n            {/*<div className=\"item\">*/}\r\n            {/*    <NavLink to={PATH.TEST_COMPONENT}>Test</NavLink>*/}\r\n            {/*</div>*/}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Routes} from \"../components/routes/Routes\";\r\nimport {Header} from \"../components/header/Header\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n\r\n                <HashRouter>\r\n                    <Header/>\r\n                    <Routes/>\r\n                </HashRouter>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {}\r\nexport const profileReducer = (state= initialState, action: any) => {\r\n    switch (action.type) {\r\n        case \"\": {\r\n            return {}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {loginReducer} from \"../pages/p1-login/bll/loginReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {registrationReducer} from \"../pages/p2-registration/bll/registrationReducer\";\r\nimport {profileReducer} from \"../pages/p3-profile/bll/profileReducer\";\r\nimport {recoverPasswordReducer} from \"../pages/p5-recoverPassword/bll/recoverPasswordReducer\";\r\nimport {newPasswordReducer} from \"../pages/p6-newPassword/bll/newPasswordReducer\";\r\nimport {searchReducer} from \"../pages/p8-tableFilter/bll/searchReducer\";\r\nimport {packsReducer} from \"../pages/p3-packs/bll/packsReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    registration: registrationReducer,\r\n    profile: profileReducer,\r\n    recoverPassword: recoverPasswordReducer,\r\n    newPassword: newPasswordReducer,\r\n    search: searchReducer,\r\n    packs: packsReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app/App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./app/store\";\r\n\r\n// test\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}