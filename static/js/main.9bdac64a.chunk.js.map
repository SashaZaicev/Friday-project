{"version":3,"sources":["components/Modals/modal.module.css","components/header/header.module.css","pages/p2-registration/ui/Registration.module.css","pages/p3-packs/ui/Pack/pack.module.css","pages/p3-cards/card/card.module.css","pages/p1-login/ui/login.module.css","pages/p2-registration/ui/SInp/SInp.module.css","components/SuperComponents/SuperInput/SuperInputText.module.css","pages/p5-recoverPassword/recoverPassword.module.css","pages/p2-registration/ui/SBtn/SBtn.module.css","components/SuperComponents/SuperButton/SuperButton.module.css","pages/p6-newPassword/ui/newPassword.module.css","pages/p2-registration/ui/SCBox/SCBox.module.css","components/SuperComponents/SuperCheckbox/SuperCheckbox.module.css","pages/p3-profile/profile.module.css","pages/p8-tableFilter/ui/search.module.css","components/preloader/preloader.module.css","pages/p3-packs/ui/table.module.css","api/api.ts","pages/p2-registration/bll/registrationReducer.ts","pages/p2-registration/ui/SBtn/SBtn.tsx","pages/p2-registration/ui/SCBox/SCBox.tsx","pages/p2-registration/ui/SInp/SInp.tsx","components/preloader/PYh.gif","components/preloader/Preloader.tsx","pages/p2-registration/ui/Registration.tsx","components/SuperComponents/SuperInput/SuperInputText.tsx","components/SuperComponents/SuperCheckbox/SuperCheckbox.tsx","components/SuperComponents/SuperButton/SuperButton.tsx","pages/p5-recoverPassword/bll/recoverPasswordReducer.ts","pages/p1-login/bll/loginReducer.ts","pages/p1-login/ui/Login.tsx","pages/p6-newPassword/bll/newPasswordReducer.ts","pages/p6-newPassword/ui/NewPassword.tsx","pages/p3-profile/ui/Profile.tsx","pages/p5-recoverPassword/ui/RecoverPassword.tsx","pages/p4-404/ui/cat_standing_animated.gif","pages/p4-404/ui/Error404.tsx","pages/p8-tableFilter/bll/searchReducer.ts","pages/p3-packs/bll/packsReducer.ts","components/Modals/Modal.tsx","components/Modals/ModalQuestion/ModalQuestion.tsx","components/Modals/ModalQuestion/ModalQuestionContainer.tsx","components/Modals/ModalUpdatePack/ModalUpdatePack.tsx","components/Modals/ModalUpdatePack/ModalUpdatePackContainer.tsx","pages/p3-packs/ui/Pack/Pack.tsx","pages/p8-tableFilter/ui/MultiRangeSlider/MultiRangeSlider.tsx","pages/p8-tableFilter/ui/SearchTable.tsx","pages/p8-tableFilter/ui/Pagination/Pagination.tsx","pages/p8-tableFilter/ui/SortModule/SortModule.tsx","components/Modals/ModalUp/ModalUp.tsx","pages/p3-packs/ui/Packs.tsx","pages/p3-cards/bll/cardsReducer.ts","components/Modals/ModalUpdateCards/ModalUpdateCards.tsx","components/Modals/ModalUpdateCards/ModalUpdateCardsContainer.tsx","pages/p3-cards/card/Card.tsx","pages/p3-cards/ui/Cards.tsx","components/functions/getRandomCard.ts","pages/p9-learnPage/TrainPage.tsx","components/routes/Routes.tsx","components/header/Header.tsx","app/App.tsx","reportWebVitals.ts","pages/p3-profile/bll/profileReducer.ts","app/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","commonAPI","data","post","delete","login","password","email","from","message","newPassword","token","resetPasswordToken","min","max","searchName","page","pageCount","sortProducts","get","length","name","cardsPack","packId","put","_id","question","answer","params","cardsPack_id","cardQuestion","cardAnswer","id","card","cardId","grade","card_id","initialState","confirmPassword","isSuccess","rememberMe","error","loading","errorServer","SET_LOGIN","SET_ERROR","SET_ERR_SERV","SET_PASSWORD","SET_REPEAT_PASSWORD","SET_SUCCESS","SET_LOADING","SET_REMEMBER_ME","actionsRegistrations","type","err","SBtn","callFunction","red","className","restProps","finalClassName","s","default","nameButton","onClick","SCBox","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","e","currentTarget","checked","SInp","onChangeText","onKeyPress","onEnter","info","onChangeValue","value","finalSpanClassName","errorInput","superInput","content","key","Preloader","preloader","src","nya","alt","Registration","dispatch","useDispatch","useState","setLogin","setPassword","password2","setPassword2","setRememberMe","stateRegistrationIsSuccess","useSelector","state","registration","stateRegistrationError","stateLoading","to","PATH","LOGIN","errInputLogin","errInputPas","errInputPas2","checkInBlock","checkInTitle","style","color","help","placeholder","repeatPassword","checkInBtn","then","res","setTimeout","catch","er","console","log","response","finally","createUserTC","disabled","SuperInputText","SuperCheckbox","SuperButton","errorMessage","infoMessage","status","setStatusAC","infoMessageAC","errorMessageAC","isAuth","avatar","errorText","setIsLoggedInAC","setErrorTextAC","text","getAuthUserDataTC","payload","Login","setEmail","isLoggedIn","recoverPassword","PROFILE","flexMainContainer","answerServer","forgot","PASSWORD_RECOVERY","REGISTRATION","errorPassMessage","passwordStatus","errorPassMessageAC","setServerStatusAC","NewPassword","history","useHistory","setNewPassword","newPassword2","setNewPassword2","useParams","push","newPasswordTC","Profile","useEffect","RecoverPassword","changeEmailAC","recoverPasswordTC","Error404","logo","title","InitialState","tableProducts","items","settingsSearch","minPrice","maxPrice","productTotalCount","SET_SEARCH_NAME","SET_MIN_MAX_ITEM","SET_PAGE_COUNT","SET_TOTAL_COUNT","SET_SORT","actionsSearch","newPage","newPageCount","cardPacks","getPacksTC","getStore","search","packs","cardPacksTotalCount","Modal","enableBackground","backgroundOnClick","width","height","modalOnClick","show","modalStyle","top","left","background","modal","ModalQuestion","setTrue","setFalse","buttonTrue","buttonFalse","buttons","ModalQuestionContainer","modalName","onButtonModal","setShow","setAnswer","ModalUpdatePack","inputs","ModalUpdatePackContainer","setUpdate","Pack","pack","packDate","userName","setName","user_name","tableBody","tableBody_name","tableBody_cardsCount","cardsCount","tableBody_updated","tableBody_user","tableBody_buttons","updatePackTC","CARDS","TRAIN","MultiRangeSlider","store","values","setValues","setGlobalValues","newValues","step","renderTrack","props","onMouseDown","onTouchStart","display","margin","ref","borderRadius","getTrackBackground","colors","alignSelf","renderThumb","index","isDragged","backgroundColor","justifyContent","alignItems","boxShadow","position","fontWeight","fontSize","fontFamily","padding","toFixed","SearchTable","searchTable","inputSearch","Pagination","getPage","paginationStyle","buttonStyle","selectStyle","pages","lastPage","Math","ceil","i","undefined","filter","p","minHeight","flexDirection","Number","marginRight","marginLeft","SortModule","arrayData","btnArrow","setBtnArrow","btnStyle","border","cursor","sortItem","x","sortIcon","ModalUp","speed","handleScroll","window","pageYOffset","addEventListener","lastState","innerTimer","setInterval","clearInterval","scroll","opacity","Packs","redirect","setRedirect","wait","setWait","newPacks","map","date","Date","updated","toLocaleDateString","table","tableHeader","tableHeader_packsName","tableHeader_cardsCount","tableHeader_updated","tableHeader_user","tableHeader_buttonAdd","addPackTC","cards","packUserId","cardsTotalCount","getCardTC","updateGradeCardTC","setCardsGradeAC","ModalUpdateCards","onChange2","ModalUpdateCardsContainer","Card","userId","setQuestion","user_id","mainWrapper","deleteCardTC","updateCardTC","Cards","newCards","c","addCardTC","getRandomCard","sum","reduce","acc","rand","random","newSum","TrainPage","isChecked","setIsChecked","first","setFirst","rating","shots","created","comments","setCard","g","PACKS","HOME_PAGE","NEW_PASSWORD","TEST_COMPONENT","ERROR_404","SEARCH_TABLE","Routes","exact","path","render","Header","header","item","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","profile","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bdac64a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"modal_background__ZnOSQ\",\"modal\":\"modal_modal__4dcaP\",\"buttons\":\"modal_buttons__1zJ0O\",\"content\":\"modal_content__3USpS\",\"up\":\"modal_up__J4VOR\",\"inputs\":\"modal_inputs__1bMhA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1MIiN\",\"item\":\"header_item__3Qsd2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkInBlock\":\"Registration_checkInBlock__37CH2\",\"checkInTitle\":\"Registration_checkInTitle__3TEZd\",\"checkInBtn\":\"Registration_checkInBtn__15ozI\",\"help\":\"Registration_help__3jHA9\",\"preloader\":\"Registration_preloader__18kJs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableBody\":\"pack_tableBody__3T-d7\",\"tableBody_name\":\"pack_tableBody_name__3x6dN\",\"tableBody_cardsCount\":\"pack_tableBody_cardsCount__1BeWa\",\"tableBody_updated\":\"pack_tableBody_updated__1HBNm\",\"tableBody_user\":\"pack_tableBody_user__Vw25d\",\"tableBody_buttons\":\"pack_tableBody_buttons__1BdDe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"card_mainWrapper__bBr3X\",\"question\":\"card_question__2u1Gw\",\"answer\":\"card_answer__2w_wk\",\"updated\":\"card_updated__3yO_s\",\"grade\":\"card_grade__2-EDT\",\"buttons\":\"card_buttons__24cz8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexMainContainer\":\"login_flexMainContainer__2c2Iv\",\"forgot\":\"login_forgot__A4vQ_\",\"error\":\"login_error__PzkPb\",\"preloader\":\"login_preloader__1I6Md\",\"answerServer\":\"login_answerServer__3Uj6t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SInp_superInput__2pscb\",\"errorInput\":\"SInp_errorInput__zmMGM\",\"error\":\"SInp_error__2HSTs\",\"content\":\"SInp_content__1A0h8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__NEA4P\",\"errorInput\":\"SuperInputText_errorInput__28YHC\",\"error\":\"SuperInputText_error__3iE1R\",\"content\":\"SuperInputText_content__fTYMP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"recoverPassword_content__2b9qB\",\"error\":\"recoverPassword_error__1MkyL\",\"preloader\":\"recoverPassword_preloader__D2nPu\",\"answerServer\":\"recoverPassword_answerServer__3x3be\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SBtn_default__19WGv\",\"red\":\"SBtn_red__2vsnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2xbGp\",\"red\":\"SuperButton_red__1Jo-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"newPassword_content__RWvov\",\"preloader\":\"newPassword_preloader__6l8u1\",\"answerServer\":\"newPassword_answerServer__1mZ0s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SCBox_checkbox__5EX89\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__SwpSd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexMainContainer\":\"profile_flexMainContainer__WpkX-\",\"avatar\":\"profile_avatar__2BhIb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchTable\":\"search_searchTable__BUakW\",\"inputSearch\":\"search_inputSearch__25am4\",\"tableBlock\":\"search_tableBlock__3vAa3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__NKPnm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorText\":\"table_errorText__1s5Er\",\"preloader\":\"table_preloader__2kiWj\",\"table\":\"table_table__2pTFG\",\"tableHeader\":\"table_tableHeader__2109o\",\"tableHeader_packsName\":\"table_tableHeader_packsName__3gMzA\",\"tableHeader_cardsCount\":\"table_tableHeader_cardsCount__13obO\",\"tableHeader_updated\":\"table_tableHeader_updated__3dRYR\",\"tableHeader_user\":\"table_tableHeader_user__iGpdq\",\"tableHeader_buttonAdd\":\"table_tableHeader_buttonAdd__3bRYA\"};","import axios from 'axios'\r\nimport {LoginParamsType, loginResponseType} from \"../pages/p1-login/bll/loginReducer\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n})\r\n// baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n//http://localhost:7542/2.0/\r\n\r\nexport const commonAPI = {\r\n    login(data: LoginParamsType) {\r\n        return instance.post<loginResponseType>(('auth/login'), data)\r\n    },\r\n    logOut() {\r\n        return instance.delete(`auth/me`)\r\n    },\r\n    authMe() {\r\n        return instance.post<loginResponseType>(`auth/me`) // проверка на залогиненность\r\n    },\r\n    signup(login: string, password: string) {\r\n        return instance.post(`/auth/register/`, {\r\n            'email': login, 'password': password\r\n        })\r\n    },\r\n    recoverPassword(email: string, from: string, message: string) {\r\n        return instance.post<ResponseType>('auth/forgot', {email, from, message});\r\n    },\r\n    changePassword(newPassword: string, token: string | undefined) {\r\n        return instance.post('auth/set-new-password', {password: newPassword, resetPasswordToken: token})\r\n    },\r\n\r\n    //packs\r\n\r\n    getPacks(min: number, max: number, searchName: string, page?: number, pageCount?: number, sortProducts?: string) {\r\n        return instance.get<getPacksResponseType>(`cards/pack?`\r\n            + (max ? `min=${min}&max=${max}&` : '')\r\n            + (searchName.length > 0 ? `packName=${searchName}&` : '')\r\n            + (page ? `page=${page}&pageCount=${pageCount}&` : '')\r\n            + (sortProducts ? `sortProducts=${sortProducts}&` : ''))\r\n\r\n    },\r\n    addPack(name?: string) {\r\n        return instance.post(`cards/pack`, {cardsPack: {name: name || 'new test pack'}})\r\n    },\r\n    deletePack(packId: string) {\r\n        return instance.delete(`cards/pack?id=${packId}`)\r\n    },\r\n    updatePack(packId: string, name?: string) {\r\n        return instance.put(`cards/pack`, {cardsPack: {_id: packId, name: name || 'no name'}})\r\n    },\r\n\r\n    //cards\r\n\r\n    getCards(packId: string, question?: string, answer?: string, min?: string, max?: string, page?: number, pageCount?: number) {\r\n        return instance.get<GetCardsResponseType>(`cards/card`, {\r\n            params: {\r\n                cardsPack_id: packId,\r\n                cardQuestion: question,\r\n                cardAnswer: answer,\r\n                min,\r\n                max,\r\n                page,\r\n                pageCount\r\n            }\r\n        })\r\n    },\r\n    addCard(id: string, question?: string, answer?: string) {\r\n        return instance.post(`cards/card`, {card: {cardsPack_id: id, question: question, answer: answer}})\r\n    },\r\n    deleteCard(cardId: string) {\r\n        return instance.delete(`cards/card?id=${cardId}`)\r\n    },\r\n    updateCard(id: string, question?: string, answer?: string) {\r\n        return instance.put(`cards/card`, {card: {_id: id, question: question, answer: answer}})\r\n    },\r\n    updateGrade(grade: number, cardId: string) {\r\n        return instance.put<updateGradeResponseType>(`cards/grade`, {grade, card_id: cardId})\r\n    }\r\n}\r\n\r\n\r\n//types\r\ntype ResponseType = {\r\n    info: string\r\n    error: ErrorType\r\n}\r\ntype ErrorType = {\r\n    error: string\r\n    email: string\r\n    emailRegExp: {}\r\n    in: string\r\n}\r\ntype getPacksResponseType = {\r\n    cardPacks: Array<PackType>\r\n    cardPacksTotalCount: number// количество колод\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number// выбранная страница\r\n    pageCount: number // количество элементов на странице\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\nexport type PackType = {\r\n    cardsCount: number\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    name: string\r\n    path: string\r\n    private: boolean\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    user_name: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type GetCardsResponseType = {\r\n    cards: Array<CardType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}\r\nexport type CardType = {\r\n    _id: string\r\n    question: string\r\n    answer: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    user_id: string\r\n    created: string\r\n    updated: string\r\n    comments: string\r\n}\r\ntype updateGradeResponseType = {\r\n    _id: string\r\n    cardsPack_id: string\r\n    card_id: string\r\n    user_id: string\r\n    grade: number\r\n    shots: number\r\n}","import {Dispatch} from \"redux\";\r\nimport {commonAPI} from \"../../../api/api\";\r\nimport {ActionsTypes, RegistrationUserType} from \"./storeRegistration\";\r\n\r\nexport const initialState = {\r\n    id: '1',\r\n    login: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    isSuccess: false,\r\n    rememberMe: false,\r\n    error: false,\r\n    loading: false,\r\n    errorServer: ''\r\n};\r\nconst SET_LOGIN = \"SET_LOGIN\"\r\nconst SET_ERROR = \"SET_ERROR\"\r\nconst SET_ERR_SERV = \"SET_ERR_SERV\"\r\nconst SET_PASSWORD = \"SET_PASSWORD\"\r\nconst SET_REPEAT_PASSWORD = \"SET_REPEAT_PASSWORD\"\r\nconst SET_SUCCESS = \"SET_SUCCESS\"\r\nconst SET_LOADING = \"SET_LOADING\"\r\nconst SET_REMEMBER_ME = \"SET_REMEMBER_ME\"\r\n\r\nexport const registrationReducer = (state: RegistrationUserType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case  SET_LOGIN: {\r\n            return {\r\n                ...state,\r\n                login: action.login\r\n            };\r\n        }\r\n        case  SET_PASSWORD: {\r\n            return {\r\n                ...state,\r\n                password: action.password\r\n            };\r\n        }\r\n        case  SET_REPEAT_PASSWORD: {\r\n            return {\r\n                ...state,\r\n                confirmPassword: action.repeatPassword\r\n            };\r\n        }\r\n        case  SET_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isSuccess: action.isSuccess\r\n            };\r\n        }\r\n        case  SET_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            };\r\n        }\r\n        case  SET_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        }\r\n        case  SET_ERR_SERV: {\r\n            return {\r\n                ...state,\r\n                errorServer: action.err\r\n            };\r\n        }\r\n        case SET_REMEMBER_ME: {\r\n            return {\r\n                ...state,\r\n                rememberMe: action.rememberMe\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actionsRegistrations = {\r\n    setLogin: (login: string) => ({type: SET_LOGIN, login}) as const,\r\n    postPassword: (password: string) => ({type: 'SET_PASSWORD', password}) as const,\r\n    postRepeatPassword: (repeatPassword: string) => ({type: 'SET_REPEAT_PASSWORD', repeatPassword}) as const,\r\n    setSuccess: (isSuccess: boolean) => ({type: 'SET_SUCCESS', isSuccess}) as const,\r\n    setLoading: (loading: boolean) => ({type: 'SET_LOADING', loading}) as const,\r\n    setError: (error: boolean) => ({type: SET_ERROR, error}) as const,\r\n    setErrServ: (err: string) => ({type: SET_ERR_SERV, err}) as const,\r\n    postRememberMe: (rememberMe: boolean) => ({type: 'SET_REMEMBER_ME', rememberMe}) as const,\r\n}\r\n\r\nexport const createUserTC = (login: string, password: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        commonAPI.signup(login, password)\r\n            .then(res => {\r\n                dispatch(actionsRegistrations.setLoading(false))\r\n                dispatch(actionsRegistrations.setSuccess(true))\r\n                setTimeout(() => dispatch(actionsRegistrations.setSuccess(false)), 3000)\r\n            })\r\n            .catch(er => {\r\n                console.log(er)\r\n\r\n                dispatch(actionsRegistrations.setErrServ(er.response.data.error))\r\n                setTimeout(() => dispatch(actionsRegistrations.setErrServ('')), 3000)\r\n            })\r\n            .finally(() => {\r\n                dispatch(actionsRegistrations.setLoading(false))\r\n            })\r\n        /*.catch(er => {\r\n            console.log(er)\r\n            dispatch(actionsRegistrations.setLoading(false))\r\n            dispatch(actionsRegistrations.setErrServ(er.response.data.error))\r\n            setTimeout(() => dispatch(actionsRegistrations.setErrServ('')), 3000)\r\n        })*/\r\n    }\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SBtn.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    name?: string\r\n    error?: string\r\n    red?: boolean\r\n    callFunction?: () => void //добавил для типизации функции\r\n}\r\n\r\nconst SBtn: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        callFunction,//добавил для вызова функции\r\n        red, className, name,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${s.default}`;\r\n    const nameButton = name ? name : \"click\"\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            onClick={() => callFunction ? callFunction() : \"\"} //изменил для приходящей функции\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >{nameButton}</button>\r\n    );\r\n}\r\n\r\nexport default SBtn;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SCBox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SCBox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SCBox;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SInp.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onChangeValue?: (value: string) => void // меняем в стейте на email пользователя\r\n    onEnter?: () => void\r\n    info?: string\r\n    error?: string\r\n    spanClassName?: string\r\n    value?: string\r\n};\r\n\r\nconst SInp: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        info,\r\n        error,\r\n        className, spanClassName,\r\n        onChangeValue,\r\n        value,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n        onChangeValue && onChangeValue(e.currentTarget.value) // меняем в стейте на email пользователя\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `{ ${error ? s.errorInput : s.superInput} ${className}`;\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div>\r\n                <input\r\n                    type={type}\r\n                    onChange={onChangeCallback}\r\n                    onKeyPress={onKeyPressCallback}\r\n                    className={finalInputClassName}\r\n                    value={value}\r\n\r\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                />\r\n            </div>\r\n            <div>\r\n                {error && <span className={finalSpanClassName}>{error}</span>}\r\n                {info && <span>{info}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SInp;\r\n","export default __webpack_public_path__ + \"static/media/PYh.b3402305.gif\";","import React from 'react'\r\nimport s from './preloader.module.css'\r\nimport nya from './PYh.gif'\r\n\r\n\r\nconst Preloader = () => {\r\n\r\n    return (\r\n        <div className={s.preloader}> {<img src={nya} alt={''}/>} </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import React, {useState} from 'react'\r\nimport s from './Registration.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    actionsRegistrations, createUserTC,\r\n} from \"../bll/registrationReducer\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport SBtn from \"./SBtn/SBtn\";\r\nimport SCBox from \"./SCBox/SCBox\";\r\nimport SInp from \"./SInp/SInp\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\nimport Preloader from \"../../../components/preloader/Preloader\";\r\n\r\nexport const Registration: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [login, setLogin] = useState('Alex@company.com')\r\n    const [password, setPassword] = useState('123456789')\r\n    const [password2, setPassword2] = useState('123456789')\r\n    const [rememberMe, setRememberMe] = useState(false)\r\n    const stateRegistrationIsSuccess = useSelector<AppRootStateType>(state => state.registration.isSuccess)\r\n    const stateRegistrationError = useSelector<AppRootStateType>(state => state.registration.error)\r\n    const errorServer = useSelector<AppRootStateType>(state => state.registration.errorServer)\r\n    const stateLoading = useSelector<AppRootStateType>(state => state.registration.loading)\r\n\r\n    const addUser = () => {\r\n\r\n        if (password !== '' && password2 !== '' && login !== '') {\r\n            if (password === password2) {\r\n                dispatch(createUserTC(login, password))\r\n                dispatch(actionsRegistrations.setLoading(true))\r\n            }\r\n        } else {\r\n            dispatch(actionsRegistrations.setError(true))\r\n            dispatch(actionsRegistrations.setSuccess(false))\r\n        }\r\n    }\r\n    //test server\r\n    // const time = Date.now()\r\n    // useEffect(() => {\r\n    //     timePing.ping(time)\r\n    // })\r\n    const onLoginChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let login = e.currentTarget.value\r\n        setLogin(login)\r\n    }\r\n\r\n    const onPasswordChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let password = e.currentTarget.value\r\n        setPassword(password)\r\n    }\r\n\r\n    const repeatOnPasswordChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let repeatPassword = e.currentTarget.value\r\n        setPassword2(repeatPassword)\r\n    }\r\n\r\n    const setRememberMeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let rememberMe = e.currentTarget.checked\r\n        setRememberMe(rememberMe)\r\n    }\r\n\r\n    if (stateRegistrationIsSuccess) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    const errInputLogin = (login === '' && stateRegistrationError) ? 'Обязательное поле' : '';\r\n    const errInputPas = (password === '' && stateRegistrationError) ? 'Обязательное поле' : '';\r\n    const errInputPas2 = (password2 === '' && stateRegistrationError) ? 'Обязательное поле' : '';\r\n    return (\r\n        <div className={s.checkInBlock}>\r\n            <div className={s.preloader}> {stateLoading\r\n                ? <Preloader/>\r\n                : \"\"\r\n            } </div>\r\n            <h2 className={s.checkInTitle}>Registration</h2>\r\n            {(stateRegistrationError || errorServer)\r\n                ? <div style={{color: 'red'}}> {errorServer ? errorServer : \"УПС ошибочка...\"}</div>\r\n                : stateRegistrationIsSuccess\r\n                    ? <div style={{color: 'lime'}}>Success!</div>\r\n                    : <div><br/></div>}\r\n            <label>Email:\r\n                <div className={s.help}>Example: Alex@company.com</div>\r\n                <SInp\r\n                    error={errInputLogin}\r\n                    value={login}\r\n                    onChange={onLoginChange}\r\n                    type={'email'}\r\n                    placeholder={'Alex@company.com'}/>\r\n            </label>\r\n            <label>Password:\r\n                <div className={s.help}>Example: Must be between\r\n                    8-20 character </div>\r\n                <SInp\r\n                    error={errInputPas}\r\n                    value={password}\r\n                    onChange={onPasswordChange}\r\n                    type={'password'}\r\n                    placeholder={'password'}\r\n                />\r\n            </label>\r\n            <label>Confirm password:\r\n                <div className={s.help}>Example: Must be between\r\n                    8-20 character </div>\r\n                <SInp\r\n                    error={errInputPas2}\r\n                    value={password2}\r\n                    onChange={repeatOnPasswordChange}\r\n                    type={'password'}\r\n                    placeholder={'confirm password'}\r\n                />\r\n            </label>\r\n            <div className={s.checkInBtn}>\r\n                <SBtn callFunction={addUser}\r\n                      name={'Register'}\r\n                      disabled={!!stateLoading}\r\n\r\n                />\r\n                <SCBox onChange={setRememberMeChange} checked={rememberMe}/>\r\n            </div>\r\n            <NavLink to={PATH.LOGIN}>Sign In</NavLink>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    info?: string\r\n    error?: string\r\n    spanClassName?: string\r\n    value?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        info,\r\n        error,\r\n        className, spanClassName,\r\n        value,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `{ ${error ? s.errorInput : s.superInput} ${className}`;\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div>\r\n                <input\r\n                    type={type}\r\n                    onChange={onChangeCallback}\r\n                    onKeyPress={onKeyPressCallback}\r\n                    className={finalInputClassName}\r\n                    value={value}\r\n\r\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                />\r\n            </div>\r\n            <div>\r\n                {error && <span className={finalSpanClassName}>{error}</span>}\r\n                {info && <span>{info}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SuperInputText;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    name?: string\r\n    error?: string\r\n    red?: boolean\r\n    callFunction?: () => void //добавил для типизации функции\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        callFunction,//добавил для вызова функции\r\n        red, className, name,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${s.default}`;\r\n    const nameButton = name ? name : \"click\"\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            onClick={() => callFunction ? callFunction() : \"\"} //изменил для приходящей функции\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >{nameButton}</button>\r\n    );\r\n}\r\n\r\nexport default SuperButton;","import {Dispatch} from \"redux\";\r\nimport {commonAPI} from \"../../../api/api\";\r\n\r\nconst initialState = {\r\n    email: null as null || \"\",\r\n    from: \"ai73a@yandex.by\",\r\n  //  message: `<div style=\"background-color: #00ff00; padding: 15px\">password recovery link: <a href='https://nataliakirik.github.io/Friday-project/#/new-password/$token$'>link</a></div>`,\r\n    message: `<div style=\"background-color: #00ff00; padding: 15px\">password recovery link: <a href='http://localhost:3000/Friday-project#/new-password/$token$'>link</a></div>`, // @@@ необходимо для проверки восстановления пароля @@@\r\n    errorMessage: \"\",\r\n    infoMessage: \"\",\r\n    status: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const recoverPasswordReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"recoverPassword/CHANGE_EMAIL\": { // меняет значение email на пользовательский\r\n            return {...state, email: action.email}\r\n        }\r\n        case \"recoverPassword/SET_STATUS\": { // отображает крутилку :)\r\n            return {...state, status: action.status}\r\n        }\r\n        case \"recoverPassword/INFO_MESSAGE\": { // сообщение при успехе :р\r\n            return {...state, infoMessage: action.infoMessage}\r\n        }\r\n        case \"recoverPassword/ERROR_MESSAGE\": { // сообщение при наличии ошибки -_-\r\n            return {...state, errorMessage: action.errorMessage}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// action\r\nexport const changeEmailAC = (email: string) => ({type: \"recoverPassword/CHANGE_EMAIL\", email} as const);\r\nexport const setStatusAC = (status: boolean) => ({type: \"recoverPassword/SET_STATUS\", status} as const);\r\nexport const infoMessageAC = (infoMessage: string) => ({type: \"recoverPassword/INFO_MESSAGE\", infoMessage} as const);\r\nexport const errorMessageAC = (errorMessage: string) => ({type: \"recoverPassword/ERROR_MESSAGE\", errorMessage} as const);\r\n\r\n// thunks\r\nexport const recoverPasswordTC = (email: string, from: string, message: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(changeEmailAC(email))\r\n        console.log(email)\r\n        dispatch(setStatusAC(true))\r\n        commonAPI.recoverPassword(email, from, message)\r\n            .then((res) => {\r\n                dispatch(infoMessageAC(res.data.info))\r\n                console.log(\"then \" + res.data.info)\r\n                setTimeout(() => dispatch(infoMessageAC('')), 3000)\r\n            })\r\n            .catch((error) => {\r\n                dispatch(errorMessageAC(error.response.data.error))\r\n                console.log(\"error \" + error.response.data.error)\r\n                setTimeout(() => dispatch(errorMessageAC('')), 3000)\r\n            })\r\n            .finally(() => {\r\n                dispatch(setStatusAC(false))\r\n            })\r\n    }\r\n}\r\n\r\n// type\r\nexport type sentEmailActionType = ReturnType<typeof changeEmailAC>\r\nexport type setStatusActionType = ReturnType<typeof setStatusAC>\r\nexport type infoMessageActionType = ReturnType<typeof infoMessageAC>\r\nexport type errorMessageActionType = ReturnType<typeof errorMessageAC>\r\n\r\ntype ActionsType = sentEmailActionType | setStatusActionType | infoMessageActionType | errorMessageActionType\r\ntype ThunkDispatch = Dispatch<ActionsType>","import {Dispatch} from \"redux\";\r\nimport {commonAPI} from \"../../../api/api\";\r\nimport {setStatusAC, setStatusActionType} from \"../../p5-recoverPassword/bll/recoverPasswordReducer\";\r\n\r\nconst initialState = {\r\n    name: '',\r\n    _id: '',\r\n    isAuth: false,\r\n    avatar: '',\r\n    errorText: '',\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET_ERROR-TEXT':\r\n            return {...state, errorText: action.text}\r\n        case 'login/SET-NAME':\r\n            return {...state, name: action.name}\r\n        case 'login/SET-USER-ID':\r\n            return {...state, _id: action._id}\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isAuth: action.value}\r\n        case 'login/SET-AVATAR':\r\n            return {...state, avatar: action.avatar}\r\n        case 'login/SET_ME':\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n//actions\r\nexport const setIsLoggedInAC = (value: boolean) => ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\nexport const setNameAC = (name: string) => ({type: 'login/SET-NAME', name} as const)\r\nexport const setUserIdAC = (_id: string) => ({type: 'login/SET-USER-ID', _id} as const)\r\nexport const setAvatarAC = (avatar: string) => ({type: 'login/SET-AVATAR', avatar} as const)\r\nexport const setErrorTextAC = (text: string) => ({type: 'login/SET_ERROR-TEXT', text} as const)\r\nconst setAuthUserDataAC = (name: string, isAuth: boolean) => ({\r\n    type: 'login/SET_ME',\r\n    payload: {name, isAuth}\r\n} as const)\r\n\r\n// thunk\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setStatusAC(true))\r\n    commonAPI.login(data)\r\n        .then((res) => {\r\n                dispatch(setNameAC(res.data.name))\r\n                dispatch(setUserIdAC(res.data._id))\r\n                dispatch(setAvatarAC(res.data.avatar))\r\n                dispatch(setIsLoggedInAC(true))\r\n            }\r\n        )\r\n        .catch(err => {\r\n            dispatch(setIsLoggedInAC(false))\r\n            dispatch(setErrorTextAC(err.response.data.error))\r\n            setTimeout(() => dispatch(setErrorTextAC('')), 3000)\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC(false))\r\n        })\r\n}\r\n\r\nexport const logOutTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setStatusAC(true))\r\n    commonAPI.logOut()\r\n        .then(() => {\r\n                dispatch(setIsLoggedInAC(false))\r\n            }\r\n        )\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error)\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC(false))\r\n        })\r\n}\r\n\r\nexport const getAuthUserDataTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setStatusAC(true))\r\n    commonAPI.authMe()\r\n        .then(res => {\r\n            dispatch(setAuthUserDataAC(res.data.name, true))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            dispatch(setErrorTextAC(error))\r\n            setTimeout(() => dispatch(setErrorTextAC('')), 3000)\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC(false))\r\n        })\r\n}\r\n\r\n//types\r\ntype InitialStateType = typeof initialState\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nexport type loginResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport type setIsLoggedInACType = ReturnType<typeof setIsLoggedInAC>\r\nexport type setErrorTextACType = ReturnType<typeof setErrorTextAC>\r\nexport type setNameACType = ReturnType<typeof setNameAC>\r\nexport type setUserIdACType = ReturnType<typeof setUserIdAC>\r\nexport type setAvatarACType = ReturnType<typeof setAvatarAC>\r\nexport type setMeACType = ReturnType<typeof setAuthUserDataAC>\r\ntype ActionsType =\r\n    setIsLoggedInACType\r\n    | setErrorTextACType\r\n    | setNameACType\r\n    | setUserIdACType\r\n    | setAvatarACType\r\n    | setMeACType\r\n    | setStatusActionType\r\n","import React, {useState} from 'react'\r\nimport SuperInputText from \"../../../components/SuperComponents/SuperInput/SuperInputText\";\r\nimport s from './login.module.css'\r\nimport SuperCheckbox from \"../../../components/SuperComponents/SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../../../components/SuperComponents/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from '../../../app/store';\r\nimport {loginTC} from \"../bll/loginReducer\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\nimport Preloader from \"../../../components/preloader/Preloader\";\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    let [email, setEmail] = useState<string>('nataliaandkirik@gmail.com')\r\n    let [password, setPassword] = useState<string>('nataliaandkirik1817')\r\n    let [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const error = useSelector<AppRootStateType, string>(state => state.login.errorText)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n    const status = useSelector<AppRootStateType, boolean>(state => state.recoverPassword.status)\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.flexMainContainer}>\r\n            <div className={s.preloader}>{status ? <Preloader/> : \"\"}</div>\r\n            <h2>Login Page</h2>\r\n            <div className={s.answerServer}>{error && <span className={s.error}>{error}</span>}</div>\r\n            <div>Email</div>\r\n            <div>\r\n                <SuperInputText onChangeText={(value) => {\r\n                    setEmail(value)\r\n                }}\r\n                                value={email}/>\r\n            </div>\r\n\r\n            <div>Password</div>\r\n            <div>\r\n                <SuperInputText type={\"password\"}\r\n                                value={password}\r\n                                onChangeText={(value) => {\r\n                                    setPassword(value)\r\n                                }}/>\r\n            </div>\r\n\r\n            <div>\r\n                <span>Remember me</span>\r\n                <SuperCheckbox checked={rememberMe}\r\n                               onChangeChecked={(value) => {\r\n                                   setRememberMe(value)\r\n                               }}/>\r\n            </div>\r\n\r\n            <div>\r\n                <SuperButton onClick={() => {\r\n                    dispatch(loginTC({email, password, rememberMe}))\r\n                }}\r\n                             name={\"Sign in\"}\r\n                             error={error}\r\n                />\r\n            </div>\r\n\r\n            <div className={s.forgot}>\r\n                <div>\r\n                    <NavLink to={PATH.PASSWORD_RECOVERY}>forgot password?</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to={PATH.REGISTRATION}>registration</NavLink>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {commonAPI} from \"../../../api/api\";\r\n\r\nconst initialState = {\r\n    errorPassMessage: \"\",\r\n    passwordStatus: false,\r\n    status: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"newPassword/ERROR_MESSAGE\": {\r\n            return {...state, errorPassMessage: action.errorPassMessage}\r\n        }\r\n        case \"newPassword/SET_PASS_STATUS\": {\r\n            return {...state, passwordStatus: action.passwordStatus}\r\n        }\r\n        case \"newPassword/SET_STATUS\": {\r\n            return {...state, status: action.status}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// action\r\nexport const errorPassMessageAC = (errorPassMessage: string) => ({type: \"newPassword/ERROR_MESSAGE\", errorPassMessage} as const);\r\nexport const setPasswordStatusAC = (passwordStatus: boolean) => ({type: \"newPassword/SET_PASS_STATUS\", passwordStatus} as const);\r\nexport const setServerStatusAC = (status: boolean) => ({type: \"newPassword/SET_STATUS\", status} as const);\r\n\r\n\r\n// thunks\r\nexport const newPasswordTC = (newPassword: string, token: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setServerStatusAC(true))\r\n        console.log(newPassword)\r\n        console.log(token)\r\n        commonAPI.changePassword(newPassword, token)\r\n            .then((res) => {\r\n                dispatch(setPasswordStatusAC(true))\r\n                console.log(\"в then все ок\")\r\n            })\r\n            .catch((error) => {\r\n                dispatch(errorPassMessageAC(error.message))\r\n                console.log(\"error \" + error.message)\r\n            })\r\n            .finally(() => {\r\n                dispatch(setServerStatusAC(false))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n// type\r\nexport type errorPassMessageActionType = ReturnType<typeof errorPassMessageAC>\r\nexport type setPasswordStatusActionType = ReturnType<typeof setPasswordStatusAC>\r\nexport type setServerStatusActionType = ReturnType<typeof setServerStatusAC>\r\n\r\ntype ActionsType = errorPassMessageActionType | setPasswordStatusActionType | setServerStatusActionType\r\ntype ThunkDispatch = Dispatch<ActionsType>","import React, {useState} from 'react'\r\nimport {useParams, useHistory} from 'react-router-dom';\r\nimport SuperInputText from \"../../../components/SuperComponents/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../../../components/SuperComponents/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {errorPassMessageAC, newPasswordTC} from \"../bll/newPasswordReducer\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\nimport Preloader from \"../../../components/preloader/Preloader\";\r\nimport s from \"./newPassword.module.css\"\r\n\r\n\r\nexport const NewPassword = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n\r\n    const [newPassword, setNewPassword] = useState<string>('')\r\n    const [newPassword2, setNewPassword2] = useState<string>('')\r\n    const {token} = useParams<{ token: string }>()\r\n    const passwordStatus = useSelector<AppRootStateType, boolean>(state => state.newPassword.passwordStatus)\r\n    const errorPassMessage = useSelector<AppRootStateType, string>(state => state.newPassword.errorPassMessage)\r\n    const status = useSelector<AppRootStateType, boolean>(state => state.newPassword.status)\r\n\r\n    const redirectLogin = () => history.push(PATH.LOGIN)\r\n\r\n    const onChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let newPassword = e.currentTarget.value\r\n        setNewPassword(newPassword)\r\n    }\r\n\r\n    const repeatOnChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let newPassword2 = e.currentTarget.value\r\n        setNewPassword2(newPassword2)\r\n    }\r\n\r\n    const onChangePassword = () => {\r\n        if (newPassword.length > 7) {\r\n            if (newPassword === newPassword2) {\r\n                dispatch(newPasswordTC(newPassword, token))\r\n            } else {\r\n                (dispatch(errorPassMessageAC(\"Passwords don't match\")))\r\n                setTimeout(() => dispatch(errorPassMessageAC('')), 3000)\r\n            }\r\n        } else {\r\n            dispatch(errorPassMessageAC(\"Password must be 8 or more characters\"))\r\n            setTimeout(() => dispatch(errorPassMessageAC('')), 3000)\r\n        }\r\n    }\r\n\r\n    if (passwordStatus) setTimeout(redirectLogin, 2000)\r\n\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.preloader}>{status ? <Preloader/> : \"\"}</div>\r\n            <h2> NewPassword </h2>\r\n            <div className={s.answerServer}> {errorPassMessage} </div>\r\n            <div> Enter your new password </div>\r\n            <SuperInputText type={'password'} placeholder={'password'} value={newPassword} onChange={onChange}/>\r\n            <div> Repeat your new password </div>\r\n            <SuperInputText type={'password'} placeholder={'password'} value={newPassword2} onChange={repeatOnChange}/>\r\n            <SuperButton name={'New Password'} callFunction={onChangePassword}/>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport SuperButton from \"../../../components/SuperComponents/SuperButton/SuperButton\";\r\nimport {getAuthUserDataTC, logOutTC} from \"../../p1-login/bll/loginReducer\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\nimport s from \"./../profile.module.css\"\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useDispatch()\r\n    const name = useSelector<AppRootStateType, string>(state => state.login.name)\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n    const avatar = useSelector<AppRootStateType, string>(state => state.login.avatar)\r\n\r\n    const localAvatart = \"https://shutniki.club/wp-content/uploads/2020/01/smeshnye_avatarki_34_17105705.jpg\"\r\n\r\n\r\n    useEffect(() => {\r\n        if (isAuth) return\r\n        dispatch(getAuthUserDataTC())\r\n    }, [isAuth, dispatch])\r\n\r\n\r\n    if (!isAuth) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    return (\r\n        <div className={s.flexMainContainer}>\r\n            Profile user {name}\r\n            <div>\r\n                <SuperButton name={'log out'} onClick={() => {\r\n                    dispatch(logOutTC())\r\n                }}/>\r\n            </div>\r\n            <div className={s.avatar}>\r\n                <img src={avatar || localAvatart}\r\n                     alt={\"avatar\"}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport s from './../recoverPassword.module.css'\r\nimport SuperInputText from \"../../../components/SuperComponents/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../../../components/SuperComponents/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {recoverPasswordTC} from \"../bll/recoverPasswordReducer\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport Preloader from \"../../../components/preloader/Preloader\";\r\n\r\nexport const RecoverPassword = () => {\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState<string>('')\r\n\r\n    const from = useSelector<AppRootStateType, string>(state => state.recoverPassword.from)\r\n    const message = useSelector<AppRootStateType, string>(state => state.recoverPassword.message)\r\n    const info = useSelector<AppRootStateType, string>(state => state.recoverPassword.infoMessage)\r\n    const error = useSelector<AppRootStateType, string>(state => state.recoverPassword.errorMessage)\r\n    const status = useSelector<AppRootStateType, boolean>(state => state.recoverPassword.status)\r\n    const recoverPassword = (setEmail: string, from: string, message: string) => {\r\n        dispatch(recoverPasswordTC(setEmail, from, message))\r\n    }\r\n\r\n    const onChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let email = e.currentTarget.value\r\n        setEmail(email)\r\n    }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.preloader}>{ status ? <Preloader/> : \"\" }</div> {/*// крутилка*/}\r\n            <h2> Enter your email </h2>\r\n            <div>\r\n                <div className={s.answerServer}> {error && <span className={s.error}>{error}</span>}\r\n                    {info && <span>{info}</span>} </div>\r\n                <SuperInputText type={'text'}\r\n                                value={email}\r\n                                onChange={onChange}/>\r\n            </div>\r\n            <div>\r\n                <SuperButton name={\"Recover password\"}\r\n                             onClick={() => recoverPassword(email, from, message)}\r\n                             disabled={status}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/cat_standing_animated.7a5695a9.gif\";","import React from \"react\";\r\nimport logo from './cat_standing_animated.gif'\r\nimport {Redirect, Link} from \"react-router-dom\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\n\r\nexport const Error404 = () => {\r\n\r\n    return (\r\n        <div style={{\r\n            \"display\": \"grid\",\r\n            \"gridTemplateColumns\": \"40% 40% 20%\",\r\n            \"gridTemplateRows\": \"33% 33% 33%\",\r\n        }}>\r\n            <img style={{\r\n                \"width\": \"32%\",\r\n                \"gridColumn\": \"1/5\",\r\n                \"gridRow\": \"3/2\",\r\n            }} src={logo} alt={\"404 error cat\"}/>\r\n            <h1 style={{\r\n                \"marginBottom\": \"0.5rem\",\r\n                \"color\": \"#e32\",\r\n                \"fontSize\": \"4rem\",\r\n                \"lineHeight\": \"4.15rem\",\r\n                \"gridColumn\": \"2/5\",\r\n                \"gridRow\": \"1/2\",\r\n            }}>Oops.</h1>\r\n            <h2 style={{\r\n                \"gridArea\": \"2 / 2 / 2 / 5\",\r\n                \"color\": \"#e32\",\r\n                \"marginTop\": 0,\r\n            }}>We can't find the page you're looking for.</h2>\r\n            <p style={{\r\n                \"gridArea\": \"3 / 2 / 2 / 3\",\r\n                \"margin\": \"38px 0 0 0\",\r\n            }}>It may have expired, or there could be a typo. Maybe you can find what you need from our homepage.\r\n            </p>\r\n            <button title={'Go to LOGIN PAGE'} onClick={() => <Redirect to={PATH.LOGIN}/>} style={{\r\n                \"gridArea\": \"3 / 2 / 4 / 3\",\r\n                \"fontSize\": \"300%\",\r\n                \"width\": \"85%\",\r\n                \"height\": \"62%\",\r\n            }}><Link style={{\r\n                \"textDecoration\": \"none\",\r\n                \"color\": \"black\",\r\n            }} to=\"/\">—ฅ/ᐠ.̫ .ᐟ\\ฅ—</Link>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\n\r\nexport interface IItemsTable {\r\n    id: string;\r\n    itemName: string;\r\n    price: number;\r\n}\r\n\r\nexport interface IItemsSettings {\r\n    minPrice: number;\r\n    maxPrice: number;\r\n    min: number;\r\n    max: number;\r\n\r\n    searchName: string;\r\n    sortProducts: string;\r\n\r\n    productTotalCount: number;\r\n    page: number;\r\n    pageCount: number;\r\n}\r\n\r\nexport interface ITableState {\r\n    tableProducts: {\r\n        items: IItemsTable[];\r\n        settingsSearch: IItemsSettings;\r\n        loading: boolean\r\n    };\r\n}\r\n\r\nexport const InitialState: ITableState = {\r\n    tableProducts: {\r\n        items: [\r\n            // {itemName: 'qwertt', price: 1220, id: 'qwer1121'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer1522'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer12523'},\r\n            // {itemName: 'dfdstt', price: 8800, id: 'qwer1224'},\r\n            // {itemName: 'qwertt', price: 1220, id: 'qwer1125'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer1526'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer12527'},\r\n            // {itemName: 'dfdstt', price: 8800, id: 'qwer1228'},\r\n            // {itemName: 'qwertt', price: 1220, id: 'qwer1129'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer1520'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer125210'},\r\n            // {itemName: 'dfdstt', price: 8800, id: 'qwer12211'},\r\n            // {itemName: 'qwertt', price: 1220, id: 'qwer11212'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer15213'},\r\n            // {itemName: 'zxxxtt', price: 1332, id: 'qwer125214'},\r\n            // {itemName: 'dfdstt', price: 8800, id: 'qwer12215'},\r\n        ],\r\n        settingsSearch: {\r\n            minPrice: 0,\r\n            maxPrice: 1000,\r\n            min: 0,\r\n            max: 1000,\r\n\r\n            searchName: '',\r\n\r\n            sortProducts: '',\r\n\r\n            productTotalCount: 10,\r\n            page: 1,\r\n            pageCount: 10,\r\n        },\r\n        loading: false\r\n    },\r\n\r\n};\r\nconst SET_SEARCH_NAME = \"SET_SEARCH_NAME\"\r\nconst SET_LOADING = \"SET_LOADING\"\r\nconst SET_MIN_MAX_ITEM = \"SET_MIN_MAX_ITEM\"\r\nconst SET_PAGE_COUNT = \"SET_PAGE_COUNT\"\r\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\"\r\nconst SET_SORT = \"SET_SORT\"\r\n\r\n\r\nexport const searchReducer = (state = InitialState, action: any) => {\r\n    switch (action.type) {\r\n        case  SET_SEARCH_NAME: {\r\n            return {\r\n                ...state,\r\n                tableProducts: {\r\n                    ...state.tableProducts,\r\n                    settingsSearch: {\r\n                        ...state.tableProducts.settingsSearch, searchName: action.searchName\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case SET_LOADING: {\r\n            return {\r\n                ...state,\r\n                tableProducts: {\r\n                    ...state.tableProducts,\r\n                    loading: action.loading\r\n                }\r\n            }\r\n        }\r\n        case SET_MIN_MAX_ITEM: {\r\n            return {\r\n                ...state,\r\n                tableProducts: {\r\n                    ...state.tableProducts,\r\n                    settingsSearch: {\r\n                        ...state.tableProducts.settingsSearch, min: action.min, max: action.max\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case SET_PAGE_COUNT: {\r\n            return {\r\n                ...state,\r\n                tableProducts: {\r\n                    ...state.tableProducts,\r\n                    settingsSearch: {\r\n                        ...state.tableProducts.settingsSearch,page: action.newPage, pageCount: action.newPageCount\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n            return {\r\n                ...state,\r\n                tableProducts: {\r\n                    ...state.tableProducts,\r\n                    settingsSearch: {\r\n                        ...state.tableProducts.settingsSearch,productTotalCount: action.productTotalCount\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case SET_SORT: {\r\n            return {\r\n                ...state,\r\n                tableProducts: {\r\n                    ...state.tableProducts,\r\n                    settingsSearch: {\r\n                        ...state.tableProducts.settingsSearch,sortProducts: action.sortProducts\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actionsSearch = {\r\n    setSearchName: (searchName: string) => ({type: SET_SEARCH_NAME, searchName}) as const,\r\n    setLoading: (loading: boolean) => ({type: SET_LOADING, loading}) as const,\r\n    setMinMax:(min: number, max: number) =>({type:SET_MIN_MAX_ITEM, min, max}) as const,\r\n    setPageCount:(newPage:number , newPageCount: number) =>({type:SET_PAGE_COUNT,newPage, newPageCount}) as const,\r\n    setProductTotalCount:(productTotalCount: number) =>({type:SET_TOTAL_COUNT, productTotalCount}) as const,\r\n    setSort:(sortProducts:string) => ({type: SET_SORT, sortProducts}) as const,\r\n\r\n}\r\n\r\nexport const getSearch = (newPage?: number, newPageCount?: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(actionsSearch.setLoading(true))\r\n        // console.log('helo')\r\n        // tableApi.getTableItems().then(response=>{\r\n        // })\r\n    }\r\n}\r\n","import {commonAPI, PackType} from \"../../../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {actionsSearch} from \"../../p8-tableFilter/bll/searchReducer\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {setStatusAC, setStatusActionType} from \"../../p5-recoverPassword/bll/recoverPasswordReducer\";\r\n\r\nexport const initialState = {\r\n    cardPacks: [] as Array<PackType>,\r\n    packId: ''\r\n}\r\n\r\nexport const packsReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case'packs/SET-PACKS':\r\n            return {...state, cardPacks: action.packs}\r\n        case'packs/SET-PACKID':\r\n            return {...state, packId: action.id}\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n//AC\r\nexport const setPacksAC = (packs: Array<PackType>) => ({type: 'packs/SET-PACKS', packs} as const)\r\nexport const setPackIdAC = (id: string) => ({type: 'packs/SET-PACKID', id} as const)\r\nexport type GetStore = () => AppRootStateType\r\n\r\n//thunk\r\nexport const getPacksTC = (newPage?: number, newPageCount?: number) => (dispatch: Dispatch, getStore: GetStore) => {\r\n    const {min, max, searchName, page, pageCount, sortProducts} = getStore().search.tableProducts.settingsSearch\r\n    dispatch(setStatusAC(true))\r\n    commonAPI.getPacks(min, max, searchName, newPage || page, newPageCount || pageCount, sortProducts)\r\n        .then(res => {\r\n            dispatch(setPacksAC(res.data.cardPacks))\r\n            dispatch(actionsSearch.setProductTotalCount(res.data.cardPacksTotalCount))\r\n        })\r\n        .catch(err => {\r\n            console.log('some err in getPacks');\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC(false))\r\n        })\r\n}\r\n\r\nexport const addPackTC = (name?: string) => (dispatch: ThunkDispatch<AppRootStateType, void, setPacksACType>) => {\r\n    commonAPI.addPack(name)\r\n        .then(() => {\r\n            dispatch(getPacksTC())\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error);\r\n        })\r\n}\r\nexport const deletePackTC = (packId: string) => (dispatch: ThunkDispatch<AppRootStateType, void, setPacksACType>) => {\r\n    commonAPI.deletePack(packId)\r\n        .then(() => {\r\n            dispatch(getPacksTC())\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error);\r\n\r\n        })\r\n}\r\n\r\nexport const updatePackTC = (packId: string, name: string) => (dispatch: ThunkDispatch<AppRootStateType, void, setPacksACType>) => {\r\n    commonAPI.updatePack(packId, name)\r\n        .then(() => {\r\n            dispatch(getPacksTC())\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error);\r\n\r\n        })\r\n}\r\n\r\n\r\n//types\r\ntype InitialStateType = typeof initialState\r\ntype ActionsTypes = setPacksACType | setStatusActionType | setPackIdACType\r\ntype setPacksACType = ReturnType<typeof setPacksAC>\r\ntype setPackIdACType = ReturnType<typeof setPackIdAC>\r\n\r\n","import React, {CSSProperties, ReactNode} from 'react';\r\nimport s from './modal.module.css'\r\n\r\ntype ModalType = {\r\n    enableBackground?: boolean;\r\n    backgroundOnClick?: () => void;\r\n\r\n    width: number;\r\n    height: number;\r\n    modalOnClick?: () => void;\r\n\r\n    show: boolean\r\n    children: ReactNode\r\n    modalStyle?: CSSProperties\r\n}\r\n\r\nconst Modal = (\r\n    {\r\n        enableBackground, backgroundOnClick = () => {},\r\n        width, height, modalOnClick = () => {},\r\n        show, children, modalStyle\r\n    }: ModalType\r\n) => {\r\n    const top = `calc(50vh - ${height / 2}px)`;\r\n    const left = `calc(50vw - ${width / 2}px)`;\r\n\r\n    if (!show) return null;\r\n\r\n    return (\r\n        <div>\r\n            {enableBackground && <div\r\n                className={s.background}\r\n                onClick={backgroundOnClick}\r\n            />}\r\n            <div\r\n                style={{\r\n                    top,\r\n                    left,\r\n                    width,\r\n                    height,\r\n                    ...modalStyle\r\n                }}\r\n                className={s.modal}\r\n                onClick={modalOnClick}\r\n            >\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React, {ReactNode} from 'react';\r\nimport Modal from \"../Modal\";\r\nimport s from \"./../modal.module.css\"\r\n\r\ntype ModalQuestionType = {\r\n    show: boolean;\r\n\r\n    setTrue: () => void;\r\n    setFalse: () => void;\r\n    buttonTrue?: ReactNode;\r\n    buttonFalse?: ReactNode;\r\n\r\n    enableBackground?: boolean;\r\n    backgroundOnClick?: () => void;\r\n\r\n    width: number;\r\n    height: number;\r\n    title: string;\r\n    modalOnClick?: () => void;\r\n}\r\n\r\nconst ModalQuestion = (\r\n    {\r\n        setTrue, setFalse, buttonTrue = 'Yes', buttonFalse = 'No',\r\n        enableBackground, backgroundOnClick = () => {},\r\n        width, height, title, modalOnClick = () => {},\r\n        show,\r\n    }: ModalQuestionType\r\n) => {\r\n\r\n    return (\r\n        <Modal\r\n            enableBackground={enableBackground}\r\n            backgroundOnClick={backgroundOnClick}\r\n\r\n            width={width}\r\n            height={height}\r\n            modalOnClick={modalOnClick}\r\n\r\n            show={show}\r\n        >\r\n            {title ? title : 'question Modal'}\r\n            <div className={s.buttons}>\r\n                <div className={s.buttons}>\r\n                    <button onClick={setTrue}>{buttonTrue}</button>\r\n                    <button onClick={setFalse}>{buttonFalse}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ModalQuestion;","import React, {useState} from 'react';\r\nimport ModalQuestion from \"./ModalQuestion\";\r\n\r\ntype ModalQuestionPropsType = {\r\n    modalName: string\r\n    disabled?: boolean\r\n    onButtonModal: () => void\r\n}\r\n\r\nconst ModalQuestionContainer = ({modalName, disabled, onButtonModal}: ModalQuestionPropsType) => {\r\n    const [show, setShow] = useState(false);\r\n    const [answer, setAnswer] = useState(false);\r\n\r\n    const setTrue = () => {\r\n        onButtonModal()\r\n        setShow(false);\r\n    };\r\n    const setFalse = () => {\r\n        setAnswer(false);\r\n        setShow(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <button onClick={() => setShow(true)} disabled={disabled}>{modalName}</button>\r\n            </div>\r\n\r\n            <ModalQuestion\r\n                show={show}\r\n\r\n                setTrue={setTrue}\r\n                setFalse={setFalse}\r\n\r\n                enableBackground={true}\r\n                backgroundOnClick={() => setShow(false)}\r\n\r\n                width={300}\r\n                height={200}\r\n                title={\"Are you sure you want to?\"}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ModalQuestionContainer;","import React, {ChangeEvent, ReactNode} from 'react';\r\nimport Modal from '../Modal';\r\nimport s from './../modal.module.css'\r\n\r\n\r\ntype ModalQuestionType = {\r\n    show: boolean;\r\n    value: string;\r\n    title?: string;\r\n    onChange?: (name: string) => void;\r\n\r\n    setTrue: (value: string) => void;\r\n    setFalse: () => void;\r\n    buttonTrue?: ReactNode;\r\n    buttonFalse?: ReactNode;\r\n    enableBackground?: boolean;\r\n\r\n    backgroundOnClick?: () => void;\r\n\r\n    width: number;\r\n    height: number;\r\n\r\n    modalOnClick?: () => void;\r\n}\r\n\r\nconst ModalUpdatePack = (\r\n    {\r\n        setTrue, setFalse, title, buttonTrue, buttonFalse,\r\n        enableBackground, backgroundOnClick = () => {},\r\n        width, height, modalOnClick = () => {},\r\n        show, value, onChange,\r\n    }: ModalQuestionType\r\n) => {\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            enableBackground={enableBackground} backgroundOnClick={backgroundOnClick}\r\n            width={width} height={height} modalOnClick={modalOnClick}\r\n            show={show}\r\n        >\r\n            {title ? title : 'question Modal'}\r\n            <div className={s.content}>\r\n                <div className={s.inputs}>\r\n                    <input value={value} onChange={onChangeCallback}/>\r\n                </div>\r\n                <div className={s.buttons}>\r\n                    <button onClick={() => setTrue(value)}>{buttonTrue}</button>\r\n                    <button onClick={setFalse}>{buttonFalse}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ModalUpdatePack;","import React, {useState} from 'react';\r\nimport ModalUpdatePack from \"./ModalUpdatePack\";\r\n\r\n\r\ntype ModalQuestionPropsType = {\r\n    modalName: string\r\n    onButtonModal: (value: string, value2?: string) => void\r\n    onChange?: (name: string) => void\r\n    value: string\r\n    buttonTrue?: string\r\n    buttonFalse?: string\r\n    title?: string\r\n    disabled?: boolean\r\n}\r\n\r\nconst ModalUpdatePackContainer = (\r\n    { modalName, onButtonModal, value,\r\n        onChange, buttonTrue, buttonFalse, title, disabled\r\n    }: ModalQuestionPropsType) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [update, setUpdate] = useState(false);\r\n\r\n    const setTrue = (value: string) => {\r\n        onButtonModal(value)\r\n        setShow(false);\r\n    };\r\n    const setFalse = () => {\r\n        setUpdate(false);\r\n        setShow(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <button onClick={() => setShow(true)} disabled={disabled}>{modalName}</button>\r\n            </div>\r\n\r\n            <ModalUpdatePack\r\n                show={show}\r\n\r\n                setTrue={setTrue}\r\n                setFalse={setFalse}\r\n\r\n                enableBackground={true}\r\n                backgroundOnClick={() => setShow(false)}\r\n\r\n                width={300}\r\n                height={200}\r\n                title={title}\r\n\r\n                buttonTrue={buttonTrue || \"Yes\"}\r\n                buttonFalse={buttonFalse || \"Cancel\"}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ModalUpdatePackContainer;","import React, {useState} from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../../../components/routes/Routes\";\r\nimport {PackType} from \"../../../../api/api\";\r\nimport s from './pack.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport ModalQuestionContainer from \"../../../../components/Modals/ModalQuestion/ModalQuestionContainer\";\r\nimport {AppRootStateType} from \"../../../../app/store\";\r\nimport {deletePackTC, setPackIdAC, updatePackTC} from \"../../bll/packsReducer\";\r\nimport ModalUpdatePackContainer from \"../../../../components/Modals/ModalUpdatePack/ModalUpdatePackContainer\";\r\n\r\ntype PackPropsType = {\r\n    pack: PackType\r\n    packDate: string // для нового типа даты\r\n}\r\n\r\nexport const Pack = ({pack, packDate}: PackPropsType) => {\r\n    const dispatch = useDispatch()\r\n    const userName = useSelector<AppRootStateType, string>(state => state.login.name)\r\n\r\n    let [name, setName] = useState<string>(pack.name)\r\n    const onChange = (value: string) => {\r\n        setName(value)\r\n    }\r\n\r\n    const onBtnDeletePack = () => {\r\n        dispatch(deletePackTC(pack._id))\r\n    }\r\n    const onBtnUpdatePack = (name: string) => {\r\n        dispatch(updatePackTC(pack._id, name))\r\n    }\r\n\r\n    const disabled = userName !== pack.user_name\r\n\r\n    const onBtnCardsClick = () => {\r\n        dispatch(setPackIdAC(pack._id))\r\n    }\r\n\r\n    return <>\r\n        <div className={s.tableBody}>\r\n            <div className={s.tableBody_name}>{pack.name}</div>\r\n            <div className={s.tableBody_cardsCount}>{pack.cardsCount}</div>\r\n            <div className={s.tableBody_updated}>{packDate}</div>\r\n            <div className={s.tableBody_user}>{pack.user_name}</div>\r\n            <div className={s.tableBody_buttons}>\r\n                <ModalQuestionContainer modalName={\"del\"} onButtonModal={onBtnDeletePack} disabled={disabled}/>\r\n                <ModalUpdatePackContainer modalName={\"update\"} onButtonModal={onBtnUpdatePack}\r\n                                          value={name} onChange={onChange} buttonTrue={\"Update\"} title={'Set new name'}\r\n                                          disabled={disabled}/>\r\n                <button onClick={onBtnCardsClick}><NavLink to={PATH.CARDS}>cards</NavLink></button>\r\n                <button><NavLink to={`${PATH.TRAIN}/${pack._id}`}>train</NavLink></button>\r\n            </div>\r\n        </div>\r\n    </>\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {Range, getTrackBackground} from 'react-range';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../app/store\";\r\nimport {actionsSearch} from \"../../bll/searchReducer\";\r\n\r\n\r\nconst MultiRangeSlider: React.FC = () => {\r\n    const {tableProducts} = useSelector((store: AppRootStateType) => store.search);\r\n    const {minPrice, maxPrice} = tableProducts.settingsSearch;\r\n    const [values, setValues] = useState([minPrice, maxPrice]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const setGlobalValues = (newValues: number[]) => {\r\n        dispatch(actionsSearch.setMinMax(newValues[0], newValues[1]));\r\n        setValues(newValues);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setGlobalValues([minPrice, maxPrice]);\r\n    }, [minPrice, maxPrice]);\r\n\r\n    return (\r\n        <Range\r\n            values={values}\r\n            step={1}\r\n            min={minPrice}\r\n            max={maxPrice}\r\n            onChange={values => setGlobalValues(values)}\r\n            renderTrack={({props, children}) => (\r\n                <div\r\n                    onMouseDown={props.onMouseDown}\r\n                    onTouchStart={props.onTouchStart}\r\n                    style={{\r\n                        ...props.style,\r\n                        height: '36px',\r\n                        display: 'flex',\r\n                        width: '90%',\r\n                        margin: '5%',\r\n                    }}\r\n                >\r\n                    <div\r\n                        ref={props.ref}\r\n                        style={{\r\n                            height: '5px',\r\n                            width: '100%',\r\n                            borderRadius: '4px',\r\n                            background: getTrackBackground({\r\n                                values: values,\r\n                                colors: ['#ccc', '#548BF4', '#ccc'],\r\n                                min: minPrice,\r\n                                max: maxPrice\r\n                            }),\r\n                            alignSelf: 'center'\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            renderThumb={({index, props, isDragged}) => (\r\n                <div\r\n                    {...props}\r\n                    style={{\r\n                        ...props.style,\r\n                        height: '12px',\r\n                        width: '12px',\r\n                        borderRadius: '1px',\r\n                        backgroundColor: '#FFF',\r\n\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        display: 'flex',\r\n\r\n                        boxShadow: '0px 2px 6px #AAA',\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            position: 'absolute',\r\n                            top: '-28px',\r\n                            color: '#fff',\r\n                            fontWeight: 'bold',\r\n                            fontSize: '14px',\r\n                            fontFamily: 'Arial,Helvetica Neue,Helvetica,sans-serif',\r\n                            padding: '4px',\r\n                            borderRadius: '4px',\r\n                            backgroundColor: '#548BF4'\r\n                        }}\r\n                    >\r\n                        {values[index].toFixed(0)}\r\n                    </div>\r\n                    <div style={{height: '16px', width: '5px', backgroundColor: isDragged ? '#548BF4' : '#CCC'}}/>\r\n                </div>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default MultiRangeSlider;","import React from 'react';\r\nimport s from './search.module.css'\r\nimport {actionsSearch} from \"../bll/searchReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport MultiRangeSlider from \"./MultiRangeSlider/MultiRangeSlider\";\r\nimport {getPacksTC} from \"../../p3-packs/bll/packsReducer\";\r\n\r\n\r\nconst SearchTable = () => {\r\n    const dispatch = useDispatch()\r\n    const {tableProducts} = useSelector((state: AppRootStateType) => state.search)\r\n    const tableSearch = (searchName: string) => {\r\n        dispatch(actionsSearch.setSearchName(searchName))\r\n    }\r\n\r\n    const getResult = () => {\r\n        dispatch(getPacksTC())\r\n    }\r\n\r\n    return (\r\n        <div className={s.searchTable}>\r\n            <div>\r\n                <input className={s.inputSearch}\r\n                       value={tableProducts.settingsSearch.searchName}\r\n                       onChange={(e) => tableSearch(e.currentTarget.value)} type=\"text\"\r\n                       placeholder={'Введите значение для поиска'}\r\n                />\r\n            </div>\r\n            <div style={{\r\n                width: \"50%\"\r\n            }}><MultiRangeSlider/></div>\r\n            <div>\r\n                <button onClick={getResult}>Поиск (Search)</button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default SearchTable","import React, {CSSProperties, ReactNode} from 'react';\r\n\r\ninterface IPaginationProps {\r\n    page: number;\r\n    pageCount: number;\r\n    productTotalCount: number;\r\n    getPage: (newPage: number, newPageCount: number) => void;\r\n\r\n    title?: ReactNode;\r\n    paginationStyle?: CSSProperties;\r\n    buttonStyle?: CSSProperties;\r\n    selectStyle?: CSSProperties;\r\n}\r\n\r\nconst Pagination: React.FC<IPaginationProps> = (\r\n    {\r\n        page, pageCount, productTotalCount, getPage,\r\n\r\n        title = 'Pagination ', paginationStyle,\r\n        buttonStyle, selectStyle\r\n    }\r\n) => {\r\n    let pages = [];\r\n    const lastPage = Math.ceil(productTotalCount / pageCount)\r\n\r\n    for (let i = 1; i <= lastPage; i++) pages.push((\r\n        <button\r\n            key={i}\r\n            style={{background: page === i ? 'lime' : undefined, ...buttonStyle}}\r\n            onClick={() => getPage(i, pageCount)}\r\n        >\r\n            {i}\r\n        </button>\r\n    ));\r\n\r\n    if ((page + 4) < lastPage) {\r\n        pages[page + 2] = (\r\n            <span key={page + 3} style={buttonStyle}>\r\n                - ... -\r\n            </span>\r\n        );\r\n        pages = pages.filter((p, i) => i < (page + 3) || i === (lastPage - 1));\r\n    }\r\n    if (page > 5) {\r\n        pages[1] = (\r\n            <span key={2} style={buttonStyle}>\r\n                - ... -\r\n            </span>\r\n        );\r\n        pages = pages.filter((p, i) => i < 2 || i > page - 4);\r\n    }\r\n    const prevPage = () => {\r\n        getPage(page - 1, pageCount);\r\n        // if ((currentPage - 1) % pageNumberLimit == 0) {\r\n        //     setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n        //     setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n        // }\r\n    }\r\n    const nextPage = () => {\r\n        getPage(page + 1, pageCount);\r\n        // if (currentPage + 1 > maxPageNumberLimit) {\r\n        //     setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n        //     setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n        // }\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{\r\n            margin: '0 10px', minHeight: '50px', justifyContent: 'center',\r\n            alignItems: 'center', display: 'flex', ...paginationStyle, flexDirection: 'column'\r\n        }}>\r\n            <div>{title} </div>\r\n\r\n            <div style={{\r\n                display: 'flex'\r\n            }}><select value={pageCount} onChange={e => getPage(page, Number(e.currentTarget.value))}\r\n                       style={{\r\n                           ...selectStyle,\r\n                           marginRight: '5px'\r\n                       }}>\r\n                <option value={4}>4</option>\r\n                <option value={7}>7</option>\r\n                <option value={10}>10</option>\r\n                <option value={20}>20</option>\r\n                <option value={50}>50</option>\r\n            </select>\r\n                <div style={{\r\n                    marginLeft: '5px',\r\n                    marginRight: '5px',\r\n                    display: 'flex'\r\n                }}>\r\n                    <button onClick={prevPage}>PREV</button>\r\n                </div>\r\n                {pages}\r\n                <div style={{\r\n                    marginLeft: '5px',\r\n                    marginRight: '5px',\r\n                    display: 'flex'\r\n                }}>\r\n                    <button onClick={nextPage}>NEXT</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React, {useState} from 'react';\r\nimport {PackType} from \"../../../../api/api\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {actionsSearch} from \"../../bll/searchReducer\";\r\nimport {getPacksTC} from \"../../../p3-packs/bll/packsReducer\";\r\n\r\ntype SortTypeProps = {\r\n    title: string\r\n    arrayData: Array<PackType>\r\n}\r\n\r\nconst SortModule: React.FC<SortTypeProps> = ({title, arrayData}) => {\r\n    const [btnArrow, setBtnArrow] = useState(0)\r\n    const dispatch = useDispatch();\r\n    const btnStyle = {\r\n        background: 'none',\r\n        border: '1px solid black',\r\n        cursor: 'pointer',\r\n        margin: '0',\r\n        padding: '0'\r\n    }\r\n    const titleStyle = {\r\n        marginRight: '5px',\r\n    }\r\n    const sortItem = (x: number) => {\r\n        setBtnArrow(x)\r\n        dispatch(actionsSearch.setSort(x + 'item'));\r\n        dispatch(getPacksTC())\r\n    }\r\n    const sortIcon = (btnArrow === 0)\r\n        ?  <button style={btnStyle} onClick={() => sortItem(1)}>&#9650;</button>\r\n        :  <button style={btnStyle} onClick={() => sortItem(0)}>&#9660;</button>\r\n    return (\r\n        <div style={{\r\n            display: 'flex',\r\n            alignItems: 'center'\r\n        }}>\r\n            <div style={titleStyle}>{title}</div>\r\n            <div style={{\r\n                display: \"flex\",\r\n                flexDirection: 'column'\r\n            }\r\n            }>\r\n                {sortIcon}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SortModule;","import React, {useEffect, useState} from 'react';\r\nimport Modal from './../Modal';\r\n\r\ntype ModalUpType = {\r\n    speed: number // 1 - fast; 100 - slow\r\n}\r\n\r\nconst ModalUp = ({speed}: ModalUpType) => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleScroll = () => {\r\n        if (window.pageYOffset > 300) setShow(true);\r\n        else setShow(false);\r\n    };\r\n\r\n    const scroll = () => {\r\n        const step = window.pageYOffset / speed;\r\n        let lastState = window.pageYOffset;\r\n\r\n        const innerTimer = setInterval(() => {\r\n            if (lastState < window.pageYOffset) clearInterval(innerTimer);\r\n            lastState = window.pageYOffset;\r\n\r\n            window.scroll(0, lastState - step);\r\n            if (window.pageYOffset === 0) clearInterval(innerTimer);\r\n        }, 50);\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                enableBackground={false}\r\n                width={70}\r\n                height={50}\r\n                modalOnClick={scroll}\r\n                show={show}\r\n                modalStyle={{\r\n                    top: '85vh',\r\n                    left: '60px',\r\n                    opacity: '0.7',\r\n                    fontWeight: 'bold'\r\n                }}\r\n            >\r\n                Up\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalUp;","import React, {useEffect, useState} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport s from './table.module.css'\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addPackTC, getPacksTC} from \"../bll/packsReducer\";\r\nimport {getAuthUserDataTC} from \"../../p1-login/bll/loginReducer\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {Pack} from \"./Pack/Pack\";\r\nimport {PackType} from \"../../../api/api\";\r\nimport SearchTable from \"../../p8-tableFilter/ui/SearchTable\";\r\nimport Pagination from \"../../p8-tableFilter/ui/Pagination/Pagination\";\r\nimport {actionsSearch} from \"../../p8-tableFilter/bll/searchReducer\";\r\nimport SortModule from \"../../p8-tableFilter/ui/SortModule/SortModule\";\r\nimport Preloader from \"../../../components/preloader/Preloader\";\r\nimport ModalUp from \"../../../components/Modals/ModalUp/ModalUp\";\r\nimport ModalUpdateContainer from \"../../../components/Modals/ModalUpdatePack/ModalUpdatePackContainer\";\r\n\r\nexport const Packs = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n    const status = useSelector<AppRootStateType, boolean>(state => state.recoverPassword.status)\r\n    const packs = useSelector<AppRootStateType, Array<PackType>>(state => state.packs.cardPacks)\r\n    const errorText = useSelector<AppRootStateType, string>(state => state.login.errorText)\r\n    let [redirect, setRedirect] = useState<boolean>(false)\r\n    let [wait, setWait] = useState<boolean>(true)\r\n    let [name, setName] = useState<string>('')\r\n\r\n    const {\r\n        page,\r\n        pageCount,\r\n        productTotalCount\r\n    } = useSelector((state: AppRootStateType) => state.search.tableProducts.settingsSearch)\r\n\r\n    useEffect(() => {\r\n        if (isAuth) {\r\n            dispatch(getPacksTC())\r\n            setWait(false)\r\n            return\r\n        } else {\r\n            setTimeout(() => setRedirect(true), 2000);\r\n        }\r\n        dispatch(getAuthUserDataTC())\r\n    }, [isAuth, dispatch])\r\n\r\n    if (redirect) return <Redirect to={PATH.LOGIN}/>\r\n    if (wait) return <div className={s.errorText}> {errorText} </div>\r\n\r\n    const newPacks = packs.map((p) => {\r\n        const date = (new Date(p.updated)).toLocaleDateString() //возможность менять тип даты\r\n        return <Pack key={p._id} pack={p} packDate={date}/>\r\n    })\r\n\r\n    const onChange = (value: string) => {\r\n        setName(value)\r\n    }\r\n\r\n    const getPage = (newPage: number, newPageCount: number) => {\r\n        dispatch(actionsSearch.setPageCount(newPage, newPageCount))\r\n        dispatch(getPacksTC(newPage, newPageCount))\r\n    };\r\n\r\n    const onBtnAddPack = (name: string) => {\r\n        dispatch(addPackTC(name))\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={s.preloader}>{status ? <Preloader/> : \"\"}</div>\r\n            {/*// крутилка*/}\r\n            <h5>Packs page</h5>\r\n            <SearchTable/>\r\n            table\r\n            <div className={s.table}>\r\n                <div className={s.tableHeader}>\r\n                    <div className={s.tableHeader_packsName}>Name</div>\r\n                    <div className={s.tableHeader_cardsCount}><SortModule arrayData={packs} title={'CardsCount'}/></div>\r\n                    <div className={s.tableHeader_updated}>updated</div>\r\n                    <div className={s.tableHeader_user}>User Name</div>\r\n                    <div className={s.tableHeader_buttonAdd}>\r\n                        <ModalUpdateContainer modalName={'add'} onButtonModal={onBtnAddPack}\r\n                                              value={name} onChange={onChange}\r\n                                              title={'Enter pack name'} buttonTrue={'Enter'}/>\r\n                    </div>\r\n                </div>\r\n                {newPacks}\r\n                <div style={{\r\n                    width: '100%'\r\n                }}><Pagination page={page} pageCount={pageCount} productTotalCount={productTotalCount}\r\n                               getPage={getPage}/></div>\r\n            </div>\r\n            <ModalUp speed={10}/>\r\n        </>\r\n    )\r\n}","import {CardType, commonAPI} from \"../../../api/api\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\n\r\nconst initialState = {\r\n    cards: [] as Array<CardType>,\r\n    packUserId: '',\r\n    cardsTotalCount: 0,\r\n    page: 1,\r\n    pageCount: 10,\r\n    error: ''\r\n}\r\n\r\nexport const cardsReducer = (state: initialStateType = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case 'CARDS/SET-CARDS': {\r\n            return {\r\n                ...state,\r\n                cards: action.cards,\r\n                packUserId: action.packUserId,\r\n                page: action.page,\r\n                cardsTotalCount: action.cardsTotalCount,\r\n                pageCount: action.pageCount\r\n            }\r\n        }\r\n        case 'CARDS/SET-CARDS_GRADE': {\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map(c => c._id === action.cardId ? {...c, grade: action.grade} : c)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//action creators\r\n\r\nexport const setCardsAC = (cards: Array<CardType>, packUserId: string,\r\n                           page: number, cardsTotalCount: number, pageCount: number) =>\r\n    ({type: 'CARDS/SET-CARDS', cards, packUserId, page, cardsTotalCount, pageCount} as const)\r\n\r\nexport const setCardsGradeAC = (grade: number, cardId: string) => ({\r\n    type: 'CARDS/SET-CARDS_GRADE',\r\n    grade,\r\n    cardId\r\n} as const)\r\n\r\n\r\n//thunk\r\n\r\nexport const getCardTC = (packId: string) => (dispatch: ThunkDispatch<AppRootStateType, void, ActionsType>) => {\r\n    commonAPI.getCards(packId)\r\n        .then((res) => {\r\n            console.log(res);\r\n            dispatch(setCardsAC(res.data.cards, res.data.packUserId, res.data.page, res.data.cardsTotalCount, res.data.pageCount))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const addCardTC = (packId: string, question?: string, answer?: string) => (dispatch: ThunkDispatch<AppRootStateType, void, ActionsType>) => {\r\n    commonAPI.addCard(packId, question, answer)\r\n        .then(() => {\r\n\r\n            dispatch(getCardTC(packId))\r\n\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const deleteCardTC = (packId: string, cardId: string) => (dispatch: ThunkDispatch<AppRootStateType, void, ActionsType>) => {\r\n    commonAPI.deleteCard(cardId)\r\n        .then(() => {\r\n            dispatch(getCardTC(packId))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error);\r\n\r\n        })\r\n}\r\n\r\nexport const updateCardTC = (packId: string, cardId: string, question?: string, answer?: string) => (dispatch: ThunkDispatch<AppRootStateType, void, ActionsType>) => {\r\n    commonAPI.updateCard(cardId, question, answer)\r\n        .then(() => {\r\n            dispatch(getCardTC(packId))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error);\r\n\r\n        })\r\n}\r\n\r\nexport const updateGradeCardTC = (cardId: string, grade: number, packId: string) => (dispatch: ThunkDispatch<AppRootStateType, void, ActionsType>) => {\r\n    commonAPI.updateGrade(grade, cardId)\r\n        .then(({data}) => {\r\n            dispatch(setCardsGradeAC(data.grade, data.card_id))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error);\r\n\r\n        })\r\n}\r\n\r\n\r\n//types\r\nexport type initialStateType = typeof initialState\r\nexport type ActionsType =\r\n    | ReturnType<typeof setCardsAC>\r\n    | ReturnType<typeof setCardsGradeAC>\r\n\r\n","import React, {ChangeEvent, ReactNode} from 'react';\r\nimport Modal from '../Modal';\r\nimport s from './../modal.module.css'\r\n\r\n\r\ntype ModalQuestionType = {\r\n    show: boolean;\r\n    question: string;\r\n    answer: string\r\n    title?: string;\r\n    onChange?: (question: string) => void;\r\n    onChange2?: (answer: string) => void;\r\n\r\n    setTrue: (question: string, answer: string) => void;\r\n    setFalse: () => void;\r\n    buttonTrue?: ReactNode;\r\n    buttonFalse?: ReactNode;\r\n\r\n    enableBackground?: boolean;\r\n    backgroundOnClick?: () => void;\r\n\r\n    width: number;\r\n    height: number;\r\n\r\n    modalOnClick?: () => void;\r\n}\r\n\r\nconst ModalUpdateCards = (\r\n    {\r\n        setTrue, setFalse, title, buttonTrue, buttonFalse,\r\n        enableBackground, backgroundOnClick = () => {},\r\n        width, height, modalOnClick = () => {},\r\n        show, question, answer, onChange, onChange2\r\n    }: ModalQuestionType\r\n) => {\r\n\r\n    const onChangeQuestion = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e.currentTarget.value);\r\n    }\r\n    const onChangeAnswer = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange2 && onChange2(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            enableBackground={enableBackground} backgroundOnClick={backgroundOnClick}\r\n            width={width} height={height} modalOnClick={modalOnClick}\r\n            show={show}\r\n        >\r\n            {title ? title : 'question Modal'}\r\n            <div className={s.content}>\r\n                <div className={s.inputs}>\r\n                    <input value={question} onChange={onChangeQuestion}/>\r\n                    <input value={answer} onChange={onChangeAnswer}/>\r\n                </div>\r\n                <div className={s.buttons}>\r\n                    <button onClick={() => setTrue(question, answer)}>{buttonTrue}</button>\r\n                    <button onClick={setFalse}>{buttonFalse}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ModalUpdateCards;","import React, {useState} from 'react';\r\nimport ModalUpdateCards from \"./ModalUpdateCards\";\r\n\r\n\r\ntype ModalQuestionPropsType = {\r\n    modalName: string\r\n    onButtonModal: (value: string, value2?: string) => void\r\n    onChange?: (question: string) => void\r\n    onChange2?: (answer: string) => void\r\n    question: string\r\n    answer: string\r\n    buttonTrue?: string\r\n    buttonFalse?: string\r\n    title?: string\r\n    disabled?: boolean\r\n}\r\n\r\nconst ModalUpdateCardsContainer = (\r\n    { modalName, onButtonModal, question, answer,\r\n        onChange, onChange2, buttonTrue, buttonFalse, title, disabled\r\n    }: ModalQuestionPropsType) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [update, setUpdate] = useState(false);\r\n\r\n    const setTrue = (question: string, answer: string) => {\r\n        onButtonModal(question, answer)\r\n        setShow(false);\r\n    };\r\n    const setFalse = () => {\r\n        setUpdate(false);\r\n        setShow(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <button onClick={() => setShow(true)} disabled={disabled}>{modalName}</button>\r\n            </div>\r\n\r\n            <ModalUpdateCards\r\n                show={show}\r\n\r\n                setTrue={setTrue}\r\n                setFalse={setFalse}\r\n\r\n                enableBackground={true}\r\n                backgroundOnClick={() => setShow(false)}\r\n\r\n                width={300}\r\n                height={200}\r\n                title={title}\r\n\r\n                buttonTrue={buttonTrue || \"Yes\"}\r\n                buttonFalse={buttonFalse || \"Cancel\"}\r\n                question={question}\r\n                answer={answer}\r\n                onChange={onChange}\r\n                onChange2={onChange2}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ModalUpdateCardsContainer;","import s from './card.module.css'\r\nimport React, {useState} from \"react\";\r\nimport {CardType} from \"../../../api/api\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {deleteCardTC, updateCardTC} from \"../bll/cardsReducer\";\r\nimport ModalQuestionContainer from \"../../../components/Modals/ModalQuestion/ModalQuestionContainer\";\r\nimport ModalUpdateCardsContainer from \"../../../components/Modals/ModalUpdateCards/ModalUpdateCardsContainer\";\r\n\r\ntype CardPropsType = {\r\n    card: CardType\r\n}\r\n\r\nexport const Card = ({card}: CardPropsType) => {\r\n    const dispatch = useDispatch()\r\n    const packId = useSelector<AppRootStateType, string>(state => state.packs.packId)\r\n    const userId = useSelector<AppRootStateType, string>(state => state.login._id)\r\n\r\n    let [question, setQuestion] = useState<string>(card.question)\r\n    let [answer, setAnswer] = useState<string>(card.answer)\r\n    const onChangeQuestion = (value: string) => {\r\n        setQuestion(value)\r\n    }\r\n    const onChangeAnswer = (value: string) => {\r\n        setAnswer(value)\r\n    }\r\n\r\n    const onBtnDeleteCard = () => {\r\n        dispatch(deleteCardTC(packId, card._id))\r\n    }\r\n    const onBtnUpdateCard = (question?: string, answer?: string) => {\r\n        dispatch(updateCardTC(packId, card._id, question, answer))\r\n    }\r\n\r\n    const disabled = userId !== card.user_id\r\n\r\n\r\n    return <>\r\n        <div className={s.mainWrapper}>\r\n            <div className={s.question}>{card.question}</div>\r\n            <div className={s.answer}>{card.answer}</div>\r\n            <div className={s.grade}>{card.grade}</div>\r\n            <div className={s.updated}>{card.updated}</div>\r\n            <div className={s.buttons}>\r\n                <ModalQuestionContainer modalName={\"del\"} onButtonModal={onBtnDeleteCard} disabled={disabled}/>\r\n                <ModalUpdateCardsContainer modalName={\"update\"} onButtonModal={onBtnUpdateCard}\r\n                                           question={question} answer={answer} onChange={onChangeQuestion}\r\n                                           onChange2={onChangeAnswer} buttonTrue={\"Update\"} title={'Set new question'}\r\n                                           disabled={disabled}/>\r\n            </div>\r\n        </div>\r\n    </>\r\n}","import React, {useEffect, useState} from 'react'\r\nimport s from \"../../p3-packs/ui/table.module.css\";\r\nimport Preloader from \"../../../components/preloader/Preloader\";\r\nimport SearchTable from \"../../p8-tableFilter/ui/SearchTable\";\r\nimport Pagination from \"../../p8-tableFilter/ui/Pagination/Pagination\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {Card} from \"../card/Card\";\r\nimport {CardType} from \"../../../api/api\";\r\nimport {addCardTC, getCardTC} from \"../bll/cardsReducer\";\r\nimport ModalUpdateCardsContainer from \"../../../components/Modals/ModalUpdateCards/ModalUpdateCardsContainer\";\r\nimport {getPacksTC} from \"../../p3-packs/bll/packsReducer\";\r\nimport {getAuthUserDataTC} from \"../../p1-login/bll/loginReducer\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nexport const Cards = () => {\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n    const status = useSelector<AppRootStateType, boolean>(state => state.recoverPassword.status)\r\n    const cards = useSelector<AppRootStateType, Array<CardType>>(state => state.cards.cards)\r\n    const packId = useSelector<AppRootStateType, string>(state => state.packs.packId)\r\n    let [redirect, setRedirect] = useState<boolean>(false)\r\n\r\n    let [question, setQuestion] = useState<string>('')\r\n    let [answer, setAnswer] = useState<string>('')\r\n\r\n    const newCards = cards.map((c) => {\r\n        return <Card key={c._id} card={c}/>\r\n    })\r\n\r\n    const onChangeQuestion = (question: string) => {\r\n        setQuestion(question)\r\n    }\r\n    const onChangeAnswer = (answer: string) => {\r\n        setAnswer(answer)\r\n    }\r\n\r\n    const onBtnAddCard = (question: string, answer?: string) => {\r\n        dispatch(addCardTC(packId, question, answer))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isAuth) {\r\n            dispatch(getCardTC(packId))\r\n            setRedirect(false)\r\n            return\r\n        } else {\r\n            setRedirect(true)\r\n        }\r\n        dispatch(getAuthUserDataTC())\r\n    }, [isAuth, dispatch])\r\n\r\n    if (redirect) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    return (\r\n        <>\r\n            <div className={s.preloader}>{status ? <Preloader/> : \"\"}</div>\r\n            <SearchTable/>\r\n            table\r\n            <div className={s.table}>\r\n                <div className={s.tableHeader}>\r\n                    <div className={s.tableHeader_packsName}>question</div>\r\n                    <div className={s.tableHeader_user}>answer</div>\r\n                    <div className={s.tableHeader_cardsCount}>grade</div>\r\n                    <div className={s.tableHeader_updated}>updated</div>\r\n                    <div className={s.tableHeader_buttonAdd}>\r\n                        <ModalUpdateCardsContainer modalName={'add'} onButtonModal={onBtnAddCard} question={question}\r\n                                                   answer={answer} onChange={onChangeQuestion}\r\n                                                   onChange2={onChangeAnswer}\r\n                                                   title={'Enter new card'} buttonTrue={'Enter'}/>\r\n                    </div>\r\n                </div>\r\n                {newCards}\r\n            </div>\r\n            <Pagination page={19} pageCount={12} productTotalCount={30}\r\n                        getPage={() => {\r\n                            'getpage'\r\n                        }}/>\r\n\r\n        </>\r\n    )\r\n}","import {CardType} from \"../../api/api\";\r\n\r\nexport const getRandomCard = (cards: Array<CardType>) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    console.log('test: ', sum, rand, res)\r\n\r\n    return cards[res.id + 1];\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {CardType} from \"../../api/api\";\r\nimport {getCardTC, updateGradeCardTC} from \"../p3-cards/bll/cardsReducer\";\r\nimport {getRandomCard} from \"../../components/functions/getRandomCard\";\r\nimport {PATH} from \"../../components/routes/Routes\";\r\nimport {NavLink, useParams} from \"react-router-dom\";\r\n\r\nexport const TrainPage = () => {\r\n    const grades = ['не знал', 'забыл', 'долго думал', 'перепутал', 'знал'];\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n    const cards = useSelector<AppRootStateType, Array<CardType>>(state => state.cards.cards)\r\n    const {packId} = useParams<Record<string, string>>();\r\n\r\n\r\n    const [card, setCard] = useState<CardType>({\r\n        _id: 'fake',\r\n        question: 'Question?',\r\n        answer: 'Answer',\r\n        cardsPack_id: 'cardsPack_id',\r\n        grade: 0,\r\n        rating: 0,\r\n        shots: 0,\r\n        type: '',\r\n        user_id: 'user_id',\r\n        created: '',\r\n        updated: '',\r\n        comments: 'comments'\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (first) {\r\n            dispatch(getCardTC(packId));\r\n            setFirst(false);\r\n        }\r\n        console.log('cards', cards)\r\n        if (cards.length > 0) setCard(getRandomCard(cards));\r\n\r\n    }, [dispatch, packId, cards, first]);\r\n\r\n    const onNext = () => {\r\n        dispatch(updateGradeCardTC(card._id, 5, packId))\r\n        setCard(getRandomCard(cards));\r\n        setIsChecked(false);\r\n    }\r\n    const onGradeBtnClick = (grade: number) => {\r\n        dispatch(updateGradeCardTC(card._id, grade, packId))\r\n        setCard(getRandomCard(cards));\r\n        setIsChecked(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h6>TrainPage</h6>\r\n\r\n            <div>{card.question}</div>\r\n            <div>\r\n                <button onClick={() => setIsChecked(true)}>show answer</button>\r\n            </div>\r\n\r\n            {isChecked && (<div>{card.answer}</div>)}\r\n\r\n            {grades.map((g, i) => (\r\n                <button key={'grade-' + i} onClick={() => {\r\n                    onGradeBtnClick(i + 1)\r\n                }}>{g}</button>\r\n            ))}\r\n\r\n            <div>\r\n                <button><NavLink to={PATH.PACKS}>cancel</NavLink></button>\r\n                <button onClick={onNext}>next</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {Registration} from \"../../pages/p2-registration/ui/Registration\";\r\nimport {Login} from \"../../pages/p1-login/ui/Login\";\r\nimport {NewPassword} from \"../../pages/p6-newPassword/ui/NewPassword\";\r\nimport {Profile} from \"../../pages/p3-profile/ui/Profile\";\r\nimport {RecoverPassword} from \"../../pages/p5-recoverPassword/ui/RecoverPassword\";\r\nimport {Error404} from \"../../pages/p4-404/ui/Error404\";\r\nimport {Packs} from \"../../pages/p3-packs/ui/Packs\";\r\nimport {Cards} from \"../../pages/p3-cards/ui/Cards\";\r\nimport SearchTable from \"../../pages/p8-tableFilter/ui/SearchTable\";\r\nimport {TrainPage} from \"../../pages/p9-learnPage/TrainPage\";\r\n\r\n\r\nexport const PATH = {\r\n    HOME_PAGE: '/',\r\n    LOGIN: '/login',\r\n    NEW_PASSWORD: '/new-password/:token',\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    PASSWORD_RECOVERY: '/recover_password',\r\n    TEST_COMPONENT: '/testComponent',\r\n    PACKS: '/packs',\r\n    CARDS: '/cards',\r\n    ERROR_404: '/404',\r\n    SEARCH_TABLE: '/search_table',\r\n    TRAIN: '/train',\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n                <Route exact path={['/', PATH.LOGIN]} render={() => <Login/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword/>}/>\r\n                <Route exact path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route exact path={PATH.PASSWORD_RECOVERY} render={() => <RecoverPassword/>}/>\r\n                <Route exact path={PATH.PACKS} render={() => <Packs/>}/>\r\n                <Route exact path={`${PATH.CARDS}/:packId?`} render={() => <Cards/>}/>\r\n                <Route exact path={PATH.SEARCH_TABLE} render={() => <SearchTable/>}/>\r\n                <Route exact path={`${PATH.TRAIN}/:packId?`} render={() => <TrainPage/>}/>\r\n                {/*<Route exact path={PATH.TEST_COMPONENT} render={() => <Test/>}/>*/}\r\n                <Route path={PATH.ERROR_404} render={() => <Error404/>}/>\r\n                <Redirect from={'*'} to={PATH.ERROR_404}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {PATH} from '../routes/Routes'\r\nimport s from './header.module.css'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={s.header}>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.REGISTRATION}>registration</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.LOGIN}>login</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.NEW_PASSWORD}>new password</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.PROFILE}>profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.PASSWORD_RECOVERY}>recover password</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.PACKS}>packs</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.CARDS}>cards</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Routes} from \"../components/routes/Routes\";\r\nimport {Header} from \"../components/header/Header\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n\r\n                <HashRouter>\r\n                    <Header/>\r\n                    <Routes/>\r\n                </HashRouter>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {}\r\nexport const profileReducer = (state= initialState, action: any) => {\r\n    switch (action.type) {\r\n        case \"\": {\r\n            return {}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {loginReducer} from \"../pages/p1-login/bll/loginReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {registrationReducer} from \"../pages/p2-registration/bll/registrationReducer\";\r\nimport {profileReducer} from \"../pages/p3-profile/bll/profileReducer\";\r\nimport {recoverPasswordReducer} from \"../pages/p5-recoverPassword/bll/recoverPasswordReducer\";\r\nimport {newPasswordReducer} from \"../pages/p6-newPassword/bll/newPasswordReducer\";\r\nimport {searchReducer} from \"../pages/p8-tableFilter/bll/searchReducer\";\r\nimport {packsReducer} from \"../pages/p3-packs/bll/packsReducer\";\r\nimport {cardsReducer} from \"../pages/p3-cards/bll/cardsReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    registration: registrationReducer,\r\n    profile: profileReducer,\r\n    recoverPassword: recoverPasswordReducer,\r\n    newPassword: newPasswordReducer,\r\n    search: searchReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app/App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./app/store\";\r\n\r\n// test\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}