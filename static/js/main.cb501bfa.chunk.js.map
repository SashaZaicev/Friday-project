{"version":3,"sources":["pages/p2-checkIn/ui/CheckIn.module.css","pages/p2-checkIn/ui/SInp/SInp.module.css","components/SuperComponents/SuperInput/SuperInputText.module.css","pages/p2-checkIn/ui/SBtn/SBtn.module.css","components/SuperComponents/SuperButton/SuperButton.module.css","pages/p2-checkIn/ui/SCBox/SCBox.module.css","pages/p1-login/ui/login.module.css","components/SuperComponents/SuperCheckbox/SuperCheckbox.module.css","pages/p5-recoverPassword/recoverPassword.module.css","pages/p7-test/ui/test.module.css","pages/p2-checkIn/api/api.tsx","pages/p2-checkIn/bll/checkInReducer.ts","pages/p2-checkIn/ui/SBtn/SBtn.tsx","pages/p2-checkIn/ui/SCBox/SCBox.tsx","pages/p2-checkIn/ui/SInp/SInp.tsx","pages/p2-checkIn/ui/CheckIn.tsx","components/SuperComponents/SuperInput/SuperInputText.tsx","components/SuperComponents/SuperCheckbox/SuperCheckbox.tsx","components/SuperComponents/SuperButton/SuperButton.tsx","pages/p1-login/api/login-api.ts","pages/p1-login/bll/loginReducer.ts","pages/p1-login/ui/Login.tsx","pages/p6-newPassword/ui/NewPassword.tsx","pages/p3-profile/ui/Profile.tsx","pages/p5-recoverPassword/ui/PYh.gif","pages/p5-recoverPassword/api/api.ts","pages/p5-recoverPassword/bll/recoverPasswordReducer.ts","pages/p5-recoverPassword/ui/RecoverPassword.tsx","pages/p7-test/ui/Test.tsx","pages/p4-404/ui/Error.tsx","components/routes/Routes.tsx","components/header/Header.tsx","app/App.tsx","reportWebVitals.ts","pages/p3-profile/bll/profileReducer.ts","pages/p6-newPassword/bll/newPasswordReducer.ts","app/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","userAPI","login","password","post","initialState","id","confirmPassword","isSuccess","rememberMe","error","loading","errorServer","SET_LOGIN","SET_ERROR","SET_ERR_SERV","SET_PASSWORD","SET_REPEAT_PASSWORD","SET_SUCCESS","SET_LOADING","SET_REMEMBER_ME","actionsCheckIn","type","err","SBtn","callFunction","red","name","className","restProps","finalClassName","s","default","nameButton","onClick","SCBox","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","e","currentTarget","checked","SInp","onChangeText","onKeyPress","onEnter","info","onChangeValue","value","finalSpanClassName","errorInput","superInput","content","key","CheckIn","dispatch","useDispatch","useState","setLogin","setPassword","password2","setPassword2","setRememberMe","stateRegistrationIsSuccess","useSelector","state","registration","stateRegistrationError","stateLoading","to","PATH","LOGIN","errInputLogin","errInputPas","errInputPas2","checkInBlock","checkInTitle","style","color","help","placeholder","repeatPassword","checkInBtn","then","res","setTimeout","catch","er","console","log","response","data","createUserTC","disabled","checkedRemember","href","SuperInputText","SuperCheckbox","SuperButton","authAPI","email","isLoggedIn","errorText","setIsLoggedInAC","Login","PROFILE","flexMainContainer","setEmailAC","setPasswordAC","toString","setRememberMeAC","text","forgot","NewPassword","Profile","withCredentials","recoverPasswordAPI","from","message","errorMessage","infoMessage","status","changeEmailAC","setStatusAC","infoMessageAC","errorMessageAC","RecoverPassword","recoverPassword","finally","recoverPasswordTC","preloader","src","nya","alt","Test","Error","HOME_PAGE","NEW_PASSWORD","CHECK_IN","PASSWORD_RECOVERY","TEST_COMPONENT","ERROR_404","Routes","exact","path","render","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","profile","newPassword","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,aAAe,8BAA8B,aAAe,8BAA8B,WAAa,4BAA4B,KAAO,wB,mBCA5JD,EAAOC,QAAU,CAAC,WAAa,yBAAyB,WAAa,yBAAyB,MAAQ,oBAAoB,QAAU,wB,mBCApID,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,8BAA8B,QAAU,kC,mBCAlKD,EAAOC,QAAU,CAAC,QAAU,sBAAsB,IAAM,oB,mBCAxDD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,mBCA/DD,EAAOC,QAAU,CAAC,SAAW,0B,mBCA7BD,EAAOC,QAAU,CAAC,kBAAoB,iCAAiC,OAAS,wB,mBCAhFD,EAAOC,QAAU,CAAC,SAAW,kC,mBCA7BD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,UAAY,qC,mBCAzED,EAAOC,QAAU,CAAC,QAAU,wB,qMCGtBC,EAAWC,IAAMC,OAAO,CAE1BC,QAAS,yCAGAC,EAAU,SAEZC,EAAeC,GAClB,OAAON,EAASO,KAAT,kBAAiC,CACpC,MAASF,EAAO,SAAYC,KCR3BE,EAAe,CACxBC,GAAI,IACJJ,MAAO,GACPC,SAAU,GACVI,gBAAiB,GACjBC,WAAW,EACXC,YAAY,EACZC,OAAO,EACPC,SAAS,EACTC,YAAa,IAEXC,EAAY,YACZC,EAAY,YACZC,EAAe,eACfC,EAAe,eACfC,EAAsB,sBACtBC,EAAc,cACdC,EAAc,cACdC,EAAkB,kBAyDXC,EAIG,SAACb,GAAD,MAAyB,CAACc,KAAM,cAAed,cAJlDa,EAKG,SAACV,GAAD,MAAuB,CAACW,KAAM,cAAeX,YALhDU,EAMC,SAACX,GAAD,MAAqB,CAACY,KAAMR,EAAWJ,UANxCW,EAOG,SAACE,GAAD,MAAkB,CAACD,KAAMP,EAAcQ,Q,gCCvDxCC,EAnB8B,SAAC,GAMxC,IAJEC,EAIH,EAJGA,aACAC,EAGH,EAHGA,IAAgBC,GAGnB,EAHQC,UAGR,EAHmBD,MACbE,EAEN,yDACKC,EAAc,UAAMJ,EAAMK,IAAEL,IAAMK,IAAEC,QAAtB,YAAiCD,IAAEC,SACjDC,EAAaN,GAAc,QAEjC,OACI,gDACIC,UAAWE,EACXI,QAAS,kBAAMT,EAAeA,IAAiB,KAC3CI,GAHR,aAIEI,M,iBCeKE,EAhCiC,SAAC,GAS5C,EAPGb,KAOF,IANEc,EAMH,EANGA,SAAUC,EAMb,EANaA,gBACVT,EAKH,EALGA,UACAU,GAIH,EALcC,cAKd,EAJGD,UAEGT,EAEN,4FAOKW,EAAmB,UAAMT,IAAEU,SAAR,YAAoBb,GAAwB,IAErE,OACI,kCACI,mCACIN,KAAM,WACNc,SAZa,SAACM,GAEtBN,GAAYA,EAASM,GACrBL,GAAmBA,EAAgBK,EAAEC,cAAcC,UAU3ChB,UAAWY,GAEPX,IAEPS,GAAY,sBAAMV,UAAWG,IAAEQ,cAAnB,SAAmCD,Q,iBCiC7CO,EArDiC,SAAC,GAa5C,EAXGvB,KAWF,IAVEc,EAUH,EAVGA,SAAUU,EAUb,EAVaA,aACVC,EASH,EATGA,WAAYC,EASf,EATeA,QACZC,EAQH,EARGA,KACAvC,EAOH,EAPGA,MACAkB,EAMH,EANGA,UAAWW,EAMd,EANcA,cACXW,EAKH,EALGA,cACAC,EAIH,EAJGA,MAEGtB,EAEN,4IAgBKuB,EAAkB,UAAMrB,IAAErB,MAAR,YAAiB6B,GAAgC,IACnEC,EAAmB,YAAQ9B,EAAQqB,IAAEsB,WAAatB,IAAEuB,WAAjC,YAA+C1B,GAExE,OACI,sBAAKA,UAAWG,IAAEwB,QAAlB,UACI,8BACI,mCACIjC,KAAM,OACNc,SAvBS,SAACM,GACtBN,GACGA,EAASM,GAEZI,GAAgBA,EAAaJ,EAAEC,cAAcQ,OAC7CD,GAAiBA,EAAcR,EAAEC,cAAcQ,QAmBnCJ,WAjBW,SAACL,GACxBK,GAAcA,EAAWL,GAEf,UAAVA,EAAEc,KACCR,GACAA,KAaSpB,UAAWY,EACXW,MAAOA,GAEHtB,MAGZ,gCACKnB,GAAS,sBAAMkB,UAAWwB,EAAjB,SAAsC1C,IAC/CuC,GAAQ,+BAAOA,WCpDnBQ,EAAoB,WAE7B,IAAMC,EAAWC,cAFkB,EAITC,mBAAS,oBAJA,mBAI5B1D,EAJ4B,KAIrB2D,EAJqB,OAKHD,mBAAS,aALN,mBAK5BzD,EAL4B,KAKlB2D,EALkB,OAMDF,mBAAS,aANR,mBAM5BG,EAN4B,KAMjBC,EANiB,OAOCJ,oBAAS,GAPV,mBAOhBK,GAPgB,WAQ7BC,EAA6BC,aAA8B,SAAAC,GAAK,OAAIA,EAAMC,aAAa7D,aACvF8D,EAAyBH,aAA8B,SAAAC,GAAK,OAAIA,EAAMC,aAAa3D,SACnFE,EAAcuD,aAA8B,SAAAC,GAAK,OAAIA,EAAMC,aAAazD,eACxE2D,EAAeJ,aAA8B,SAAAC,GAAK,OAAIA,EAAMC,aAAa1D,WAuC/E,GAAIuD,EAA4B,OAAO,cAAC,IAAD,CAAUM,GAAIC,GAAKC,QAC1D,IAAMC,EAA2B,KAAVzE,GAAgBoE,EAA0B,oGAAsB,GACjFM,EAA4B,KAAbzE,GAAmBmE,EAA0B,oGAAsB,GAClFO,EAA8B,KAAdd,GAAoBO,EAA0B,oGAAsB,GAC1F,OACI,sBAAK1C,UAAWG,IAAE+C,aAAlB,UACI,oBAAIlD,UAAWG,IAAEgD,aAAjB,0BACCR,EACK,qBAAKS,MAAO,CAACC,MAAO,UAApB,wBACCX,GAA0B1D,EACvB,sBAAKoE,MAAO,CAACC,MAAO,OAApB,cAA8BrE,GAA4B,4EAC1DsD,EACI,qBAAKc,MAAO,CAACC,MAAO,QAApB,sBACA,8BAAK,yBAGnB,2CACI,uBAAOrD,UAAWG,IAAEmD,KAApB,uCACA,cAAC,EAAD,CACIxE,MAAOiE,EACPxB,MAAOjD,EACPkC,SAzCM,SAACM,GACnB,IAAIxC,EAAQwC,EAAEC,cAAcQ,MAC5BU,EAAS3D,IAwCGoB,KAAM,QACN6D,YAAa,wBAErB,8CACI,uBAAOvD,UAAWG,IAAEmD,KAApB,sDAEA,cAAC,EAAD,CACIxE,MAAOkE,EACPzB,MAAOhD,EACPiC,SA9CS,SAACM,GACtB,IAAIvC,EAAWuC,EAAEC,cAAcQ,MAC/BW,EAAY3D,IA8CAgF,YAAa,gBAGrB,sDACI,uBAAOvD,UAAWG,IAAEmD,KAApB,sDAEA,cAAC,EAAD,CACIxE,MAAOmE,EACP1B,MAAOY,EACP3B,SApDe,SAACM,GAC5B,IAAI0C,EAAiB1C,EAAEC,cAAcQ,MACrCa,EAAaoB,IAoDDD,YAAa,wBAGrB,sBAAKvD,UAAWG,IAAEsD,WAAlB,UACI,cAAC,EAAD,CAAM5D,aArFF,WAEI,IAAZtB,GAA+B,IAAb4D,GAA4B,IAAT7D,EACjCC,IAAa4D,IACbL,EJ6DY,SAACxD,EAAeC,GACxC,OAAO,SAACuD,GACJzD,EAAeC,EAAOC,GACjBmF,MAAK,SAAAC,GACF7B,EAASrC,GAA0B,IACnCqC,EAASrC,GAA0B,IACnCmE,YAAW,kBAAM9B,EAASrC,GAA0B,MAAS,QAEpEoE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZhC,EAASrC,GAA0B,IACnCqC,EAASrC,EAA0BqE,EAAGG,SAASC,KAAKpF,QACpD8E,YAAW,kBAAM9B,EAASrC,EAA0B,OAAM,SIzE7C0E,CAAa7F,EAAOC,IAC7BuD,EAASrC,GAA0B,MAGvCqC,EAASrC,GAAwB,IACjCqC,EAASrC,GAA0B,MA6EzBM,KAAM,WACNqE,WAAYzB,IAGlB,cAAC,EAAD,CAAOnC,SA1DS,SAACM,GACzB,IAAIuD,EAAkBvD,EAAEC,cAAcC,QACtCqB,EAAcgC,SA0DV,mBAAGC,KAAK,UAAR,yB,iBC/CGC,EArD2C,SAAC,GAatD,EAXG7E,KAWF,IAVEc,EAUH,EAVGA,SAAUU,EAUb,EAVaA,aACVC,EASH,EATGA,WAAYC,EASf,EATeA,QACZC,EAQH,EARGA,KACAvC,EAOH,EAPGA,MACAkB,EAMH,EANGA,UAAWW,EAMd,EANcA,cACXW,EAKH,EALGA,cACAC,EAIH,EAJGA,MAEGtB,EAEN,4IAgBKuB,EAAkB,UAAMrB,IAAErB,MAAR,YAAiB6B,GAAgC,IACnEC,EAAmB,YAAQ9B,EAAQqB,IAAEsB,WAAatB,IAAEuB,WAAjC,YAA+C1B,GAExE,OACI,sBAAKA,UAAWG,IAAEwB,QAAlB,UACI,8BACI,mCACIjC,KAAM,OACNc,SAvBS,SAACM,GACtBN,GACGA,EAASM,GAEZI,GAAgBA,EAAaJ,EAAEC,cAAcQ,OAC7CD,GAAiBA,EAAcR,EAAEC,cAAcQ,QAmBnCJ,WAjBW,SAACL,GACxBK,GAAcA,EAAWL,GAEf,UAAVA,EAAEc,KACCR,GACAA,KAaSpB,UAAWY,EACXW,MAAOA,GAEHtB,MAGZ,gCACKnB,GAAS,sBAAMkB,UAAWwB,EAAjB,SAAsC1C,IAC/CuC,GAAQ,+BAAOA,W,kCCtBjBmD,EAhCyC,SAAC,GASpD,EAPG9E,KAOF,IANEc,EAMH,EANGA,SAAUC,EAMb,EANaA,gBACVT,EAKH,EALGA,UACAU,GAIH,EALcC,cAKd,EAJGD,UAEGT,EAEN,4FAOKW,EAAmB,UAAMT,IAAEU,SAAR,YAAoBb,GAAwB,IAErE,OACI,kCACI,mCACIN,KAAM,WACNc,SAZa,SAACM,GAEtBN,GAAYA,EAASM,GACrBL,GAAmBA,EAAgBK,EAAEC,cAAcC,UAU3ChB,UAAWY,GAEPX,IAEPS,GAAY,sBAAMV,UAAWG,IAAEQ,cAAnB,SAAmCD,Q,iBCN7C+D,EAnBqC,SAAC,GAM/C,IAJE5E,EAIH,EAJGA,aACAC,EAGH,EAHGA,IAAgBC,GAGnB,EAHQC,UAGR,EAHmBD,MACbE,EAEN,yDACKC,EAAc,UAAMJ,EAAMK,IAAEL,IAAMK,IAAEC,QAAtB,YAAiCD,IAAEC,SACjDC,EAAaN,GAAc,QAEjC,OACI,gDACIC,UAAWE,EACXI,QAAS,kBAAMT,EAAeA,IAAiB,KAC3CI,GAHR,aAIEI,MCzBJpC,GAAWC,IAAMC,OAAO,CAC1BC,QAAS,yCAGAsG,GAAU,SACbR,GACF,OAAOjG,GAASO,KAAM,aAAe0F,ICNvCzF,GAAe,CACjBkG,MAAO,GACPpG,SAAU,GACVM,YAAY,EACZ+F,YAAY,EACZC,UAAW,IAsBFC,GAAkB,SAACvD,GAAD,MAAqB,CAAC7B,KAAM,yBAA0B6B,UCnBxEwD,GAAQ,WACjB,IAAMjD,EAAWC,cAEX4C,EAAQpC,aAAsC,SAAAC,GAAK,OAAIA,EAAMlE,MAAMqG,SACnEpG,EAAWgE,aAAsC,SAAAC,GAAK,OAAIA,EAAMlE,MAAMC,YACtEM,EAAa0D,aAAuC,SAAAC,GAAK,OAAIA,EAAMlE,MAAMO,cACzEC,EAAQyD,aAAsC,SAAAC,GAAK,OAAIA,EAAMlE,MAAMuG,aAGzE,OAFmBtC,aAAuC,SAAAC,GAAK,OAAIA,EAAMlE,MAAMsG,cAGpE,cAAC,IAAD,CAAUhC,GAAIC,GAAKmC,UAI1B,sBAAKhF,UAAWG,IAAE8E,kBAAlB,UACI,4CAEA,wCACA,8BAEI,cAAC,EAAD,CAAgB/D,aAAc,SAACK,GAC3BO,EDDM,SAAC6C,GAAD,MAAoB,CAACjF,KAAM,kBAAmBiF,SCC3CO,CAAW3D,KAERA,MAAOoD,EACP7F,MAAOA,MAG3B,2CACA,8BACI,cAAC,EAAD,CAAgByC,MAAOhD,EAAU2C,aAAc,SAACK,GAC5CO,EDTS,SAACvD,GAAD,MAAuB,CAACmB,KAAM,qBAAsBnB,YCSpD4G,CAAc5D,SAK/B,gCACI,+CACA,cAAC,EAAD,CAAeA,MAAO1C,EAAWuG,WAAY3E,gBAAiB,SAACc,GAC3DO,EDhBW,SAACjD,GAAD,MAA0B,CAACa,KAAM,wBAAyBb,cCgB5DwG,CAAgB9D,UAIjC,8BACI,cAAC,EAAD,CAAajB,QAAS,WDjBf,IAAC4D,ECkBJpC,GDlBIoC,ECkBa,CAACS,QAAOpG,WAAUM,cDlBL,SAACiD,GAC/C4C,GAAcR,GACTR,MAAK,SAAAC,GACE7B,EAASgD,IAAgB,OAGhCjB,OAAM,SAAAlE,GACHmC,EAASgD,IAAgB,IACzBhD,EAXqC,CAACpC,KAAM,uBAAwB4F,KAW5C3F,EAAIsE,SAASC,KAAKpF,eCYzBiB,KAAM,UACNjB,MAAOA,MAIxB,sBAAKkB,UAAWG,IAAEoF,OAAlB,UACI,8BACI,mBAAGjB,KAAK,oBAAR,gCAEJ,8BACI,mBAAGA,KAAK,YAAR,+BCjEPkB,GAAc,WACvB,OACI,oDCCKC,GAAU,WACnB,IAAMd,EAAQpC,aAAsC,SAAAC,GAAK,OAAIA,EAAMlE,MAAMqG,SACzE,OACI,iEAC8BA,M,oBCTvB,OAA0B,gCCEnC1G,GAAWC,IAAMC,OAAO,CAC1BC,QAAS,uCACTsH,iBAAiB,IAKRC,GAAqB,SACdhB,EAAeiB,EAAcC,GACzC,OAAO5H,GAASO,KAAmB,cAAe,CAAEmG,QAAOiB,OAAMC,aCRnEpH,GAAe,CACjBkG,MAAuB,GACvBiB,KAAM,qCACNC,QAAQ,mKACRC,aAAc,GACdC,YAAa,GACbC,QAAQ,GAyBCC,GAAgB,SAACtB,GAAD,MAAoB,CAACjF,KAAM,eAAgBiF,MAAOA,IAClEuB,GAAc,SAACF,GAAD,MAAsB,CAACtG,KAAM,aAAcsG,OAAQA,IACjEG,GAAgB,SAACJ,GAAD,MAA0B,CAACrG,KAAM,eAAgBqG,YAAaA,IAC9EK,GAAiB,SAACN,GAAD,MAA2B,CAACpG,KAAM,gBAAiBoG,aAAcA,IC5BlFO,GAAkB,WAC3B,IAAMvE,EAAWC,cACX4C,EAAQpC,aAAsC,SAAAC,GAAK,OAAIA,EAAM8D,gBAAgB3B,SAC7EiB,EAAOrD,aAAsC,SAAAC,GAAK,OAAIA,EAAM8D,gBAAgBV,QAC5EC,EAAUtD,aAAsC,SAAAC,GAAK,OAAIA,EAAM8D,gBAAgBT,WAC/ExE,EAAOkB,aAAsC,SAAAC,GAAK,OAAIA,EAAM8D,gBAAgBP,eAC5EjH,EAAQyD,aAAsC,SAAAC,GAAK,OAAIA,EAAM8D,gBAAgBR,gBAC7EE,EAASzD,aAAuC,SAAAC,GAAK,OAAIA,EAAM8D,gBAAgBN,UAC/EM,EAAkB,SAAC3B,EAAeiB,EAAcC,GAClD/D,EDsByB,SAAC6C,EAAeiB,EAAcC,GAC3D,OAAO,SAAC/D,GACJA,EAASmE,GAActB,IACvBZ,QAAQC,IAAIW,GACZ7C,EAASoE,IAAY,IACrBP,GAAmChB,EAAOiB,EAAMC,GAC3CnC,MAAK,SAACC,GACH7B,EAASqE,GAAcxC,EAAIO,KAAK7C,OAChC0C,QAAQC,IAAI,QAAUL,EAAIO,KAAK7C,MAC/BuC,YAAW,kBAAM9B,EAASqE,GAAc,OAAM,QAEjDtC,OAAM,SAAC/E,GACJgD,EAASsE,GAAetH,EAAMmF,SAASC,KAAKpF,QAC5CiF,QAAQC,IAAI,SAAWlF,EAAMmF,SAASC,KAAKpF,OAC3C8E,YAAW,kBAAM9B,EAASsE,GAAe,OAAM,QAElDG,SAAQ,WACLzE,EAASoE,IAAY,QCvCpBM,CAAkB7B,EAAOiB,EAAMC,KAEtCY,EAAYT,EAAS,qBAAKU,IAAKC,GAAKC,IAAK,KAAQ,GAEvD,OACI,sBAAK5G,UAAWG,KAAEwB,QAAlB,UACI,sBAAK3B,UAAWG,KAAEsG,UAAlB,cAA+BA,EAA/B,OACA,8BACI,cAAC,EAAD,CAAgBlF,MAAOoD,EACPtD,KAAMA,EACNvC,MAAOA,EACPwC,cAAe,SAACqD,GAAD,OAAW7C,EAASmE,GAActB,SAErE,8BACI,cAAC,EAAD,CAAa5E,KAAM,mBACNjB,MAAOA,EACPwB,QAAS,kBAAMgG,EAAgB3B,EAAOiB,EAAMC,IAC5CzB,SAAU4B,U,oBC7B1Ba,GAAO,WAChB,OACI,sBAAK7G,UAAWG,KAAEwB,QAAlB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCTCmF,GAAQ,WACjB,OACI,8CCMKjE,GAAO,CAChBkE,UAAW,IACXjE,MAAO,SACPkE,aAAc,gBACdC,SAAU,YACVjC,QAAS,WACTkC,kBAAmB,oBACnBC,eAAgB,iBAChBC,UAAW,QAGFC,GAAS,WAClB,OACI,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,IAAKC,OAAQ,kBAAM,cAAC,IAAD,CAAU5E,GAAIC,GAAKmC,aACzD,cAAC,IAAD,CAAOsC,OAAK,EAACC,KAAM1E,GAAKoE,SAAUO,OAAQ,kBAAM,cAAC,EAAD,OAChD,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAM1E,GAAKC,MAAO0E,OAAQ,kBAAM,cAAC,GAAD,OAC7C,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAM1E,GAAKmE,aAAcQ,OAAQ,kBAAM,cAAC,GAAD,OACpD,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAM1E,GAAKmC,QAASwC,OAAQ,kBAAM,cAAC,GAAD,OAC/C,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAM1E,GAAKqE,kBAAmBM,OAAQ,kBAAM,cAAC,GAAD,OACzD,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAM1E,GAAKsE,eAAgBK,OAAQ,kBAAM,cAAC,GAAD,OACtD,cAAC,IAAD,CAAOD,KAAM1E,GAAKuE,UAAWI,OAAQ,kBAAM,cAAC,GAAD,OAC3C,cAAC,IAAD,CAAU5B,KAAM,IAAKhD,GAAIC,GAAKuE,kBC7BjCK,GAAS,WAClB,OACI,sBAAKzH,UAAU,SAAf,UACI,qBAAKA,UAAU,OAAf,SACI,cAAC,IAAD,CAAS4C,GAAIC,GAAKoE,SAAlB,wBAEJ,qBAAKjH,UAAU,OAAf,SACI,cAAC,IAAD,CAAS4C,GAAIC,GAAKC,MAAlB,qBAEJ,qBAAK9C,UAAU,OAAf,SACI,cAAC,IAAD,CAAS4C,GAAIC,GAAKmE,aAAlB,4BAEJ,qBAAKhH,UAAU,OAAf,SACI,cAAC,IAAD,CAAS4C,GAAIC,GAAKmC,QAAlB,uBAEJ,qBAAKhF,UAAU,OAAf,SACI,cAAC,IAAD,CAAS4C,GAAIC,GAAKqE,kBAAlB,gCAEJ,qBAAKlH,UAAU,OAAf,SACI,cAAC,IAAD,CAAS4C,GAAIC,GAAKsE,eAAlB,wBCHDO,OAdf,WACI,OACI,qBAAK1H,UAAU,MAAf,SACI,mCACI,eAAC,IAAD,WACI,cAAC,GAAD,IACA,cAAC,GAAD,YCEL2H,I,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBnE,MAAK,YAAkD,IAA/CoE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,Q,kBCTRnJ,GAAe,GCAfA,GAAe,GCQf0J,GAAcC,aAAgB,CAChC9J,MhBEwB,WAAoF,IAAnFkE,EAAkF,uDAAxD/D,GAAc4J,EAA0C,uCAE3G,OAAQA,EAAO3I,MACX,IAAK,kBACD,OAAO,2BAAI8C,GAAX,IAAkBmC,MAAO0D,EAAO1D,QACpC,IAAK,qBACD,OAAO,2BAAInC,GAAX,IAAkBjE,SAAU8J,EAAO9J,WACvC,IAAK,wBACD,OAAO,2BAAIiE,GAAX,IAAkB3D,WAAYwJ,EAAOxJ,aACzC,IAAK,uBACD,OAAO,2BAAI2D,GAAX,IAAkBqC,UAAWwD,EAAO/C,OACxC,IAAK,yBACD,OAAO,2BAAI9C,GAAX,IAAkBoC,WAAYyD,EAAO9G,QACzC,QACI,OAAO,eAAIiB,KgBfnBC,azBe0B,WAAkE,IAAjED,EAAgE,uDAAvC/D,EAAc4J,EAAyB,uCAC3F,OAAQA,EAAO3I,MACX,KAAMT,EACF,OAAO,2BACAuD,GADP,IAEIlE,MAAO+J,EAAO/J,QAGtB,KAAMc,EACF,OAAO,2BACAoD,GADP,IAEIjE,SAAU8J,EAAO9J,WAGzB,KAAMc,EACF,OAAO,2BACAmD,GADP,IAEI7D,gBAAiB0J,EAAO7E,iBAGhC,KAAMlE,EACF,OAAO,2BACAkD,GADP,IAEI5D,UAAWyJ,EAAOzJ,YAG1B,KAAMW,EACF,OAAO,2BACAiD,GADP,IAEIzD,QAASsJ,EAAOtJ,UAGxB,KAAMG,EACF,OAAO,2BACAsD,GADP,IAEI1D,MAAOuJ,EAAOvJ,QAGtB,KAAMK,EACF,OAAO,2BACAqD,GADP,IAEIxD,YAAaqJ,EAAO1I,MAG5B,KAAKH,EACD,OAAO,2BACAgD,GADP,IAEI3D,WAAYwJ,EAAOxJ,aAG3B,QACI,OAAO2D,IyBjEf8F,QFV0B,WAAuC,IAAtC9F,EAAqC,uDAA9B/D,GAAc4J,EAAgB,uCAChE,OAAQA,EAAO3I,MACX,IAAK,GACD,MAAO,GAEX,QACI,OAAO8C,IEKf8D,gBVEkC,WAAkE,IAAjE9D,EAAgE,uDAAtC/D,GAAc4J,EAAwB,uCACnG,OAAQA,EAAO3I,MACX,IAAK,eACD,OAAO,2BAAI8C,GAAX,IAAkBmC,MAAO0D,EAAO1D,QAEpC,IAAK,aACD,OAAO,2BAAInC,GAAX,IAAkBwD,OAAQqC,EAAOrC,SAErC,IAAK,eACD,OAAO,2BAAIxD,GAAX,IAAkBuD,YAAasC,EAAOtC,cAE1C,IAAK,gBACD,OAAO,2BAAIvD,GAAX,IAAkBsD,aAAcuC,EAAOvC,eAE3C,QACI,OAAOtD,IUhBf+F,YDZ8B,WAAwC,IAAvC/F,EAAsC,uDAA9B/D,GAAc4J,EAAgB,uCACrE,OAAQA,EAAO3I,MACX,IAAK,GACD,MAAO,GAEX,QACI,OAAO8C,MCSNgG,GAAQC,aAAYN,GAAaO,aAAgBC,OAK9DC,OAAOJ,MAAQA,GCXfK,IAASrB,OACL,cAAC,IAAMsB,WAAP,UACI,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGRO,SAASC,eAAe,SAM5BrB,O","file":"static/js/main.cb501bfa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkInBlock\":\"CheckIn_checkInBlock__2KsNS\",\"checkInTitle\":\"CheckIn_checkInTitle__dtjN2\",\"checkInBtn\":\"CheckIn_checkInBtn__1K3Jq\",\"help\":\"CheckIn_help__oEAv9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SInp_superInput__2rtsD\",\"errorInput\":\"SInp_errorInput__1-898\",\"error\":\"SInp_error__1ORjs\",\"content\":\"SInp_content__2hiDi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__NEA4P\",\"errorInput\":\"SuperInputText_errorInput__28YHC\",\"error\":\"SuperInputText_error__3iE1R\",\"content\":\"SuperInputText_content__fTYMP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SBtn_default__1M-Mg\",\"red\":\"SBtn_red__38Fqf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2xbGp\",\"red\":\"SuperButton_red__1Jo-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SCBox_checkbox__1gP8d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexMainContainer\":\"login_flexMainContainer__2c2Iv\",\"forgot\":\"login_forgot__A4vQ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__SwpSd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"recoverPassword_content__2b9qB\",\"preloader\":\"recoverPassword_preloader__D2nPu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"test_content__3m7Ej\"};","import axios from \"axios\";\r\nimport {actionsCheckIn} from \"../bll/checkInReducer\";\r\n\r\n\r\nconst instance = axios.create({\r\n    // baseURL: \"http://localhost:7542/2.0/\"\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n});\r\n\r\nexport const userAPI = {\r\n\r\n    signup(login: string, password: string) {\r\n        return instance.post(`/auth/register/`, {\r\n            'email': login, 'password': password\r\n        })\r\n    }\r\n}\r\n// export const timePing = {\r\n//     ping(time: number) {\r\n//         return instance.post(`/ping`, {frontTime: time})\r\n//             .then(res => {\r\n//                 console.log(res)\r\n//             })\r\n//     }\r\n// }","import {Dispatch} from \"redux\";\r\nimport {userAPI} from \"../api/api\";\r\nimport {ActionsTypes, CheckInUserType} from \"./storeCheckIn\";\r\nimport {infoMessageAC} from \"../../p5-recoverPassword/bll/recoverPasswordReducer\";\r\n\r\nexport const initialState = {\r\n    id: '1',\r\n    login: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    isSuccess: false,\r\n    rememberMe: false,\r\n    error: false,\r\n    loading: false,\r\n    errorServer: ''\r\n};\r\nconst SET_LOGIN = \"SET_LOGIN\"\r\nconst SET_ERROR = \"SET_ERROR\"\r\nconst SET_ERR_SERV = \"SET_ERR_SERV\"\r\nconst SET_PASSWORD = \"SET_PASSWORD\"\r\nconst SET_REPEAT_PASSWORD = \"SET_REPEAT_PASSWORD\"\r\nconst SET_SUCCESS = \"SET_SUCCESS\"\r\nconst SET_LOADING = \"SET_LOADING\"\r\nconst SET_REMEMBER_ME = \"SET_REMEMBER_ME\"\r\n\r\nexport const checkInReducer = (state: CheckInUserType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case  SET_LOGIN: {\r\n            return {\r\n                ...state,\r\n                login: action.login\r\n            };\r\n        }\r\n        case  SET_PASSWORD: {\r\n            return {\r\n                ...state,\r\n                password: action.password\r\n            };\r\n        }\r\n        case  SET_REPEAT_PASSWORD: {\r\n            return {\r\n                ...state,\r\n                confirmPassword: action.repeatPassword\r\n            };\r\n        }\r\n        case  SET_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isSuccess: action.isSuccess\r\n            };\r\n        }\r\n        case  SET_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            };\r\n        }\r\n        case  SET_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        }\r\n        case  SET_ERR_SERV: {\r\n            return {\r\n                ...state,\r\n                errorServer: action.err\r\n            };\r\n        }\r\n        case SET_REMEMBER_ME: {\r\n            return {\r\n                ...state,\r\n                rememberMe: action.rememberMe\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actionsCheckIn = {\r\n    setLogin: (login: string) => ({type: SET_LOGIN, login}) as const,\r\n    postPassword: (password: string) => ({type: 'SET_PASSWORD', password}) as const,\r\n    postRepeatPassword: (repeatPassword: string) => ({type: 'SET_REPEAT_PASSWORD', repeatPassword}) as const,\r\n    setSuccess: (isSuccess: boolean) => ({type: 'SET_SUCCESS', isSuccess}) as const,\r\n    setLoading: (loading: boolean) => ({type: 'SET_LOADING', loading}) as const,\r\n    setError: (error: boolean) => ({type: SET_ERROR, error}) as const,\r\n    setErrServ: (err: string) => ({type: SET_ERR_SERV, err}) as const,\r\n    postRememberMe: (rememberMe: boolean) => ({type: 'SET_REMEMBER_ME', rememberMe}) as const,\r\n}\r\n\r\nexport const createUserTC = (login: string, password: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        userAPI.signup(login, password)\r\n            .then(res => {\r\n                dispatch(actionsCheckIn.setLoading(false))\r\n                dispatch(actionsCheckIn.setSuccess(true))\r\n                setTimeout(() => dispatch(actionsCheckIn.setSuccess(false)), 3000)\r\n            })\r\n        .catch(er => {\r\n            console.log(er)\r\n            dispatch(actionsCheckIn.setLoading(false))\r\n            dispatch(actionsCheckIn.setErrServ(er.response.data.error))\r\n            setTimeout(() => dispatch(actionsCheckIn.setErrServ('')), 3000)\r\n        })\r\n    }\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SBtn.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    name?: string\r\n    error?: string\r\n    red?: boolean\r\n    callFunction?: () => void //добавил для типизации функции\r\n}\r\n\r\nconst SBtn: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        callFunction,//добавил для вызова функции\r\n        red, className, name,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${s.default}`;\r\n    const nameButton = name ? name : \"click\"\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            onClick={() => callFunction ? callFunction() : \"\"} //изменил для приходящей функции\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >{nameButton}</button>\r\n    );\r\n}\r\n\r\nexport default SBtn;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SCBox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SCBox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SCBox;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SInp.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onChangeValue?: (value: string) => void // меняем в стейте на email пользователя\r\n    onEnter?: () => void\r\n    info?: string\r\n    error?: string\r\n    spanClassName?: string\r\n    value?: string\r\n};\r\n\r\nconst SInp: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        info,\r\n        error,\r\n        className, spanClassName,\r\n        onChangeValue,\r\n        value,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n        onChangeValue && onChangeValue(e.currentTarget.value) // меняем в стейте на email пользователя\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `{ ${error ? s.errorInput : s.superInput} ${className}`;\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div>\r\n                <input\r\n                    type={\"text\"}\r\n                    onChange={onChangeCallback}\r\n                    onKeyPress={onKeyPressCallback}\r\n                    className={finalInputClassName}\r\n                    value={value}\r\n\r\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                />\r\n            </div>\r\n            <div>\r\n                {error && <span className={finalSpanClassName}>{error}</span>}\r\n                {info && <span>{info}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SInp;\r\n","import React, {useState} from 'react'\r\nimport s from './CheckIn.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    actionsCheckIn, createUserTC,\r\n} from \"../bll/checkInReducer\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport SBtn from \"./SBtn/SBtn\";\r\nimport SCBox from \"./SCBox/SCBox\";\r\nimport SInp from \"./SInp/SInp\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\n\r\nexport const CheckIn: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [login, setLogin] = useState('Alex@company.com')\r\n    const [password, setPassword] = useState('123456789')\r\n    const [password2, setPassword2] = useState('123456789')\r\n    const [rememberMe, setRememberMe] = useState(false)\r\n    const stateRegistrationIsSuccess = useSelector<AppRootStateType>(state => state.registration.isSuccess)\r\n    const stateRegistrationError = useSelector<AppRootStateType>(state => state.registration.error)\r\n    const errorServer = useSelector<AppRootStateType>(state => state.registration.errorServer)\r\n    const stateLoading = useSelector<AppRootStateType>(state => state.registration.loading)\r\n    // console.log(errorServer)\r\n    const addUser = () => {\r\n        // console.log('первый', password, 'второй', password2)\r\n        if (password != '' && password2 != '' && login != '') {\r\n            if (password === password2) {\r\n                dispatch(createUserTC(login, password))\r\n                dispatch(actionsCheckIn.setLoading(true))\r\n            }\r\n        } else {\r\n            dispatch(actionsCheckIn.setError(true))\r\n            dispatch(actionsCheckIn.setSuccess(false))\r\n        }\r\n    }\r\n    //test server\r\n    // const time = Date.now()\r\n    // useEffect(() => {\r\n    //     timePing.ping(time)\r\n    // })\r\n    const onLoginChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let login = e.currentTarget.value\r\n        setLogin(login)\r\n    }\r\n\r\n    const onPasswordChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let password = e.currentTarget.value\r\n        setPassword(password)\r\n    }\r\n\r\n    const repeatOnPasswordChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let repeatPassword = e.currentTarget.value\r\n        setPassword2(repeatPassword)\r\n    }\r\n\r\n    const setRememberMeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let checkedRemember = e.currentTarget.checked\r\n        setRememberMe(checkedRemember)\r\n    }\r\n\r\n    if (stateRegistrationIsSuccess) return <Redirect to={PATH.LOGIN}/>\r\n    const errInputLogin = (login === '' && stateRegistrationError) ? 'Обязательное поле' : '';\r\n    const errInputPas = (password === '' && stateRegistrationError) ? 'Обязательное поле' : '';\r\n    const errInputPas2 = (password2 === '' && stateRegistrationError) ? 'Обязательное поле' : '';\r\n    return (\r\n        <div className={s.checkInBlock}>\r\n            <h2 className={s.checkInTitle}>Registration</h2>\r\n            {stateLoading\r\n                ? <div style={{color: 'orange'}}>loading...</div>\r\n                : (stateRegistrationError || errorServer)\r\n                    ? <div style={{color: 'red'}}> {errorServer ? errorServer : \"УПС ошибочка...\"}</div>\r\n                    : stateRegistrationIsSuccess\r\n                        ? <div style={{color: 'lime'}}>Success!</div>\r\n                        : <div><br/></div>\r\n            }\r\n\r\n            <label>Email:\r\n                <label className={s.help}>Example: Alex@company.com</label>\r\n                <SInp\r\n                    error={errInputLogin}\r\n                    value={login}\r\n                    onChange={onLoginChange}\r\n                    type={'email'}\r\n                    placeholder={'Alex@company.com'}/>\r\n            </label>\r\n            <label>Password:\r\n                <label className={s.help}>Example: Must be between\r\n                    8-20 character </label>\r\n                <SInp\r\n                    error={errInputPas}\r\n                    value={password}\r\n                    onChange={onPasswordChange}\r\n                    // type={'password'}\r\n                    placeholder={'password'}\r\n                />\r\n            </label>\r\n            <label>Confirm password:\r\n                <label className={s.help}>Example: Must be between\r\n                    8-20 character </label>\r\n                <SInp\r\n                    error={errInputPas2}\r\n                    value={password2}\r\n                    onChange={repeatOnPasswordChange}\r\n                    // type={'password'}\r\n                    placeholder={'confirm password'}\r\n                />\r\n            </label>\r\n            <div className={s.checkInBtn}>\r\n                <SBtn callFunction={addUser}\r\n                      name={'Register'}\r\n                      disabled={!!stateLoading}\r\n\r\n                />\r\n                <SCBox onChange={setRememberMeChange}/>\r\n            </div>\r\n            <a href=\"#/login\">Sign In</a>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onChangeValue?: (value: string) => void // меняем в стейте на email пользователя\r\n    onEnter?: () => void\r\n    info?: string\r\n    error?: string\r\n    spanClassName?: string\r\n    value?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        info,\r\n        error,\r\n        className, spanClassName,\r\n        onChangeValue,\r\n        value,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n        onChangeValue && onChangeValue(e.currentTarget.value) // меняем в стейте на email пользователя\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `{ ${error ? s.errorInput : s.superInput} ${className}`;\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div>\r\n                <input\r\n                    type={\"text\"}\r\n                    onChange={onChangeCallback}\r\n                    onKeyPress={onKeyPressCallback}\r\n                    className={finalInputClassName}\r\n                    value={value}\r\n\r\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                />\r\n            </div>\r\n            <div>\r\n                {error && <span className={finalSpanClassName}>{error}</span>}\r\n                {info && <span>{info}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SuperInputText;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    name?: string\r\n    error?: string\r\n    red?: boolean\r\n    callFunction?: () => void //добавил для типизации функции\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        callFunction,//добавил для вызова функции\r\n        red, className, name,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${s.default}`;\r\n    const nameButton = name ? name : \"click\"\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            onClick={() => callFunction ? callFunction() : \"\"} //изменил для приходящей функции\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >{nameButton}</button>\r\n    );\r\n}\r\n\r\nexport default SuperButton;","import axios from 'axios'\r\nimport {LoginParamsType} from \"../bll/loginReducer\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n})\r\n\r\nexport const authAPI = {\r\n    login(data: LoginParamsType) {\r\n        return instance.post(('auth/login'), data)\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../api/login-api\";\r\n\r\nconst initialState = {\r\n    email: '',\r\n    password: '',\r\n    rememberMe: false,\r\n    isLoggedIn: false,\r\n    errorText: ''\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'login/SET_EMAIL':\r\n            return {...state, email: action.email}\r\n        case 'login/SET_PASSWORD':\r\n            return {...state, password: action.password}\r\n        case 'login/SET_REMEMBER-ME':\r\n            return {...state, rememberMe: action.rememberMe}\r\n        case 'login/SET_ERROR-TEXT':\r\n            return {...state, errorText: action.text}\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        default:\r\n            return {...state}\r\n    }\r\n};\r\n\r\n//actions\r\nexport const setIsLoggedInAC = (value: boolean) => ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\nexport const setEmailAC = (email: string) => ({type: 'login/SET_EMAIL', email} as const)\r\nexport const setPasswordAC = (password: string) => ({type: 'login/SET_PASSWORD', password} as const)\r\nexport const setRememberMeAC = (rememberMe: boolean) => ({type: 'login/SET_REMEMBER-ME', rememberMe} as const)\r\nexport const setErrorTextAC = (text: string) => ({type: 'login/SET_ERROR-TEXT', text} as const)\r\n\r\n// thunk\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch<ActionsType>) => {\r\n    authAPI.login(data)\r\n        .then(res => {\r\n                dispatch(setIsLoggedInAC(true))\r\n            }\r\n        )\r\n        .catch(err => {\r\n            dispatch(setIsLoggedInAC(false))\r\n            dispatch(setErrorTextAC(err.response.data.error))\r\n        })\r\n}\r\n\r\n\r\n//types\r\ntype InitialStateType = typeof initialState\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nexport type setIsLoggedInACType = ReturnType<typeof setIsLoggedInAC>\r\nexport type setEmailACType = ReturnType<typeof setEmailAC>\r\nexport type setPasswordACType = ReturnType<typeof setPasswordAC>\r\nexport type setRememberMeACType = ReturnType<typeof setRememberMeAC>\r\nexport type setErrorTextACType = ReturnType<typeof setErrorTextAC>\r\ntype ActionsType =\r\n    setIsLoggedInACType\r\n    | setEmailACType\r\n    | setPasswordACType\r\n    | setRememberMeACType\r\n    | setErrorTextACType","import React from 'react'\r\nimport SuperInputText from \"../../../components/SuperComponents/SuperInput/SuperInputText\";\r\nimport s from './login.module.css'\r\nimport SuperCheckbox from \"../../../components/SuperComponents/SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../../../components/SuperComponents/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from '../../../app/store';\r\nimport {loginTC, setEmailAC, setPasswordAC, setRememberMeAC} from \"../bll/loginReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const email = useSelector<AppRootStateType, string>(state => state.login.email)\r\n    const password = useSelector<AppRootStateType, string>(state => state.login.password)\r\n    const rememberMe = useSelector<AppRootStateType, boolean>(state => state.login.rememberMe)\r\n    const error = useSelector<AppRootStateType, string>(state => state.login.errorText)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.flexMainContainer}>\r\n            <h3>Login Page</h3>\r\n\r\n            <div>Email</div>\r\n            <div>\r\n\r\n                <SuperInputText onChangeText={(value) => {\r\n                    dispatch(setEmailAC(value))\r\n                }}\r\n                                value={email}\r\n                                error={error}/>\r\n            </div>\r\n\r\n            <div>Password</div>\r\n            <div>\r\n                <SuperInputText value={password} onChangeText={(value) => {\r\n                    dispatch(setPasswordAC(value))\r\n                }\r\n                }/>\r\n            </div>\r\n\r\n            <div>\r\n                <span>Remember me</span>\r\n                <SuperCheckbox value={rememberMe.toString()} onChangeChecked={(value) => {\r\n                    dispatch(setRememberMeAC(value))\r\n                }}/>\r\n            </div>\r\n\r\n            <div>\r\n                <SuperButton onClick={() => {\r\n                    dispatch(loginTC({email, password, rememberMe}))\r\n                }}\r\n                             name={\"Sign in\"}\r\n                             error={error}\r\n                />\r\n            </div>\r\n\r\n            <div className={s.forgot}>\r\n                <div>\r\n                    <a href=\"#recover_password\">forgot password?</a>\r\n                </div>\r\n                <div>\r\n                    <a href=\"#check-in\">register</a>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const NewPassword = () => {\r\n    return (\r\n        <>\r\n            NewPassword\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\n\r\nexport const Profile = () => {\r\n    const email = useSelector<AppRootStateType, string>(state => state.login.email)\r\n    return (\r\n        <>\r\n            Profile user with email: {email}\r\n        </>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/PYh.b3402305.gif\";","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true\r\n})\r\n\r\n// api\r\n\r\nexport const recoverPasswordAPI = {\r\n    recoverPassword(email: string, from: string, message: string) {\r\n        return instance.post<ResponseType>('auth/forgot', { email, from, message });\r\n    }\r\n}\r\n\r\nexport type ResponseType = {\r\n    info: string\r\n    error: ErrorType\r\n}\r\n\r\ntype ErrorType = {\r\n    error: string\r\n    email: string\r\n    emailRegExp: {}\r\n    in: string\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {recoverPasswordAPI} from \"../api/api\";\r\n\r\nconst initialState = {\r\n    email: null as null || \"\",\r\n    from: \"test-front-admin <ai73a@yandex.by>\",\r\n    message: `<div style=\"background-color: #00ff00; padding: 15px\">password recovery link: <a href='https://NataliaKirik.github.io/set-new-password/$token$'>link</a></div>`,\r\n    errorMessage: \"\",\r\n    infoMessage: \"\",\r\n    status: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const recoverPasswordReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"CHANGE_EMAIL\": { // меняет значение email на пользовательский\r\n            return {...state, email: action.email}\r\n        }\r\n        case \"SET_STATUS\": { // отображает крутилку :)\r\n            return {...state, status: action.status}\r\n        }\r\n        case \"INFO_MESSAGE\": { // сообщение при успехе :р\r\n            return {...state, infoMessage: action.infoMessage}\r\n        }\r\n        case \"ERROR_MESSAGE\": { // сообщение при наличии ошибки -_-\r\n            return {...state, errorMessage: action.errorMessage}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// action\r\nexport const changeEmailAC = (email: string) => ({type: \"CHANGE_EMAIL\", email: email} as const);\r\nexport const setStatusAC = (status: boolean) => ({type: \"SET_STATUS\", status: status} as const);\r\nexport const infoMessageAC = (infoMessage: string) => ({type: \"INFO_MESSAGE\", infoMessage: infoMessage} as const);\r\nexport const errorMessageAC = (errorMessage: string) => ({type: \"ERROR_MESSAGE\", errorMessage: errorMessage} as const);\r\n\r\n// thunks\r\nexport const recoverPasswordTC = (email: string, from: string, message: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(changeEmailAC(email))\r\n        console.log(email)\r\n        dispatch(setStatusAC(true))\r\n        recoverPasswordAPI.recoverPassword(email, from, message)\r\n            .then((res) => {\r\n                dispatch(infoMessageAC(res.data.info))\r\n                console.log(\"then \" + res.data.info)\r\n                setTimeout(() => dispatch(infoMessageAC('')), 3000)\r\n            })\r\n            .catch((error) => {\r\n                dispatch(errorMessageAC(error.response.data.error))\r\n                console.log(\"error \" + error.response.data.error)\r\n                setTimeout(() => dispatch(errorMessageAC('')), 3000)\r\n            })\r\n            .finally(() => {\r\n                dispatch(setStatusAC(false))\r\n            })\r\n    }\r\n}\r\n\r\n// type\r\nexport type sentEmailActionType = ReturnType<typeof changeEmailAC>\r\nexport type setStatusActionType = ReturnType<typeof setStatusAC>\r\nexport type infoMessageActionType = ReturnType<typeof infoMessageAC>\r\nexport type errorMessageActionType = ReturnType<typeof errorMessageAC>\r\n\r\ntype ActionsType = sentEmailActionType | setStatusActionType | infoMessageActionType | errorMessageActionType\r\ntype ThunkDispatch = Dispatch<ActionsType>","import React from 'react'\r\nimport s from './../recoverPassword.module.css'\r\nimport nya from './PYh.gif'\r\nimport SuperInputText from \"../../../components/SuperComponents/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../../../components/SuperComponents/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {recoverPasswordTC, changeEmailAC} from \"../bll/recoverPasswordReducer\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\n\r\nexport const RecoverPassword = () => {\r\n    const dispatch = useDispatch()\r\n    const email = useSelector<AppRootStateType, string>(state => state.recoverPassword.email)\r\n    const from = useSelector<AppRootStateType, string>(state => state.recoverPassword.from)\r\n    const message = useSelector<AppRootStateType, string>(state => state.recoverPassword.message)\r\n    const info = useSelector<AppRootStateType, string>(state => state.recoverPassword.infoMessage)\r\n    const error = useSelector<AppRootStateType, string>(state => state.recoverPassword.errorMessage)\r\n    const status = useSelector<AppRootStateType, boolean>(state => state.recoverPassword.status)\r\n    const recoverPassword = (email: string, from: string, message: string) => {\r\n        dispatch(recoverPasswordTC(email, from, message))\r\n    }\r\n    const preloader = status ? <img src={nya} alt={''}/> : '' // отображение крутилки\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.preloader}> {preloader} </div>\r\n            <div>\r\n                <SuperInputText value={email}\r\n                                info={info}\r\n                                error={error}\r\n                                onChangeValue={(email) => dispatch(changeEmailAC(email))}/>\r\n            </div>\r\n            <div>\r\n                <SuperButton name={\"Recover password\"}\r\n                             error={error}\r\n                             onClick={() => recoverPassword(email, from, message)}\r\n                             disabled={status}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport s from './test.module.css'\r\nimport SuperInputText from \"../../../components/SuperComponents/SuperInput/SuperInputText\";\r\nimport SuperCheckbox from \"../../../components/SuperComponents/SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../../../components/SuperComponents/SuperButton/SuperButton\";\r\n\r\nexport const Test = () => {\r\n    return (\r\n        <div className={s.content}>\r\n            <SuperInputText/>\r\n            <SuperCheckbox/>\r\n            <SuperButton/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Error = () => {\r\n    return (\r\n        <>\r\n            Error\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {CheckIn} from \"../../pages/p2-checkIn/ui/CheckIn\";\r\nimport {Login} from \"../../pages/p1-login/ui/Login\";\r\nimport {NewPassword} from \"../../pages/p6-newPassword/ui/NewPassword\";\r\nimport {Profile} from \"../../pages/p3-profile/ui/Profile\";\r\nimport {RecoverPassword} from \"../../pages/p5-recoverPassword/ui/RecoverPassword\";\r\nimport {Test} from \"../../pages/p7-test/ui/Test\";\r\nimport {Error} from \"../../pages/p4-404/ui/Error\";\r\n\r\nexport const PATH = {\r\n    HOME_PAGE: '/',\r\n    LOGIN: '/login',\r\n    NEW_PASSWORD: '/new-password',\r\n    CHECK_IN: '/check-in',\r\n    PROFILE: '/profile',\r\n    PASSWORD_RECOVERY: '/recover_password',\r\n    TEST_COMPONENT: '/testComponent',\r\n    ERROR_404: '/404'\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path={\"/\"} render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n                <Route exact path={PATH.CHECK_IN} render={() => <CheckIn/>}/>\r\n                <Route exact path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route exact path={PATH.NEW_PASSWORD} render={() => <NewPassword/>}/>\r\n                <Route exact path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route exact path={PATH.PASSWORD_RECOVERY} render={() => <RecoverPassword/>}/>\r\n                <Route exact path={PATH.TEST_COMPONENT} render={() => <Test/>}/>\r\n                <Route path={PATH.ERROR_404} render={() => <Error/>}/>\r\n                <Redirect from={'*'} to={PATH.ERROR_404}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {PATH} from '../routes/Routes'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"item\">\r\n                <NavLink to={PATH.CHECK_IN}>Check in</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to={PATH.LOGIN}>Login</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to={PATH.NEW_PASSWORD}>New password</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to={PATH.PROFILE}>Profile</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to={PATH.PASSWORD_RECOVERY}>Recover password</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to={PATH.TEST_COMPONENT}>Test</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {HashRouter} from 'react-router-dom';\nimport {Routes} from \"../components/routes/Routes\";\nimport {Header} from \"../components/header/Header\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <>\n                <HashRouter>\n                    <Header/>\n                    <Routes/>\n                </HashRouter>\n            </>\n\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {}\r\nexport const profileReducer = (state= initialState, action: any) => {\r\n    switch (action.type) {\r\n        case \"\": {\r\n            return {}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {}\r\nexport const newPasswordReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case \"\": {\r\n            return {}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {loginReducer} from \"../pages/p1-login/bll/loginReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {checkInReducer} from \"../pages/p2-checkIn/bll/checkInReducer\";\r\nimport {profileReducer} from \"../pages/p3-profile/bll/profileReducer\";\r\nimport {recoverPasswordReducer} from \"../pages/p5-recoverPassword/bll/recoverPasswordReducer\";\r\nimport {newPasswordReducer} from \"../pages/p6-newPassword/bll/newPasswordReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    registration: checkInReducer,\r\n    profile: profileReducer,\r\n    recoverPassword: recoverPasswordReducer,\r\n    newPassword: newPasswordReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app/App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./app/store\";\r\n\r\n// test\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}