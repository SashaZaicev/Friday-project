{"version":3,"sources":["pages/p3-packs/ui/table.module.css","components/header/header.module.css","pages/p2-checkIn/ui/CheckIn.module.css","pages/p2-checkIn/ui/SInp/SInp.module.css","components/SuperComponents/SuperInput/SuperInputText.module.css","pages/p2-checkIn/ui/SBtn/SBtn.module.css","components/SuperComponents/SuperButton/SuperButton.module.css","pages/p2-checkIn/ui/SCBox/SCBox.module.css","pages/p1-login/ui/login.module.css","components/SuperComponents/SuperCheckbox/SuperCheckbox.module.css","components/preloader/preloader.module.css","pages/p6-newPassword/ui/newPassword.module.css","pages/p5-recoverPassword/recoverPassword.module.css","api/api.ts","pages/p2-checkIn/bll/checkInReducer.ts","pages/p2-checkIn/ui/SBtn/SBtn.tsx","pages/p2-checkIn/ui/SCBox/SCBox.tsx","pages/p2-checkIn/ui/SInp/SInp.tsx","pages/p2-checkIn/ui/CheckIn.tsx","components/SuperComponents/SuperInput/SuperInputText.tsx","components/SuperComponents/SuperCheckbox/SuperCheckbox.tsx","components/SuperComponents/SuperButton/SuperButton.tsx","pages/p1-login/bll/loginReducer.ts","pages/p1-login/ui/Login.tsx","pages/p6-newPassword/bll/newPasswordReducer.ts","components/preloader/PYh.gif","components/preloader/Preloader.tsx","pages/p6-newPassword/ui/NewPassword.tsx","pages/p3-profile/ui/Profile.tsx","pages/p5-recoverPassword/bll/recoverPasswordReducer.ts","pages/p5-recoverPassword/ui/RecoverPassword.tsx","pages/p4-404/ui/Error.tsx","pages/p3-packs/ui/Packs.tsx","pages/p3-cards/ui/Cards.tsx","components/routes/Routes.tsx","components/header/Header.tsx","app/App.tsx","reportWebVitals.ts","pages/p3-profile/bll/profileReducer.ts","app/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","authAPI","data","post","delete","login","password","email","from","message","newPassword","token","initialState","id","confirmPassword","isSuccess","rememberMe","error","loading","errorServer","SET_LOGIN","SET_ERROR","SET_ERR_SERV","SET_PASSWORD","SET_REPEAT_PASSWORD","SET_SUCCESS","SET_LOADING","SET_REMEMBER_ME","actionsCheckIn","type","err","SBtn","callFunction","red","name","className","restProps","finalClassName","s","default","nameButton","onClick","SCBox","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","e","currentTarget","checked","SInp","onChangeText","onKeyPress","onEnter","info","onChangeValue","value","finalSpanClassName","errorInput","superInput","content","key","CheckIn","dispatch","useDispatch","useState","setLogin","setPassword","password2","setPassword2","setRememberMe","stateRegistrationIsSuccess","useSelector","state","registration","stateRegistrationError","stateLoading","to","PATH","LOGIN","errInputLogin","errInputPas","errInputPas2","checkInBlock","checkInTitle","style","color","help","placeholder","repeatPassword","checkInBtn","then","res","setTimeout","catch","er","console","log","response","createUserTC","disabled","checkedRemember","href","SuperInputText","SuperCheckbox","SuperButton","isAuth","errorText","setIsLoggedInAC","Login","setEmail","PROFILE","flexMainContainer","text","forgot","PASSWORD_RECOVERY","CHECK_IN","errorPassMessage","passwordStatus","status","errorPassMessageAC","setServerStatusAC","Preloader","preloader","src","nya","alt","NewPassword","setNewPassword","newPassword2","setNewPassword2","useParams","length","finally","newPasswordTC","Profile","useEffect","payload","errorMessage","infoMessage","setStatusAC","infoMessageAC","errorMessageAC","RecoverPassword","recoverPassword","changeEmailAC","recoverPasswordTC","Error","Packs","table","tableHeader","tableHeader_packsName","tableHeader_price","tableHeader_buttonAdd","tableBody","tableBody_item","tableBody_item_name","tableBody_item_cardsCount","tableBody_item_updated","tableBody_item_buttons","Cards","HOME_PAGE","NEW_PASSWORD","TEST_COMPONENT","PACKS","CARDS","ERROR_404","Routes","exact","path","render","Header","header","item","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","profile","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7e9ac3a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"table_table__2pTFG\",\"tableHeader\":\"table_tableHeader__2109o\",\"tableHeader_productName\":\"table_tableHeader_productName__2QwkO\",\"tableHeader_price\":\"table_tableHeader_price__2cdD3\",\"tableHeader_buttonAdd\":\"table_tableHeader_buttonAdd__3bRYA\",\"tableBody\":\"table_tableBody__3kxDr\",\"tableBody_item\":\"table_tableBody_item__3TOHG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1MIiN\",\"item\":\"header_item__3Qsd2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkInBlock\":\"CheckIn_checkInBlock__2KsNS\",\"checkInTitle\":\"CheckIn_checkInTitle__dtjN2\",\"checkInBtn\":\"CheckIn_checkInBtn__1K3Jq\",\"help\":\"CheckIn_help__oEAv9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SInp_superInput__2rtsD\",\"errorInput\":\"SInp_errorInput__1-898\",\"error\":\"SInp_error__1ORjs\",\"content\":\"SInp_content__2hiDi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__NEA4P\",\"errorInput\":\"SuperInputText_errorInput__28YHC\",\"error\":\"SuperInputText_error__3iE1R\",\"content\":\"SuperInputText_content__fTYMP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SBtn_default__1M-Mg\",\"red\":\"SBtn_red__38Fqf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2xbGp\",\"red\":\"SuperButton_red__1Jo-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SCBox_checkbox__1gP8d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexMainContainer\":\"login_flexMainContainer__2c2Iv\",\"forgot\":\"login_forgot__A4vQ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__SwpSd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__NKPnm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"newPassword_content__RWvov\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"recoverPassword_content__2b9qB\"};","import axios from 'axios'\r\nimport {LoginParamsType, loginResponseType} from \"../pages/p1-login/bll/loginReducer\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n})\r\n// baseURL: 'http://localhost:7542/2.0/'\r\n\r\nexport const authAPI = {\r\n    login(data: LoginParamsType) {\r\n        return instance.post<loginResponseType>(('auth/login'), data)\r\n    },\r\n    logOut() {\r\n        return instance.delete(`auth/me`)\r\n    },\r\n    authMe() {\r\n        return instance.post<loginResponseType>(`auth/me`) // проверка на залогиненность\r\n    },\r\n    signup(login: string, password: string) {\r\n        return instance.post(`/auth/register/`, {\r\n            'email': login, 'password': password\r\n        })\r\n    },\r\n    recoverPassword(email: string, from: string, message: string) {\r\n        return instance.post<ResponseType>('auth/forgot', {email, from, message});\r\n    },\r\n    changePassword(newPassword: string, token: string | undefined) {\r\n        return instance.post<ResponseType>('auth/set-new-password', {newPassword, token})\r\n    }\r\n}\r\n\r\n//types\r\ntype ResponseType = {\r\n    info: string\r\n    error: ErrorType\r\n}\r\n\r\ntype ErrorType = {\r\n    error: string\r\n    email: string\r\n    emailRegExp: {}\r\n    in: string\r\n}","import {Dispatch} from \"redux\";\r\nimport {ActionsTypes, CheckInUserType} from \"./storeCheckIn\";\r\nimport {infoMessageAC} from \"../../p5-recoverPassword/bll/recoverPasswordReducer\";\r\nimport {authAPI} from \"../../../api/api\";\r\n\r\nexport const initialState = {\r\n    id: '1',\r\n    login: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    isSuccess: false,\r\n    rememberMe: false,\r\n    error: false,\r\n    loading: false,\r\n    errorServer: ''\r\n};\r\nconst SET_LOGIN = \"SET_LOGIN\"\r\nconst SET_ERROR = \"SET_ERROR\"\r\nconst SET_ERR_SERV = \"SET_ERR_SERV\"\r\nconst SET_PASSWORD = \"SET_PASSWORD\"\r\nconst SET_REPEAT_PASSWORD = \"SET_REPEAT_PASSWORD\"\r\nconst SET_SUCCESS = \"SET_SUCCESS\"\r\nconst SET_LOADING = \"SET_LOADING\"\r\nconst SET_REMEMBER_ME = \"SET_REMEMBER_ME\"\r\n\r\nexport const checkInReducer = (state: CheckInUserType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case  SET_LOGIN: {\r\n            return {\r\n                ...state,\r\n                login: action.login\r\n            };\r\n        }\r\n        case  SET_PASSWORD: {\r\n            return {\r\n                ...state,\r\n                password: action.password\r\n            };\r\n        }\r\n        case  SET_REPEAT_PASSWORD: {\r\n            return {\r\n                ...state,\r\n                confirmPassword: action.repeatPassword\r\n            };\r\n        }\r\n        case  SET_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isSuccess: action.isSuccess\r\n            };\r\n        }\r\n        case  SET_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            };\r\n        }\r\n        case  SET_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        }\r\n        case  SET_ERR_SERV: {\r\n            return {\r\n                ...state,\r\n                errorServer: action.err\r\n            };\r\n        }\r\n        case SET_REMEMBER_ME: {\r\n            return {\r\n                ...state,\r\n                rememberMe: action.rememberMe\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actionsCheckIn = {\r\n    setLogin: (login: string) => ({type: SET_LOGIN, login}) as const,\r\n    postPassword: (password: string) => ({type: 'SET_PASSWORD', password}) as const,\r\n    postRepeatPassword: (repeatPassword: string) => ({type: 'SET_REPEAT_PASSWORD', repeatPassword}) as const,\r\n    setSuccess: (isSuccess: boolean) => ({type: 'SET_SUCCESS', isSuccess}) as const,\r\n    setLoading: (loading: boolean) => ({type: 'SET_LOADING', loading}) as const,\r\n    setError: (error: boolean) => ({type: SET_ERROR, error}) as const,\r\n    setErrServ: (err: string) => ({type: SET_ERR_SERV, err}) as const,\r\n    postRememberMe: (rememberMe: boolean) => ({type: 'SET_REMEMBER_ME', rememberMe}) as const,\r\n}\r\n\r\nexport const createUserTC = (login: string, password: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        authAPI.signup(login, password)\r\n            .then(res => {\r\n                dispatch(actionsCheckIn.setLoading(false))\r\n                dispatch(actionsCheckIn.setSuccess(true))\r\n                setTimeout(() => dispatch(actionsCheckIn.setSuccess(false)), 3000)\r\n            })\r\n            .catch(er => {\r\n                console.log(er)\r\n                dispatch(actionsCheckIn.setLoading(false))\r\n                dispatch(actionsCheckIn.setErrServ(er.response.data.error))\r\n                setTimeout(() => dispatch(actionsCheckIn.setErrServ('')), 3000)\r\n            })\r\n        .catch(er => {\r\n            console.log(er)\r\n            dispatch(actionsCheckIn.setLoading(false))\r\n            dispatch(actionsCheckIn.setErrServ(er.response.data.error))\r\n            setTimeout(() => dispatch(actionsCheckIn.setErrServ('')), 3000)\r\n        })\r\n    }\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SBtn.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    name?: string\r\n    error?: string\r\n    red?: boolean\r\n    callFunction?: () => void //добавил для типизации функции\r\n}\r\n\r\nconst SBtn: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        callFunction,//добавил для вызова функции\r\n        red, className, name,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${s.default}`;\r\n    const nameButton = name ? name : \"click\"\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            onClick={() => callFunction ? callFunction() : \"\"} //изменил для приходящей функции\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >{nameButton}</button>\r\n    );\r\n}\r\n\r\nexport default SBtn;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SCBox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SCBox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SCBox;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SInp.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onChangeValue?: (value: string) => void // меняем в стейте на email пользователя\r\n    onEnter?: () => void\r\n    info?: string\r\n    error?: string\r\n    spanClassName?: string\r\n    value?: string\r\n};\r\n\r\nconst SInp: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        info,\r\n        error,\r\n        className, spanClassName,\r\n        onChangeValue,\r\n        value,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n        onChangeValue && onChangeValue(e.currentTarget.value) // меняем в стейте на email пользователя\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `{ ${error ? s.errorInput : s.superInput} ${className}`;\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div>\r\n                <input\r\n                    type={\"text\"}\r\n                    onChange={onChangeCallback}\r\n                    onKeyPress={onKeyPressCallback}\r\n                    className={finalInputClassName}\r\n                    value={value}\r\n\r\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                />\r\n            </div>\r\n            <div>\r\n                {error && <span className={finalSpanClassName}>{error}</span>}\r\n                {info && <span>{info}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SInp;\r\n","import React, {useState} from 'react'\r\nimport s from './CheckIn.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    actionsCheckIn, createUserTC,\r\n} from \"../bll/checkInReducer\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport SBtn from \"./SBtn/SBtn\";\r\nimport SCBox from \"./SCBox/SCBox\";\r\nimport SInp from \"./SInp/SInp\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\n\r\nexport const CheckIn: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [login, setLogin] = useState('Alex@company.com')\r\n    const [password, setPassword] = useState('123456789')\r\n    const [password2, setPassword2] = useState('123456789')\r\n    const [rememberMe, setRememberMe] = useState(false)\r\n    const stateRegistrationIsSuccess = useSelector<AppRootStateType>(state => state.registration.isSuccess)\r\n    const stateRegistrationError = useSelector<AppRootStateType>(state => state.registration.error)\r\n    const errorServer = useSelector<AppRootStateType>(state => state.registration.errorServer)\r\n    const stateLoading = useSelector<AppRootStateType>(state => state.registration.loading)\r\n    // console.log(errorServer)\r\n    const addUser = () => {\r\n        // console.log('первый', password, 'второй', password2)\r\n        if (password != '' && password2 != '' && login != '') {\r\n            if (password === password2) {\r\n                dispatch(createUserTC(login, password))\r\n                dispatch(actionsCheckIn.setLoading(true))\r\n            }\r\n        } else {\r\n            dispatch(actionsCheckIn.setError(true))\r\n            dispatch(actionsCheckIn.setSuccess(false))\r\n        }\r\n    }\r\n    //test server\r\n    // const time = Date.now()\r\n    // useEffect(() => {\r\n    //     timePing.ping(time)\r\n    // })\r\n    const onLoginChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let login = e.currentTarget.value\r\n        setLogin(login)\r\n    }\r\n\r\n    const onPasswordChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let password = e.currentTarget.value\r\n        setPassword(password)\r\n    }\r\n\r\n    const repeatOnPasswordChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let repeatPassword = e.currentTarget.value\r\n        setPassword2(repeatPassword)\r\n    }\r\n\r\n    const setRememberMeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let checkedRemember = e.currentTarget.checked\r\n        setRememberMe(checkedRemember)\r\n    }\r\n\r\n    if (stateRegistrationIsSuccess) return <Redirect to={PATH.LOGIN}/>\r\n    const errInputLogin = (login === '' && stateRegistrationError) ? 'Обязательное поле' : '';\r\n    const errInputPas = (password === '' && stateRegistrationError) ? 'Обязательное поле' : '';\r\n    const errInputPas2 = (password2 === '' && stateRegistrationError) ? 'Обязательное поле' : '';\r\n    return (\r\n        <div className={s.checkInBlock}>\r\n            <h2 className={s.checkInTitle}>Registration</h2>\r\n            {stateLoading\r\n                ? <div style={{color: 'orange'}}>loading...</div>\r\n                : (stateRegistrationError || errorServer)\r\n                    ? <div style={{color: 'red'}}> {errorServer ? errorServer : \"УПС ошибочка...\"}</div>\r\n                    : stateRegistrationIsSuccess\r\n                        ? <div style={{color: 'lime'}}>Success!</div>\r\n                        : <div><br/></div>\r\n            }\r\n\r\n            <label>Email:\r\n                <label className={s.help}>Example: Alex@company.com</label>\r\n                <SInp\r\n                    error={errInputLogin}\r\n                    value={login}\r\n                    onChange={onLoginChange}\r\n                    type={'email'}\r\n                    placeholder={'Alex@company.com'}/>\r\n            </label>\r\n            <label>Password:\r\n                <label className={s.help}>Example: Must be between\r\n                    8-20 character </label>\r\n                <SInp\r\n                    error={errInputPas}\r\n                    value={password}\r\n                    onChange={onPasswordChange}\r\n                    // type={'password'}\r\n                    placeholder={'password'}\r\n                />\r\n            </label>\r\n            <label>Confirm password:\r\n                <label className={s.help}>Example: Must be between\r\n                    8-20 character </label>\r\n                <SInp\r\n                    error={errInputPas2}\r\n                    value={password2}\r\n                    onChange={repeatOnPasswordChange}\r\n                    // type={'password'}\r\n                    placeholder={'confirm password'}\r\n                />\r\n            </label>\r\n            <div className={s.checkInBtn}>\r\n                <SBtn callFunction={addUser}\r\n                      name={'Register'}\r\n                      disabled={!!stateLoading}\r\n\r\n                />\r\n                <SCBox onChange={setRememberMeChange}/>\r\n            </div>\r\n            <a href=\"#/login\">Sign In</a>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    info?: string\r\n    error?: string\r\n    spanClassName?: string\r\n    value?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        info,\r\n        error,\r\n        className, spanClassName,\r\n        value,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `{ ${error ? s.errorInput : s.superInput} ${className}`;\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div>\r\n                <input\r\n                    type={type}\r\n                    onChange={onChangeCallback}\r\n                    onKeyPress={onKeyPressCallback}\r\n                    className={finalInputClassName}\r\n                    value={value}\r\n\r\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                />\r\n            </div>\r\n            <div>\r\n                {error && <span className={finalSpanClassName}>{error}</span>}\r\n                {info && <span>{info}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SuperInputText;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    name?: string\r\n    error?: string\r\n    red?: boolean\r\n    callFunction?: () => void //добавил для типизации функции\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        callFunction,//добавил для вызова функции\r\n        red, className, name,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${s.default}`;\r\n    const nameButton = name ? name : \"click\"\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            onClick={() => callFunction ? callFunction() : \"\"} //изменил для приходящей функции\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >{nameButton}</button>\r\n    );\r\n}\r\n\r\nexport default SuperButton;","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../../api/api\";\r\n\r\nconst initialState = {\r\n    name: '',\r\n    isAuth: false,\r\n    errorText: ''\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET_ERROR-TEXT':\r\n            return {...state, errorText: action.text}\r\n        case 'login/SET-NAME':\r\n            return {...state, name: action.name}\r\n        case 'login/SET-IS-LOGGED-IN':\r\n            return {...state, isAuth: action.value}\r\n        case 'login/SET_ME':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n//actions\r\nexport const setIsLoggedInAC = (value: boolean) => ({type: 'login/SET-IS-LOGGED-IN', value} as const)\r\nexport const setNameAC = (name: string) => ({type: 'login/SET-NAME', name} as const)\r\nexport const setErrorTextAC = (text: string) => ({type: 'login/SET_ERROR-TEXT', text} as const)\r\nconst setAuthUserDataAC = (name: string, isAuth: boolean) => ({\r\n    type: 'login/SET_ME',\r\n    payload: {name, isAuth}\r\n} as const)\r\n\r\n// thunk\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch<ActionsType>) => {\r\n    authAPI.login(data)\r\n        .then((res) => {\r\n                dispatch(setNameAC(res.data.name))\r\n                dispatch(setIsLoggedInAC(true))\r\n            }\r\n        )\r\n        .catch(err => {\r\n            dispatch(setIsLoggedInAC(false))\r\n            dispatch(setErrorTextAC(err.response.data.error))\r\n        })\r\n}\r\n\r\nexport const logOutTC = () => (dispatch: Dispatch) => {\r\n    authAPI.logOut()\r\n        .then(() => {\r\n                dispatch(setIsLoggedInAC(false))\r\n            }\r\n        )\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n            console.log(error)\r\n        })\r\n}\r\n\r\nexport const getAuthUserDataTC = () => (dispatch: Dispatch) => {\r\n    authAPI.authMe()\r\n        .then(res => {\r\n            dispatch(setAuthUserDataAC(res.data.name, true))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console')\r\n        })\r\n}\r\n\r\n//types\r\ntype InitialStateType = typeof initialState\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nexport type loginResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport type setIsLoggedInACType = ReturnType<typeof setIsLoggedInAC>\r\nexport type setErrorTextACType = ReturnType<typeof setErrorTextAC>\r\nexport type setNameACType = ReturnType<typeof setNameAC>\r\nexport type setMeACType = ReturnType<typeof setAuthUserDataAC>\r\ntype ActionsType =\r\n    setIsLoggedInACType\r\n    | setErrorTextACType\r\n    | setNameACType\r\n    | setMeACType\r\n","import React, {useState} from 'react'\r\nimport SuperInputText from \"../../../components/SuperComponents/SuperInput/SuperInputText\";\r\nimport s from './login.module.css'\r\nimport SuperCheckbox from \"../../../components/SuperComponents/SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../../../components/SuperComponents/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from '../../../app/store';\r\nimport {loginTC} from \"../bll/loginReducer\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    let [email, setEmail] = useState<string>('nya-admin@nya.nya')\r\n    let [password, setPassword] = useState<string>('1qazxcvBG')\r\n    let [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const error = useSelector<AppRootStateType, string>(state => state.login.errorText)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.flexMainContainer}>\r\n            <h3>Login Page</h3>\r\n            <div>Email</div>\r\n            <div>\r\n                <SuperInputText onChangeText={(value) => {\r\n                    setEmail(value)\r\n                }}\r\n                                value={email}\r\n                                error={error}/>\r\n            </div>\r\n\r\n            <div>Password</div>\r\n            <div>\r\n                <SuperInputText value={password}\r\n                                onChangeText={(value) => {\r\n                                    setPassword(value)\r\n                                }}/>\r\n            </div>\r\n\r\n            <div>\r\n                <span>Remember me</span>\r\n                <SuperCheckbox checked={rememberMe}\r\n                               onChangeChecked={(value) => {\r\n                                   setRememberMe(value)\r\n                               }}/>\r\n            </div>\r\n\r\n            <div>\r\n                <SuperButton onClick={() => {\r\n                    dispatch(loginTC({email, password, rememberMe}))\r\n                }}\r\n                             name={\"Sign in\"}\r\n                             error={error}\r\n                />\r\n            </div>\r\n\r\n            <div className={s.forgot}>\r\n                <div>\r\n                    <NavLink to={PATH.PASSWORD_RECOVERY}>forgot password?</NavLink>\r\n                </div>\r\n                <div>\r\n                    <NavLink to={PATH.CHECK_IN}>registration</NavLink>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../../api/api\";\r\n\r\nconst initialState = {\r\n    errorPassMessage: \"\",\r\n    passwordStatus: false,\r\n    status: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"newPassword/ERROR_MESSAGE\": {\r\n            return {...state, errorPassMessage: action.errorPassMessage}\r\n        }\r\n        case \"newPassword/SET_PASS_STATUS\": {\r\n            return {...state, passwordStatus: action.passwordStatus}\r\n        }\r\n        case \"newPassword/SET_STATUS\": {\r\n            return {...state, status: action.status}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// action\r\nexport const errorPassMessageAC = (errorPassMessage: string) => ({type: \"newPassword/ERROR_MESSAGE\", errorPassMessage} as const);\r\nexport const setPasswordStatusAC = (passwordStatus: boolean) => ({type: \"newPassword/SET_PASS_STATUS\", passwordStatus} as const);\r\nexport const setServerStatusAC = (status: boolean) => ({type: \"newPassword/SET_STATUS\", status} as const);\r\n\r\n\r\n// thunks\r\nexport const newPasswordTC = (newPassword: string, token: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(setServerStatusAC(true))\r\n        console.log(newPassword)\r\n        console.log(token)\r\n        authAPI.changePassword(newPassword, token)\r\n            .then((res) => {\r\n                dispatch(setServerStatusAC(false))\r\n                console.log(\"в then все ок\")\r\n            })\r\n            .catch((error) => {\r\n                dispatch(errorPassMessageAC(error.message))\r\n                console.log(\"error \" + error.message)\r\n            })\r\n            .finally(() => {\r\n                dispatch(setPasswordStatusAC(true))\r\n            })\r\n    }\r\n}\r\n\r\n\r\n// type\r\nexport type errorPassMessageActionType = ReturnType<typeof errorPassMessageAC>\r\nexport type setPasswordStatusActionType = ReturnType<typeof setPasswordStatusAC>\r\nexport type setServerStatusActionType = ReturnType<typeof setServerStatusAC>\r\n\r\ntype ActionsType = errorPassMessageActionType | setPasswordStatusActionType | setServerStatusActionType\r\ntype ThunkDispatch = Dispatch<ActionsType>","export default __webpack_public_path__ + \"static/media/PYh.b3402305.gif\";","import React from 'react'\r\nimport s from './preloader.module.css'\r\nimport nya from './PYh.gif'\r\n\r\n\r\nconst Preloader = () => {\r\n\r\n    return (\r\n        <div className={s.preloader}> {<img src={nya} alt={''}/>} </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import React, {useState} from 'react'\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport SuperInputText from \"../../../components/SuperComponents/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../../../components/SuperComponents/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {errorPassMessageAC, newPasswordTC} from \"../bll/newPasswordReducer\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\nimport Preloader from \"../../../components/preloader/Preloader\";\r\nimport s from \"./newPassword.module.css\"\r\n\r\n\r\nexport const NewPassword = () => {\r\n\r\n    const [newPassword, setNewPassword] = useState<string>('')\r\n    const [newPassword2, setNewPassword2] = useState<string>('')\r\n    const {token} = useParams<{ token: string }>()\r\n    const passwordStatus = useSelector<AppRootStateType, boolean>(state => state.newPassword.passwordStatus)\r\n    const errorPassMessage = useSelector<AppRootStateType, string>(state => state.newPassword.errorPassMessage)\r\n    const status = useSelector<AppRootStateType, boolean>(state => state.newPassword.status)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let newPassword = e.currentTarget.value\r\n        setNewPassword(newPassword)\r\n    }\r\n\r\n    const repeatOnChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let newPassword2 = e.currentTarget.value\r\n        setNewPassword2(newPassword2)\r\n    }\r\n\r\n    const onChangePassword = () => {\r\n        if (newPassword.length > 7) {\r\n            if (newPassword === newPassword2) {\r\n                dispatch(newPasswordTC(newPassword, token))\r\n            } else {\r\n                (dispatch(errorPassMessageAC(\"Passwords don't match\")))\r\n                setTimeout(() => dispatch(errorPassMessageAC('')), 3000)\r\n            }\r\n        } else {\r\n            dispatch(errorPassMessageAC(\"Password must be 8 or more characters\"))\r\n            setTimeout(() => dispatch(errorPassMessageAC('')), 3000)\r\n        }\r\n    }\r\n\r\n    if (passwordStatus) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <h3> NewPassword </h3>\r\n            {status ? <Preloader/> : \"\"}\r\n            <div> Enter your new password </div>\r\n            <SuperInputText type={'password'} placeholder={'password'} value={newPassword} onChange={onChange}/>\r\n            <div> Repeat your new password </div>\r\n            <SuperInputText type={'password'} placeholder={'password'} value={newPassword2} onChange={repeatOnChange}/>\r\n            <div> {errorPassMessage} </div>\r\n            <SuperButton name={'New Password'} callFunction={onChangePassword}/>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport SuperButton from \"../../../components/SuperComponents/SuperButton/SuperButton\";\r\nimport {getAuthUserDataTC, logOutTC} from \"../../p1-login/bll/loginReducer\";\r\nimport {PATH} from \"../../../components/routes/Routes\";\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useDispatch()\r\n    const name = useSelector<AppRootStateType, string>(state => state.login.name)\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n\r\n\r\n    useEffect(() => {\r\n        if (isAuth) return\r\n        dispatch(getAuthUserDataTC())\r\n    }, [])\r\n\r\n\r\n    if (!isAuth) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    return (\r\n        <>\r\n            Profile user {name}\r\n            <div>\r\n                <SuperButton name={'log out'} onClick={() => {\r\n                    dispatch(logOutTC())\r\n                }}/>\r\n            </div>\r\n        </>\r\n    )\r\n}","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../../../api/api\";\r\n\r\nconst initialState = {\r\n    email: null as null || \"\",\r\n    from: \"test-front-admin <ai73a@yandex.by>\",\r\n    message: `<div style=\"background-color: #00ff00; padding: 15px\">password recovery link: <a href='http://localhost:3000/Friday-project#/new-password/$token$'>link</a></div>`,\r\n    errorMessage: \"\",\r\n    infoMessage: \"\",\r\n    status: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const recoverPasswordReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case \"recoverPassword/CHANGE_EMAIL\": { // меняет значение email на пользовательский\r\n            return {...state, email: action.email}\r\n        }\r\n        case \"recoverPassword/SET_STATUS\": { // отображает крутилку :)\r\n            return {...state, status: action.status}\r\n        }\r\n        case \"recoverPassword/INFO_MESSAGE\": { // сообщение при успехе :р\r\n            return {...state, infoMessage: action.infoMessage}\r\n        }\r\n        case \"recoverPassword/ERROR_MESSAGE\": { // сообщение при наличии ошибки -_-\r\n            return {...state, errorMessage: action.errorMessage}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// action\r\nexport const changeEmailAC = (email: string) => ({type: \"recoverPassword/CHANGE_EMAIL\", email} as const);\r\nexport const setStatusAC = (status: boolean) => ({type: \"recoverPassword/SET_STATUS\", status} as const);\r\nexport const infoMessageAC = (infoMessage: string) => ({type: \"recoverPassword/INFO_MESSAGE\", infoMessage} as const);\r\nexport const errorMessageAC = (errorMessage: string) => ({type: \"recoverPassword/ERROR_MESSAGE\", errorMessage} as const);\r\n\r\n// thunks\r\nexport const recoverPasswordTC = (email: string, from: string, message: string) => {\r\n    return (dispatch: ThunkDispatch) => {\r\n        dispatch(changeEmailAC(email))\r\n        console.log(email)\r\n        dispatch(setStatusAC(true))\r\n        authAPI.recoverPassword(email, from, message)\r\n            .then((res) => {\r\n                dispatch(infoMessageAC(res.data.info))\r\n                console.log(\"then \" + res.data.info)\r\n                setTimeout(() => dispatch(infoMessageAC('')), 3000)\r\n            })\r\n            .catch((error) => {\r\n                dispatch(errorMessageAC(error.response.data.error))\r\n                console.log(\"error \" + error.response.data.error)\r\n                setTimeout(() => dispatch(errorMessageAC('')), 3000)\r\n            })\r\n            .finally(() => {\r\n                dispatch(setStatusAC(false))\r\n            })\r\n    }\r\n}\r\n\r\n// type\r\nexport type sentEmailActionType = ReturnType<typeof changeEmailAC>\r\nexport type setStatusActionType = ReturnType<typeof setStatusAC>\r\nexport type infoMessageActionType = ReturnType<typeof infoMessageAC>\r\nexport type errorMessageActionType = ReturnType<typeof errorMessageAC>\r\n\r\ntype ActionsType = sentEmailActionType | setStatusActionType | infoMessageActionType | errorMessageActionType\r\ntype ThunkDispatch = Dispatch<ActionsType>","import React, {useState} from 'react'\r\nimport s from './../recoverPassword.module.css'\r\nimport SuperInputText from \"../../../components/SuperComponents/SuperInput/SuperInputText\";\r\nimport SuperButton from \"../../../components/SuperComponents/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {recoverPasswordTC} from \"../bll/recoverPasswordReducer\";\r\nimport {AppRootStateType} from \"../../../app/store\";\r\nimport Preloader from \"../../../components/preloader/Preloader\";\r\n\r\nexport const RecoverPassword = () => {\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState<string>('')\r\n\r\n    const from = useSelector<AppRootStateType, string>(state => state.recoverPassword.from)\r\n    const message = useSelector<AppRootStateType, string>(state => state.recoverPassword.message)\r\n    const info = useSelector<AppRootStateType, string>(state => state.recoverPassword.infoMessage)\r\n    const error = useSelector<AppRootStateType, string>(state => state.recoverPassword.errorMessage)\r\n    const status = useSelector<AppRootStateType, boolean>(state => state.recoverPassword.status)\r\n    const recoverPassword = (setEmail: string, from: string, message: string) => {\r\n        dispatch(recoverPasswordTC(setEmail, from, message))\r\n    }\r\n\r\n    const onChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let email = e.currentTarget.value\r\n        setEmail(email)\r\n    }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            { status ? <Preloader/> : \"\" } {/*// крутилка*/}\r\n            <h3> Enter your email </h3>\r\n            <div>\r\n                <SuperInputText type={'text'}\r\n                                value={email}\r\n                                info={info}\r\n                                error={error}\r\n                                onChange={onChange}/>\r\n            </div>\r\n            <div>\r\n                <SuperButton name={\"Recover password\"}\r\n                             error={error}\r\n                             onClick={() => recoverPassword(email, from, message)}\r\n                             disabled={status}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Error = () => {\r\n    return (\r\n        <>\r\n            Error\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport s from './table.module.css'\r\n\r\nexport const Packs = () => {\r\n    return (\r\n        <>\r\n            Packs\r\n            table\r\n            <div className={s.table}>\r\n                <div className={s.tableHeader}>\r\n                    <div className={s.tableHeader_packsName}>Name</div>\r\n                    <div className={s.tableHeader_price}>cardsCount</div>\r\n                    <div className={s.tableHeader_price}>cardsCount</div>\r\n                    <div className={s.tableHeader_buttonAdd}>\r\n                        <button>add</button>\r\n                    </div>\r\n                </div>\r\n                <div className={s.tableBody}>\r\n                    <div className={s.tableBody_item}>\r\n                        <div className={s.tableBody_item_name}>\"name\"</div>\r\n                        <div className={s.tableBody_item_cardsCount}>\"cardsCount\"</div>\r\n                        <div className={s.tableBody_item_updated}>\"updated\"</div>\r\n                        <div className={s.tableBody_item_buttons}>\r\n                            <button>del</button>\r\n                            <button>update</button>\r\n                            <a>cards</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Cards = () => {\r\n    return (\r\n        <>\r\n            Cards\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {CheckIn} from \"../../pages/p2-checkIn/ui/CheckIn\";\r\nimport {Login} from \"../../pages/p1-login/ui/Login\";\r\nimport {NewPassword} from \"../../pages/p6-newPassword/ui/NewPassword\";\r\nimport {Profile} from \"../../pages/p3-profile/ui/Profile\";\r\nimport {RecoverPassword} from \"../../pages/p5-recoverPassword/ui/RecoverPassword\";\r\nimport {Error} from \"../../pages/p4-404/ui/Error\";\r\nimport {Packs} from \"../../pages/p3-packs/ui/Packs\";\r\nimport {Cards} from \"../../pages/p3-cards/ui/Cards\";\r\n\r\nexport const PATH = {\r\n    HOME_PAGE: '/',\r\n    LOGIN: '/login',\r\n    NEW_PASSWORD: '/new-password/:token',\r\n    CHECK_IN: '/check-in',\r\n    PROFILE: '/profile',\r\n    PASSWORD_RECOVERY: '/recover_password',\r\n    TEST_COMPONENT: '/testComponent',\r\n    PACKS: '/packs',\r\n    CARDS: '/cards',\r\n    ERROR_404: '/404'\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path={PATH.CHECK_IN} render={() => <CheckIn/>}/>\r\n                <Route exact path={['/', PATH.LOGIN]} render={() => <Login/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword/>}/>\r\n                <Route exact path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route exact path={PATH.PASSWORD_RECOVERY} render={() => <RecoverPassword/>}/>\r\n                <Route exact path={PATH.PACKS} render={() => <Packs/>}/>\r\n                <Route exact path={PATH.CARDS} render={() => <Cards/>}/>\r\n                {/*<Route exact path={PATH.TEST_COMPONENT} render={() => <Test/>}/>*/}\r\n                <Route path={PATH.ERROR_404} render={() => <Error/>}/>\r\n                <Redirect from={'*'} to={PATH.ERROR_404}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {PATH} from '../routes/Routes'\r\nimport s from './header.module.css'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={s.header}>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.CHECK_IN}>registration</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.LOGIN}>login</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.NEW_PASSWORD}>new password</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.PROFILE}>profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.PASSWORD_RECOVERY}>recover password</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.PACKS}>packs</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={PATH.CARDS}>cards</NavLink>\r\n            </div>\r\n            {/*<div className=\"item\">*/}\r\n            {/*    <NavLink to={PATH.TEST_COMPONENT}>Test</NavLink>*/}\r\n            {/*</div>*/}\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {HashRouter} from 'react-router-dom';\nimport {Routes} from \"../components/routes/Routes\";\nimport {Header} from \"../components/header/Header\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <>\n                <HashRouter>\n                    <Header/>\n                    <Routes/>\n                </HashRouter>\n            </>\n\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {}\r\nexport const profileReducer = (state= initialState, action: any) => {\r\n    switch (action.type) {\r\n        case \"\": {\r\n            return {}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {loginReducer} from \"../pages/p1-login/bll/loginReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {checkInReducer} from \"../pages/p2-checkIn/bll/checkInReducer\";\r\nimport {profileReducer} from \"../pages/p3-profile/bll/profileReducer\";\r\nimport {recoverPasswordReducer} from \"../pages/p5-recoverPassword/bll/recoverPasswordReducer\";\r\nimport {newPasswordReducer} from \"../pages/p6-newPassword/bll/newPasswordReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    registration: checkInReducer,\r\n    profile: profileReducer,\r\n    recoverPassword: recoverPasswordReducer,\r\n    newPassword: newPasswordReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app/App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./app/store\";\r\n\r\n// test\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}